{"posts":[{"title":"","text":"基于随机梯度的不确定性拓扑优化方法 Topology Optimization under Uncertainty using a Stochastic Gradient-based Approach Subhayan De, Jerrad Hampton, Kurt Maute, and Alireza Doostan (2019) https://arxiv.org/pdf/1902.04562.pdf 程序： 基于随机梯度的不确定性拓扑优化方法Python中的随机梯度下降算法的实现https://github.com/CU-UQ/SGD 通过D最优设计和压缩感知进行的稀疏多项式混沌展开https://github.com/CU-UQ/DOPT\\_PCE 生成相干最佳样本 相干最优抽样方法","link":"/2023/03/07/GitHub_UQ%20%E8%AE%B0%E5%BD%95/"},{"title":"新的文章","text":"学习如何搭建博客网站","link":"/2023/03/07/%E6%96%B0%E7%9A%84%E6%96%87%E7%AB%A0/"},{"title":"","text":"对于一维多项式插值，相关结果比较完备：任意N个不同的配置点可以唯一决定一个N-1阶多项式。并且我们知道，Gauss点具有最高的代数精度和良好的插值稳定性。然而，高维多项式插值与一维插值完全不同。首先，任意N个不同配置点的多项式插值未必唯一。另外，对于高维插值问题，在未明确配置点的位置之前，无法准确确定插值多项式的阶数。可见，高维插值问题是相当不平凡的。除了基于一维插值的张量型插值，相关的结果非常稀少。文献[104,105]引入了“最小插值”的概念来处理高维插值问题。近年来，文献[106,107]将这个框架推广到UQ的计算之中。 104 Boor C D, Ron A. On multivariate polynomial interpolation. Constr Approx, 1990, 6: 287–302105 Boor C D, Ron A. Computational aspects of polynomial interpolation in several variables. Math Comp, 1992, 58:705–727 106 Narayan A, Xiu D. Stochastic collocation methods on unstructured grids in high dimensions via interpolation. SIAMJ Sci Comput, 2012, 34: A1729–A1752107 Narayan A, Xiu D. Constructing nested nodal sets for multivariate polynomial interpolation. SIAM J Sci Comput, 2013, 35: A2293–A2315 上面的讨论给出了高维空间中对于任意分布配置点的一种多项式插值策略。这个策略引入了一般的测度ρ，当ρ是Gauss测度时，上面的最小阶数插值退化为文献[104，105]中介绍的多项式插值。同时，我们注意到，配置点的位置实际上决定了多项式插值空间。最后提出一个更接近于实际应用的问题：自适应选择插值节点，即假设我们已经使用了N−1个配置点进行插值，那么，第N个配置点应该如何选？","link":"/2023/03/07/002_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/%E9%98%85180827%EF%BC%9A%E6%B1%A4%E6%B6%9B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"},{"title":"","text":"基于概率盒理论的结构不确定性传播分析_肖 钊_博 基于泰勒展开的概率盒的不确定传播算法_肖 钊 摘要： 传统的不确定传播分析中的不确定参数是通过概率方法进行量化，但是获取精确的概率分布需要大量的重复试验。在实际的工程问题中因为试验条件和成本的限制，很难进行大量的重复试验。本文运用概率盒(Probability boxes, 简称P-boxes)理论来描述这类信息不全导致的不确定性。P-boxes 理论可以看作是概率理论和区间理论的结合，它能同时描述随机不确定性和认知不确定性。由于P-boxes 中两种不确定性的同时存在，在进行不确定传播分析中需要用到双层运算或大量的区间运算，这使得它的计算量远大于传统概率的不确定传播分析算法。为了提高计算效率的问题，文中提出了一种新的不确定传播分析算法。一种新的参数 P-boxes 模型首先被定义，普通 P-boxes 被转换为参数 P-boxes。基于区间泰勒展开理论，不确定传播后参数 P-boxes 对应的近似均值和方差被计算，分析均值和方差可确定不确定传播后的 P-boxes。为了验证提出方法的有效性，三个数值算例被研究。 关键字： 概率盒；认知不确定性；随机不确定性；泰勒展开；不确定传播","link":"/2023/03/07/002_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/%E9%98%85180826%EF%BC%9A%E5%9F%BA%E4%BA%8E%E6%A6%82%E7%8E%87%E7%9B%92%E7%90%86%E8%AE%BA%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E4%BC%A0%E6%92%AD%E5%88%86%E6%9E%90_%E8%82%96%E9%92%8A/"},{"title":"","text":"稳健优化设计中代理模型不确定性的研究_熊芬芬 10.3901/JME.2014.19.136 作者简介：熊芬芬(通信作者)，女，1982 年出生，讲师，北京理工大学宇航学院。主要研究方向为飞行器不确定性多学科设计优化、不确定性量化。E-mail：fenfenx@bit.edu.cn 代理模型的应用解决了稳健设计中计算量大的难题，但由于代理模型与真实模型间存在误差(代理模型的不确定性)，而传统的稳健设计忽视了这种不确定性，必然会带来一定的设计误差。因此，针对稳健设计提出了一种基于蒙特卡洛抽样的代理模型不确定性的量化方法，在传统仅考虑参数不确定性的基础上，额外计入代理模型的不确定性对设计的影响。 JIN 等[8]通过大量算例对代理模型的不确定性对优化设计的影响进行了研究，得出代理模型的不确定性对优化设计具有重要影响，在稳健设计中尤为严重。 [8] JIN R，DU X P，CHEN W. The use of metamodeling techniques for optimization under uncertainty[J]. Structural and Multidisciplinary Optimization，2003，25(2)：99-116. 增加样本的数量可以改善代理模型的精度，对于那些没有样本分布的区域，代理模型的不确定性随着样本的增加虽然在减小，但却无法消除，必然会对设计带来一定影响。 参数不确定性和代理模型不确定性对y的影响不是简单的线性叠加关系。可以发现，与真实最优解相比，本文提出的方法所得结果(两种不确定性)与真实最优解非常接近，而传统忽视代理模型不确定性的方法(参数不确定性)所得最优解明显偏离于真实最优解，提出的方法明改善了精度。 (1) 传统的基于代理模型的稳健设计方法，忽视了代理模型的不确定性，必然会带来一定的设计误差。于此，本文基于 Kriging 代理模型理论提出了一种在稳健设计中同时考虑参数不确定性和代理模型不确定性的方法。 (2) 将 Kriging 代理模型在每个设计点处的预测值看作一个高斯正态分布，利用蒙特卡洛方法得到考虑两种不确定性下性能函数不确定性的量化。 (3) 通过对提出的方法和传统方法进行对比研究，发现提出的方法能够得到较传统方法更精确的最优解，证实了所提方法的有效性和优势。 [1] 姜亚楠，王和平. 基于灵敏度分析的飞行器稳健设计优化方法[J]. 航空计算技术，2009，39(5)：48-51 [2] 蒙文巩，马东立. 飞机系列机翼气动特性稳健匹配优化设计[J]. 北京航空航天大学学报，2013，39(1)：126-131. [3] 张珍铭，丁运亮，刘毅. 升力体外形设计的代理模型优化方法[J]. 宇航学报，2011，32(7)：1435-1444. [4] MARTINELLI M ， DUCIGNEAU R. On the use of second-order derivatives and metamodel-based Monte-Carlo for uncertainty estimation in aerodynamics [J]. Computers &amp; Fluids，2010，399(6)：953-964. [5] 刘纪涛，刘飞，张为华. Kriging 模型在固体火箭发动机装药可靠性分析中的应用[J]. 航空动力学报，2010，25(1)：193-197. [6] 孙光永，李光耀，龚志辉. 基于代理模型的变复杂度方法在板料成形优化中的应用[J]. 机械工程学报，2009，45(9)：201-209. [7] 谷海涛，林扬，胡志强，等. 基于代理模型的水下滑翔机机翼设计优化方法[J]. 机械工程学报，2009，45(12)：7-14. [8] JIN R，DU X P，CHEN W. The use of metamodeling techniques for optimization under uncertainty[J]. Structural and Multidisciplinary Optimization，2003，25(2)：99-116. [9] TANG Q，LAU Y，HU S，et al. Response surface methodology using Gaussian processes ： Towards optimizing the trans-stilbene epoxidation over Co2+–NaXcatalysts [J]. Chemical Engineering Journal，2010，156 (2)：423-431. [10] XIONG Y，CHEN W，TASUI K. A new variable-fidelity optimization framework based on model fusion and objective-oriented sequential sampling[J]. Journal of Mechanical Design，2008，130(1)：111401. [11] KLEIJNEN J P. Kriging metamodeling in simulation：a review [J]. European Journal of Operational Research，2009，192(3)：707-716. [12] PICHENY V，GINSBOURGER D，ROUSTANT O，et al. Adaptive designs of experiments for accurate approximation of a target region [J]. Journal of Mechanical Design，2010，132(7)：071008.","link":"/2023/03/07/002_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/%E9%98%85180825%EF%BC%9A%E7%A8%B3%E5%81%A5%E4%BC%98%E5%8C%96%E8%AE%BE%E8%AE%A1%E4%B8%AD%E4%BB%A3%E7%90%86%E6%A8%A1%E5%9E%8B%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E7%9A%84%E7%A0%94%E7%A9%B6_%E7%86%8A%E8%8A%AC%E8%8A%AC/"},{"title":"","text":"带翼型围带涡轮叶栅冲角适应性的实验与数值研究对涡轮机械而言，叶顶间隙泄漏流动会带来两方面的影响：一是减少了流经叶片通道做功气体的流量，使涡轮输出功降低；二是泄漏流体在间隙内发生掺混及离开间隙后与主流相互作用会恶化涡轮叶栅的气动性能。因此，控制涡轮叶顶间隙泄漏流动是改善涡轮叶栅流场结构、减少气动损失、提高涡轮机整体效率的有效手段。 由于被动控制技术不需要从外部注入能量，可以降低制造成本与加工难度，所以目前控制间隙泄漏多采用如肋条叶尖、翼梢小翼、改变叶顶形状、端壁开槽处理等方法。很多学者对围带以及翼梢小翼叶顶结构做了深入的研究。由于围带能够抑制泄漏涡的产生，使涡轮气动性能显著升高，此外围带可改善叶片的振动特性;翼梢小翼可以降低泄漏流动的驱动压差，降低泄漏流流量继而削弱泄漏涡强度。但是，围带较大的接触面积与质量限制了其在高温、高压涡轮中的应用。小翼的换热面积虽小于围带，但对泄漏流动的控制能力却有限，并且各小翼之间没有衔接，其振动性能有待考。就作者所知，还未有小翼被工程实际所使用。基于小翼与围带优缺点，本文设计了一翼型围带叶顶结构，此结构旨在改善涡轮叶栅气动性能的同时，兼顾叶顶热负荷的要求。 实际涡轮运行中，受上游叶栅尾迹的影响，动叶进口气流很难与设计冲角完全一致。冲角变化往往会改变叶片载荷分布，这将影响叶栅内低能流体的迁移规律，从而影响二次流涡系的生成和发展，并最终使叶栅气动性能发生改变。所以通过研究冲角对叶栅气动性能的影响机理，对改善和利用叶栅二次流具有重要意义。 早期，Yamamoto等人通过实验研究了冲角变化对一涡轮叶栅三维流动的影响，研究表明，正冲角时，叶栅内横向压差增加，附面层低能流体向吸力面迁移的现象更剧烈，强度增加的通道涡恶化了吸力面后半部分的展向二次流流动，使叶栅损失增加；大负冲角时，叶栅通道前缘，压力面附近低能流体发生分离，这一前缘分离涡系沿压力面向下游发展，是导致损失增大的主要因素。通过对一超高负荷涡轮叶栅冲角适应性的数值模拟研究，Tsujitad等人发现，相较于负冲角，正冲角对二次流涡系强度与损失增长的影响更剧烈。这主要是由于正冲角显著影响了吸力面前半部分附面层的发展。冲角增加，叶片前缘滞止点向前缘压力面移动，导致前缘吸力面压力急剧下降，产生从叶片前缘到吸力面中部的逆压梯度。此逆压梯度使吸力面的叶型损失急剧增长。同时在叶栅通道前部，正冲角诱导出一顺时针旋转的旋涡，此旋涡与压力面马蹄涡及通道涡融合，导致二次流损失剧增，这一现象与Yamamoto的实验结果相一致。同时，商宇等等结合实验与数值计算，研究了多组冲角对涡轮叶栅气动性能的影响机理。由于其叶栅前缘半径较大，冲角从+40变化至-41“时，总压损失系数变化幅度不大；而在冲角高达-61“时，压力面边界层出现与Yamamoto相似的流动分离。总体而言，其叶栅具有良好的变冲角气动性能。此外，周逊冯子明和王祥锋等人分别涡轮动、静叶栅的冲角适应性做了实验、数值研究。其结果都表明正冲角会使叶栅损失增加。并且周逊还指出，冲角增加时，泄漏流动的主导地位将让位干通道涡或通道内的横向流动。","link":"/2023/03/07/002_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/%E9%98%85190821%EF%BC%9A%E5%B8%A6%E7%BF%BC%E5%9E%8B%E5%9B%B4%E5%B8%A6%E6%B6%A1%E8%BD%AE%E5%8F%B6%E6%A0%85%E5%86%B2%E8%A7%92%E9%80%82%E5%BA%94%E6%80%A7%E7%9A%84%E5%AE%9E%E9%AA%8C%E4%B8%8E%E6%95%B0%E5%80%BC%E7%A0%94%E7%A9%B6/"},{"title":"","text":"Uncertainty Quantification of Heat Transfer for a Highly Loaded Gas Turbine Blade Endwall Using Polynomial Chaos 西交 宋立明 songlm@mail.xjtu.edu.cn 端壁圆角半径及切角，来流马赫数、湍流强度 流动方向的平均努谢尔数 端壁努谢尔数 进口及前缘涡量 涡核分布","link":"/2023/03/07/002_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/%E9%98%85190923%EF%BC%9A%E9%AB%98%E8%B4%9F%E8%8D%B7%E7%87%83%E6%B0%94%E8%BD%AE%E6%9C%BA%E5%8F%B6%E7%89%87%E7%AB%AF%E5%A3%81%E4%BC%A0%E7%83%AD%E7%9A%84%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%B7%B7%E6%B2%8C%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E9%87%8F%E5%8C%96_%E5%AE%8B%E7%AB%8B%E6%98%8E/"},{"title":"","text":"不确定规划的研究现状及其发展前景_彭 锦 摘 要:本文简要介绍不确定规划理论、算法以及应用研究的现状 , 描绘了不确定规划理论的基本框架。 首先介绍处理各种不确定性的数学工具;接着阐述不确定规划的建模机理与求解方法;然后提出了不确定规划中值得进一步研究的一些问题;最后展望了不确定规划的发展前景。 关键词:最优化;不确定规划;模糊集;粗糙集 不确定环境下的优化理论———不确定规划 不确定规划[16] [26] 是处理各种不确定环境下的优化问题的理论工具 ,它提供了随机规划 、模糊规划 、粗糙规划以及模糊随机规划建模与求解的统一原理。 粗糙性是逐渐引起人们关注的一类新型不确定性 。粗糙集(系统)也是一种不确定系统 。 粗糙集理论最早是由波兰数学家 Pawlak[ 33] 在 1982 年提出的,现在已被成功应用于数据挖掘 、机器学习 、决策分析 、模式识别 、专家系统、统计分类、图象处理等领域 ,是当前国际上正在兴起的一个研究新热点。用不确定规划方法研究粗糙系统中的优化问题, 其意义是不言而喻的 。为了定量描述粗糙系统, 于是有必要引进粗糙变量及有关的概念。","link":"/2023/03/07/002_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/%E9%98%85180828%EF%BC%9A%E4%B8%8D%E7%A1%AE%E5%AE%9A%E8%A7%84%E5%88%92%E7%9A%84%E7%A0%94%E7%A9%B6%E7%8E%B0%E7%8A%B6%E5%8F%8A%E5%85%B6%E5%8F%91%E5%B1%95%E5%89%8D%E6%99%AF_%E5%BD%AD%E9%94%A6/"},{"title":"","text":"叶轮机械几何不确定性量化研究综述 王钧莹1,2，郑新前*1,2 （1. 清华大学汽车安全与节能国家重点实验室；2. 清华大学航空发动机研究院，北京，100084） (Tel:13661377800, Email:zhengxq@tsinghua.edu.cn) 资助项目：国家科技重大专项（2017-Ⅱ-0004-0016)，国家自然科学基金（51876097） 2020年6月20日19:57:37——2020年6月20日20:39:48 风扇、压气机 针对风扇制造几何偏差，以往研究主要关注叶片前缘，这是因为叶片前缘被认为是跨音速流场中最具影响的几何因素[1][7][8]。更薄的前缘轮廓可以降低风扇前缘的激波损失，尤其是在超声速流动中，进而能够降低整体损失[8][9]。通过对风扇翼型的前缘轮廓进行优化，A. Giebmanns等[8][9]实现了总压比和等熵效率的提升，其中最高效率相对值增加0.5%。 由于压气机内流动的逆压梯度，压气机性能对微小几何偏差十分敏感。此外，由于压气机，尤其是高压级压气机的尺寸通常在毫米量级甚至更小，制造公差会产生更大的几何相对偏差[5]。 即当叶片表面粗糙度低于40微英寸均方根时，已达到空气动力学平滑。表面粗糙度会影响叶片表面边界层层流/湍流状态或流动分离，进而影响叶片性能。","link":"/2023/03/07/002_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/%E9%98%85200620%EF%BC%9A%E5%8F%B6%E8%BD%AE%E6%9C%BA%E6%A2%B0%E5%87%A0%E4%BD%95%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E9%87%8F%E5%8C%96%E7%A0%94%E7%A9%B6%E7%BB%BC%E8%BF%B0_%E7%8E%8B%E9%92%A7%E8%8E%B9/"},{"title":"","text":"考虑几何设计参数不确定性影响的叶栅稳健性气动设计优化罗佳奇，夏志恒，张燕峰 叶片稳健性气动设计优化（RADO） RADO的基本原理及实现方法 基于灵敏度分析 目标函数对设计参数的梯度 开展考虑设计参数不确定性影响的HS1A跨音速涡轮叶栅RADO研究 降低总压损失系数及其均方差 气动外形优化设计对降低总压损失系数敏感度的影响机理 气动设计优化（aerodynamic design optimization, ADO） 确定性气动设计优化（deterministic ADO, DADO） 由于不确定性因素的客观性和随机性，最优气动外形的确定将依赖于设计外形在不确定性扰动空间内的统计气动性能，主要取决于：平均气动性能是否最优；气动性能参数对不确定性因素的敏感度是否最低。若DADO外形对不确定性因素比较敏感，外形偏差将导致气动性能在不确定性扰动空间内发生显著变化，甚至远离DADO解，意味着DADO外形在扰动空间内缺乏稳定性。在这种情况下，忽略不确定性影响的DADO很难满足实际工程需求，有必要开展鲁棒性气动设计优化研究。 南安普顿大学的Keane[^14] 开展了考虑叶片外形偏差影响的鲁棒性气动设计优化研究，比较了不同的气动不确定性量化（uncertainty quantification, UQ）方法对鲁棒性气动设计优化的影响；剑桥大学的Ghisu等[^15] 采用一维设计程序开展了压气机鲁棒性气动设计优化研究，采用混沌模型对级参数扰动的不确定性影响进行量化；Vinogradov等[^17] 开展了考虑边界扰动的高压涡轮传热和气动鲁棒性优化设计研究；Reis等[^16]、王晓东等[^18]、高丽敏等[^19] 开展了考虑外形偏差的叶轮机械鲁棒性气动设计优化研究，采用多项式混沌模型（PC）进行气动UQ。 统计均值用于衡量平均气动性能，均方差用于衡量气动性能的稳健性 对于外形偏差小尺度气动不确定性问题，基于灵敏度分析的气动UQ由于具有高效率、高精度的特点，目前已成为叶轮机械气动不确定性研究领域的热点。 本文采用跨音速涡轮叶栅HS1A[^23] 作为研究对象。该叶栅试验测量的工况参数为：来流角46度，进口为标准大气的压力和温度，出口等熵马赫数为1.06，马赫数不确定度为0.01，即出口等熵马赫数在 [1.05, 1.07] 之间变化。研究中，出口等熵马赫数为1.05。几何偏差的标准差为0.05mm 流场数值模拟采用自开发程序求解Euler方程，采用中心格式有限体积法、多重网格加速技术等。 与DADO不同的是：RADO关注的不再是不确定性扰动空间内某个特定解，而是扰动空间内的统计解。气动性能由统计均值表示，气动稳健性由均方差表示。气动稳健性设计要求气动性能参数对不确定性因素的敏感度最低，也即气动性能的均方差最小。 RADO是典型的多目标优化设计问题，需要实现：改善气动函数均值（降低损失均值），提高优化叶片的平均气动性能；降低气动函数对不确定性因素的敏感度（降低方差），提高优化叶片的气动稳健性。 RADO目标函：$I=\\mu_\\xi+\\lambda\\sigma_\\xi$，总压损失系数$\\xi$，$\\lambda$为均方差权重。优化中暂不考虑气动约束，只约束叶栅厚度分布。本文将优化叶片中弧线外形并保持厚度分布不变。沿中弧线轴向均匀分布6个控制点。 第六个设计参数处于跨音速流动区域，气动外形的微小变化即可带来总压损失系数的较大变化。此外，对比不同的RADO梯度可知：随着均方差权重的增加，目标函数梯度增加；随着几何设计参数公差的增加，目标函数梯度也增加。整体上，RADO梯度与DADO梯度的差异大小，反映了设计参数不确定性变化对气动函数变化的影响大小。叶片气动外形优化设计除了改善平均气动性能，还要降低气动参数对设计参数变化的敏感度，也即降低总压损失系数的均方差。 图8给出了优化叶片与原始叶片的气动外形及叶面等熵马赫数分布。经过优化设计后，中弧线在叶片中部的曲率明显降低，抑制流动加速，如图8(b)所示：叶片中部吸力面等熵马赫数明显降低，从而降低了激波前马赫数。优化后，位于原始叶片吸力面65%弦长处的第一道激波完全消失。此外，优化后叶片后半部分中弧线曲率明显增加，流动进一步加速，如图8(b)所示，优化叶片80%弦长后仍是超音速区，位于原始叶片吸力面80%弦长处的第二道激波强度显著减弱，有利于降低总压损失系数。整体上，随着设计参数公差和均方差权重的增加，上述中弧线曲率、吸力面马赫数的变化趋势更加明显。相对于DADO，RADO的统计均值略高，RADO的统计均方差较低；随着均方差权重的增加，RADO统计均值升高，统计均方差下降，这是由多目标优化设计中各目标的竞争关系导致的 ==&gt;在RADO优化结果方面，基于敏感度的均值与基于MC的均值 结果不同？====&gt;表3均值也是降低的，但是图9确是上升的，我认为也应该是上升的。== 上述结果表明：忽略设计参数不确定性变化对总压损失系数变化的非线性影响，必然降低总压损失系数统计均值的计算精度，从而进一步影响目标函数对设计参数的梯度，继而影响优化设计结果精度。为了提高RADO的优化精度，在RADO中有必要采用基于二阶灵敏度分析的气动UQ方法来计算气动函数的统计值。 [^14]: Keane A J, Comparison of Several Optimization Strategies for Robust Turbine Blade Design[J]. Journal of Propulsion and Power, 2009, 25(5): 1092-1099[^15]: Ghisu T, Parks G, Jarrett J, et al. Robust Design Optimization of Gas Turbine Compression Systems[J]. Journal of Propulsion and Power, 2011, 27(2): 282-295[^16]: Wang X, Hirsch C, Liu Z, et al. Uncertainty-based Robust Aerodynamic Optimization of Rotor Blades[J]. International Journal for Numerical Methods in Engineering, 2013, 94: 111-127[^17]: Vinogradov K, Kretinin G, Otryahina K, et al. Robust Optimization of the HPT Blade Cooling and Aerodynamic Efficiency[C]. ASME Paper No. GT2016-56195, 2016[^18]: Reis C, Manzanares-Filho N, de Lima A. Robust Optimization of Turbomachinery Cascades Using Inverse Methods[J]. Journal of the Brazilian Society of Mechanical Sciences and Engineering, 2016, 38(1): 297-305[^19]: Ma C, Gao L, Cai Y, et al. Robust Optimization Design of Compressor Blade Considering Machining Error[C]. ASME Paper GT2017-63157, 2017 .","link":"/2023/03/07/002_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/%E9%98%85200630%EF%BC%9A%E8%80%83%E8%99%91%E5%87%A0%E4%BD%95%E8%AE%BE%E8%AE%A1%E5%8F%82%E6%95%B0%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E5%BD%B1%E5%93%8D%E7%9A%84%E5%8F%B6%E6%A0%85%E7%A8%B3%E5%81%A5%E6%80%A7_%E7%BD%97%E4%BD%B3%E5%A5%87/"},{"title":"","text":"考虑来流角变化影响的叶栅稳健性气动优化设计夏志恒，罗佳奇 介绍叶片RADO的基本原理、实现方法及关键问题 开展基于==自适应非嵌入式多项式混沌模型==的某型跨音速涡轮叶栅来流角不确定性研究，对叶栅总压损失进行量化 开展叶片气动外形的RADO研究，通过与确定性气动优化设计的对比揭示RADO在提高优化叶片气动稳健性方面的优越性。 ==二维、自适应稀疏网格、NIPC、总压损失均值标准差多目标优化、约束条件为叶型面积、来流角 为输入不确定量，转换后服从N(0,1)，且在[-1,1]之间，即1sigma疑问：1、为什么输入不确定量为1维？2、为什么来流角度没有给出分布参数？3、== [^22] 自适应稀疏网格，其主要思想：在梯度较大或者不光滑部分局部加密抽样点，而在光滑部分则用尽可能少的点。本研究中自适应NIPC模型采用Newton-Cotes网格点与分段线性基函数，具体的实现技术细节以及应用请参考文献 [^16]。 aNIPC表示自适应NIPC，sNIPC表示静态NIPC，多项式阶数n=9，自适应稀疏网格的插值误差容许为ε = 1.0E-04，N1表示构造NIPC模型所需要的训练样本数；N2表示统计分析所需要的统计样本数；εaver和εstd分别表示NIPC模型响应误差的均值和标准差 ==N2，后来对自己建立的模型进行6000次MC？应该是这样的== [^16]: Xia Z, Luo J, Liu F. Performance impact of flow and geometric variations for a turbine blade using an adaptive NIPC method. Aerospace Science and Technology, 2019, 90: 127-139.[^22]: Jouini D B M. Experimental investigation of two transonic linear turbine cascades at off-design conditions. Carleton University, 2000.","link":"/2023/03/07/002_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/%E9%98%85200701%EF%BC%9A%E8%80%83%E8%99%91%E6%9D%A5%E6%B5%81%E8%A7%92%E5%8F%98%E5%8C%96%E5%BD%B1%E5%93%8D%E7%9A%84%E5%8F%B6%E6%A0%85%E7%A8%B3%E5%81%A5%E6%80%A7%E6%B0%94%E5%8A%A8%E4%BC%98%E5%8C%96%E8%AE%BE%E8%AE%A1_%E5%A4%8F%E5%BF%97%E6%81%92/"},{"title":"","text":"PCA（Principal Component Analysis）是一种常用的数据分析方法。PCA通过线性变换将原始数据变换为一组各维度线性无关的表示，可用于提取数据的主要特征分量，常用于高维数据的降维。 1、PCA的数学原理降维当然意味着信息的丢失，不过鉴于实际数据本身常常存在的相关性，可以在降维的同时将信息的损失尽量降低。 基变换的矩阵表示如果有M个N维向量，想将其变换为由R个N维向量表示的新空间中，那么首先将R个基按行组成矩阵P，然后将向量按列组成矩阵A，那么两矩阵的乘积PA就是变换结果，N维向量组成的矩阵A变为R维向量组成的矩阵PA，数学表示为： R小于N，及实现了降维。将N维数据变换到更低维度的空间中去，变换后的维度取决于基的数量。矩阵相乘可以表示降维变换。矩阵相乘的物理解释：两个矩阵相乘的意义是将右边矩阵中的每一列列向量变换到左边矩阵中每一行行向量为基所表示的空间中去。更抽象的说，一个矩阵可以表示一种线性变换。 协方差矩阵及优化目标如何选择基才是最优的。或者说，如果我们有一组N维向量，现在要将其降到R维（R小于N），那么我们应该如何选择R个基才能最大程度保留原有的信息？寻找一个一维基，使得所有数据变换为这个基上的坐标表示后，方差值最大。 对于二维降成一维的问题来说，找到那个使得方差最大的方向就可以了。不过对于更高维，还有一个问题需要解决。考虑三维降到二维问题。与之前相同，首先我们希望找到一个方向使得投影后方差最大，这样就完成了第一个方向的选择，继而我们选择第二个投影方向。如果我们还是单纯只选择方差最大的方向，很明显，这个方向与第一个方向应该是“几乎重合在一起”，显然这样的维度是没有用的，因此，应该有其他约束条件。从直观上说，让两个字段尽可能表示更多的原始信息，我们是不希望它们之间存在（线性）相关性的，因为相关性意味着两个字段不是完全独立，必然存在重复表示的信息。数学上可以用两个字段的协方差表示其相关性，由于已经让每个行均值为0，则： 可以看到，在行均值为0的情况下，两行的协方差简洁的表示为其内积除以元素数m。当协方差为0时，表示两个字段完全独立。为了让协方差为0，我们选择第二个基时只能在与第一个基正交的方向上选择。因此最终选择的两个方向一定是正交的。 至此，我们得到了降维问题的优化目标：将一组N维向量降为R维（0&lt;R&lt;N），其目标是选择R个单位（模为1）正交基，使得原始数据变换到这组基上后，各行向量两两间协方差为0，而行向量的方差则尽可能大（在正交的约束下，取最大的R个方差）。 协方差矩阵有a和b两个字段，将它们按行组成矩阵X： 然后用X乘以X的转置，并乘上系数1/m： 得到协方差矩阵，矩阵对角线上的两个元素分别是两个字段的方差，而其它元素是a和b的协方差。 协方差矩阵对角化要达到降维问题的优化目标，等价于将协方差矩阵对角化：即除对角线外的其它元素化为0，并且在对角线上将元素按大小从上到下排列。 原始数据矩阵X，X的协方差矩阵C，而P是一组基按行组成的对角矩阵，Y的协方差矩阵为D，Y为X对P做基变换后的数据。则 Y=PX，下面： 矩阵P，满足 是一个对角矩阵，并且对角元素按从大到小依次排列，那么P的前R行就是要寻找的基，用P的前R行组成的矩阵乘以X就使得X从N维降到了R维并满足上述优化条件。 由上文知道，X的协方差矩阵C是一个实对称矩阵，实对称矩阵有一系列非常好的性质： 1）实对称矩阵不同特征值对应的特征向量必然正交。 2）设特征向量λ重数为r，则必然存在r个线性无关的特征向量对应于λλ，因此可以将这r个特征向量单位正交化。 由上面两条可知，一个n行n列的实对称矩阵一定可以找到n个单位正交特征向量，设这n个特征向量为，我们将其按列组成矩阵： Λ为对角矩阵，其对角元素为各特征向量对应的特征值（可能有重复）。 P是协方差矩阵的特征向量单位化后按行排列出的矩阵，其中每一行都是C的一个特征向量。如果设P按照Λ中特征值的从大到小，将特征向量从上到下排列，则用P的前R行组成的矩阵乘以原始数据矩阵X，就得到了降维后的数据矩阵Y。 2、算法及实例PCA算法 总结一下PCA的算法步骤： 设有m条n维数据。 1）将原始数据按列组成n行m列矩阵X 2）将X的每一行（代表一个属性字段）进行零均值化，即减去这一行的均值 3）求出协方差矩阵 4）求出协方差矩阵的特征值及对应的特征向量 5）将特征向量按对应特征值大小从上到下按行排列成矩阵，取前r行组成矩阵P 6）Y=PX即为降维到r维后的数据 实例 用PCA方法将这组二维数据其降到一维。 因为这个矩阵的每行已经是零均值，这里直接求协方差矩阵： 求其特征值和特征向量，具体求解方法不再详述，可以参考相关资料。求解后特征值为： 其对应的特征向量分别是： 其中对应的特征向量分别是一个通解，c1和c2可取任意实数。那么标准化后的特征向量为： 因此矩阵P是： 可以验证协方差矩阵C的对角化： 最后用P的第一行乘以数据矩阵，就得到了降维后的表示： 降维投影结果如下图： 进一步讨论 PCA本质上是将方差最大的方向作为主要特征，并且在各个正交方向上将数据“离相关”，也就是让它们在不同正交方向上没有相关性。 因此，PCA也存在一些限制，例如它可以很好的解除线性相关，但是对于高阶相关性就没有办法了，对于存在高阶相关性的数据，可以考虑Kernel PCA，通过Kernel函数将非线性相关转为线性相关，关于这点就不展开讨论了。另外，PCA假设数据各主特征是分布在正交方向上，如果在非正交方向上存在几个方差较大的方向，PCA的效果就大打折扣了。 最后需要说明的是，PCA是一种无参数技术，也就是说面对同样的数据，如果不考虑清洗，谁来做结果都一样，没有主观参数的介入，所以PCA便于通用实现，但是本身无法个性化的优化。PCA的数学原理","link":"/2023/03/07/005_%E6%95%B0%E5%AD%A6/PCA%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/"},{"title":"","text":"计算流体动力学和航空发动机的不确定度量化弗朗切斯科·蒙托莫利，伦敦帝国理工学院，伦敦，英国 Mauro·Carnevale，伦敦帝国理工学院，伦敦，英国 Antonio·D’Ammaro，剑桥大学剑桥分校，英国 米歇拉·马西尼，伦敦帝国理工学院，伦敦，英国 西蒙·娜萨尔瓦多尼，佛罗伦萨大学，佛罗伦萨，意大利 前言毫无疑问，随着计算能力和建模能力的增加，不确定度量化在过去十年已经变得越来越具有现实性。过去，预测航空发动机以及叶轮机械流场和性能的能力对设计有很大的帮助。然而，这些结果的误差范围很大，以至于表明使用CFD，主要是为了更好地理解趋势和改进的方向，而不是热流体动力学参数的精确评估，这可能会影响性能，可靠性和寿命的发动机部件。 最近，我们看到了两个不同但相关的问题： 模拟和建模能力的提高，与准确性和可靠性的提高以及大规模并行计算架构提供的强大的计算能力相关联； 航空发动机中的接近理论极限的部件留下了边缘空间，使得提高涡轮压气机的效率和可靠性；由于这个事实，生产者之间的竞争正在变得越来越强大和关键。 在这种环境下，部件的实际配置在几何和实际运行条件方面的不确定性成为关键点，并且在在发动机的设计阶段及监控和诊断中正确管理这些部件的能力可以是赢家元素。 我们只能想象未来几年将会产生的巨大影响，帮助工程师开发更可靠的配置，能够承受随机变化和意外故障。然而，要找到任何解释制造误差对不同部件的影响的书籍，以及如何使用UQ来解决这个问题，是很奇怪的。这是为了满足目前的工作需要。这本书对理解即使在今天可以控制和管理这个棘手问题的方法论也是一个有效的贡献。 本书在各种学术和工业角色的支持下编写的，他们提供了来自设计/制作和理论与概念竞赛的实际经验。 这项工作将提供对航空发动机不确定性以及可实施的更新工具影响的配置的广泛回顾。我希望本书可以做些事情来鼓励和指导读者研究不确定度量化，并确定这将如何帮助未来发动机的发展。 佛罗伦萨，2014年11月Francesco Martelli教授 目录计算流体动力学和航空发动机的不确定度量化 1 前言 2 介绍 5 1制造和使用中的不确定性以及对寿命和性能的影响 5 1.1风扇 5 1.2轴流式压气机 6 1.2.1压气机前缘形状 6 1.2.2 压气机转子间隙 7 1.2.3压气机叶型粗糙度 7 1.2.4压气机真实几何尺寸影响 7 1.3高压涡轮 7 1.3.1 高压涡轮入口温度 7 1.3.2 高压涡轮真实几何影响 8 1.3.3 高压涡轮冷却液系统 8 1.4低压涡轮 9 1.4.1 低压涡轮对粗糙度的影响 10 1.4.2 低压涡轮尾缘厚度 10 1.4.3 低压涡轮叶型厚度 10 1.5结论 10 参考文献 10 2 叶轮机械CFD中的局限性 11 2.1边界条件 11 2.2再现真实几何 12 2.3网格依赖 12 2.4稳定/不稳定的相互作用 13 2.5部件交互 13 2.6冷却装置 14 2.7结论 14 参考文献 14 3应用于燃气轮机部件的不确定度量化 15 3.1压气机 15 3.1.1敏感性研究 15 3.1.2统计后处理 16 3.1.3多项式混沌方法 16 3.1.4伴随方法 17 3.2涡轮 17 3.2.1蒙特卡洛方法 17 3.2.2具有代理模型的蒙特卡洛方法 17 3.2.3灵敏度研究和随机后处理 17 3.2.4概率配置方法 18 参考文献 19 4 不确定度量化方法综述 20 4.1 确认与验证 20 4.2误差和不确定性 20 4.2.1误差-确认和未确认 20 4.2.2不确定性-不确定性和认知性 20 4.3概率论的初步 20 4.3.1概率和累积分布函数 20 4.5高斯分布 21 4.5.1在不确定性下的模拟 21 4.5.2不确定性定义 21 4.5.3不确定性传播 21 4.5.4不确定性认证 21 4.6采样技术 22 4.6.1蒙特卡洛方法-MCM 22 4.6.2改进的抽样策略：LHS和LB 22 4.7正交方法 22 4.7.1代理模型：响应面模型 22 4.7.2矩方法 23 4.7.3高斯积分 23 4.8多项式混沌展开 23 4.8.1多项式混沌投影 23 4.8.2多项式混沌投影回归 24 4.8.3随机过程谱展开的实用方面 24 4.8.4 Legendre多项式 24 4.8.5 Hermite多项式 24 4.8.6 Laguerre多项式 24 4.8.7 Pade-Legendre多项式 25 4.8.7.1 1D配方 25 4.8.7.2 ND配方 25 4.9谱方法 26 4.9.1随机伽辽金方法 26 4.10结论 26 参考文献 26 5 展望 27 角标 27 介绍这项工作的总体目标是概述目前关于航空发动机不确定度量化的研究。直到10年前，航空发动机的设计过程需要90％的台架测试和10％的CFD模拟。今天，随着CFD在航空发动机的设计和认证中发挥的主要作用，这些数字几乎反过来了。 然而，我们已经在模拟中达到了一定程度的细节，其中在CFD中解析的长度尺度与由于制造过程造成的微观误差相当，尽管这些误差在许多模拟中没有考虑。燃气轮机的高保真CFD需要模拟这些变化，但原则上这些影响是随机的，我们需要从确定性模拟转向概率CFD。 在这项工作中，我们展示了制造/服役损耗对喷气发动机性能的影响的分析，如在公开文献中所见。之后，我们讨论CFD不确定性的影响以及不同的不确定度量化技术如何用于量化压气机和涡轮中的这些影响。不确定度量化是一个通用术语，包含几种不同的方法来进行随机分析：最后一章是初学者通过目前已应用的方法的指导，并详细解释了这种方法的数学表述。 1制造和使用中的不确定性以及对寿命和性能的影响摘要：本章重点介绍制造误差对航空发动机性能的影响。读者应使用本章来确定应使用不确定度量化来改善燃气轮机性能的区域。 关键词：制造误差 操作变化 服役损耗 在燃气轮机中，有几个特别令人感兴趣的几何变化，可能会影响真机的性能。小的几何特征的变化的影响是不可忽略的，并且这可以由制造误差，组装不准确性或服役损耗造成[1]。但是会显示某些部分几乎不受这些变化的影响。我们强调，几何不确定性是服役损耗或制造误差的后果：这对制造商构成了不同的挑战。另一方面，可以解决维修更频繁的服务差异问题，另一方面，如果不能改进制造技术，则需要在设计系统中引入不确定度量化。 结果表明，在数值模拟或性能评估中用作输入的一些重要数据（如涡轮入口温度（TET））不是直接测量的，并且容易出现会影响预测的误差。准确的数据和对数据不确定性的控制是设计开发阶段的基础。例如，提高燃油效率的趋势是增加TET并减小发动机核心机的尺寸，从而使得整体重量的降低。然而，核心机的减少将需要更小的部件，因此制造误差的影响将会增加。 瞬态阶段是发动机可变性的另一个关键方面，并且在瞬态过程中观察到燃气轮机温度的大多数不确定性，而不是稳态运行期间[2]。发动机满负荷时紧急出行或快速启动，据估计每次出行都会导致大约200小时的使用寿命缩短。在真实发动机的不稳定实验中存在几个误差源，例如探针校准，测试发动机和测试设备误差。 即使测量设备已经过时间变化的完美校准，仪器不会显示与系统的任何交互作用，误差的一个重要来源是时钟本身。在地面设施中可能会出现十分之几秒的典型不确定性。航空发动机的时间不确定性尤其重要，可能会导致较早的叶片故障，例如发动机受到快速启动和关闭阶段的压力。真实发动机的瞬态对金属梯度有很强的影响，即使进行了精确的UQ研究，该系统也高度依赖于时间概率密度函数的尾部。 不同的方面可能会降低涡轮的使用寿命和性能，并将在以下段落中进行分析，重点关注航空发动机的四个主要部件：风扇，压气机，高压和低压涡轮。对燃气轮机可变性的介绍突出了为什么在燃气轮机的数值分析中引入不确定性定量技术很重要的原因。 1.1 风扇风扇性能的不确定性主要是由于服役损耗。由于风扇叶片的尺寸，制造误差对叶片整体性能的影响较小，因此很少有研究涉及这个问题。其中一项研究由Schnell等人进行[3]，Schnell使用光学测量法以主成分分析（PCA）来表征风扇的几何形状，以分解相应的本征形式的几何误差。特别是作者介绍了一个反转风扇的研究，并且由于非稳定的相互作用，大部分变化发生在前面级的后半部分。在没有反转的标准风扇中，在风扇根部附近和尖端附近的制造误差可能是重要的。来自风扇根部的流量继续进入核心发动机，误差可能会影响下游低压压气机。相反地，在尖端区域附近，小的几何变化改变了由于风扇尖端的跨音速状态而造成的损失。 Schnell等人的工作[3]很重要，因为它显示了在UQ中广泛使用的PCA技术。在本书中，将展示PCA是用于定义UQ分析中用于风扇、压气机和涡轮的制造误差模式的最常用方法。 尽管可能存在制造误差，风扇性能恶化的主要原因是风扇叶片与异物的影响以及这些风扇叶片几何形状的改变。鉴于复合风扇叶片越来越受欢迎，这一点在未来将变得更加重要两家领先制造商，通用电气和劳斯莱斯。由复合材料制成的几何形状的控制精度较低，因此这对如何建立准确的轮廓以及如何测量它们（如光学测量和超声波测试）提出了新的挑战。 在所有可能的异物吸入（如鸟类吸入）中，影响风扇空气动力学的最重要的现象之一就是沙粒的影响[4]。这是特别关键的在中东和在如图Tabakoff和巴兰其中航空发动机免受由砂摄取侵蚀遭受desertic区域[5，6]。上述论文的作者通过实验研究了飞机风扇吸沙的影响，发现主要影响是前缘的腐蚀和压力侧的较高粗糙度。此外，发动机吸入的沙子侵蚀了风扇的尖端。正如Ghenaiet所示，沙土侵蚀可以将清除率提高65％[7]，并且可以将尖端弦降低约10％[7]。 在跨音速风扇中，前缘降解主要通过改变前缘设计的冲击结构来影响损失[8]。由Klinner等人发现的阶段载荷的整体损失是3.5％。总体阶段效率检测到4％的损失。其他研究人员[7]测得绝热效率下降7.1％，压力上升系数下降9％。 这些结果表明，服役损耗对部件整体性能的影响很大。因此，为了在整个寿命周期内对机器操作进行可靠的估算，应该思考这些变化。 在公开文献中公布的关于沙粒吸入和风扇退化的结果是“风扇和测试特定的”，并且很难推断这些数据。此外，效率结果的变化取决于测试的长度，风扇材料等，并且在进行降解分析时也应该考虑。即使现代碳纤维风机使用金属前缘来保护该区域免受异物和沙土侵蚀，但沙土侵蚀的影响仍会影响性能。此外，制造不确定性的影响需要用新的复合材料结构来解决，这种结构似乎更容易出现几何误差。 1.2 轴流式压气机在轴流式压气机，制造误差和服役损耗会改变压缩比和稳定裕度，以至于发动机整体性能[9，10]。压气机受到小变化的强烈影响，其中一个主要原因是翼型上不利的压力梯度。前期小误差的影响传播并放大并向下游移动。 原则上可以使用光学技术来测量与压气机叶片中与制造误差有关的偏差。然而测量本身的不“完美”及激光技术具有约15的精度μM[11]：“标准”前缘具有0.1mm的半径和测量误差量的约10％来估计。光学技术确实是非常精确的在远离前缘的表面。但是，如下图所示，影响发动机性能的主要是前缘。 当量化组装发动机的变化很重要时，几何误差的评估更加复杂。即使考虑到金属膨胀，发动机也会受到热应力的影响，并且组装后的压气机与在寒冷条件下测得的不同。目前的研究并没有考虑到这一点，但估计发动机在运行过程中的运动以准确预测发动机效率和失速裕度可能很重要。 在公开文献中，有四个领域被认为是与制造误差相关的压气机性能最重要的部分： 前缘形状 转子顶部间隙 叶型的粗糙度 真实的几何特征，如圆角，泄漏，平台间的间隙 在接下来的段落中，这些不确定性将作为分离效应呈现。然而，正如Goodhand和Mil前缘r[12]指出的那样，所有可能的误差的相互作用并不遵循叠加定律，因此应该一起分析。 1.2.1压气机前缘形状前缘很小，其在现代轴流式压气机中的尺寸大约为0.1mm半径[13]，但尽管尺寸非常小，但压气机前缘的几何变化对单级以及对整个压气机的性能。一般来说，压气机对几何变化的响应是非线性的，除少数例外。正如Goodhand和Miller[11]指出的那样，翼型的发生范围大致线性地响应于小的几何变化。为了定义误差对绝对值的影响，下面的所有数字都使用0.1mm作为前缘半径的参考值。 前缘区域的小的变化可以在早期吸力侧增厚边界层并促进/增加三维分离的尺寸。Wheeler等人证明了这种效应[14]比较两种几何形状：圆弧和椭圆形。随着椭圆形状的流动被连接和层流，圆弧在大多数发动机中是常见的几何形状，流动在前缘分离并重新附着湍流，并且轮廓损失增加30％。图1.1显示了根据[14]中的研究调整的前缘形状]。跨音速压气机前缘的半径大约为0.1mm，这就解释了为什么微观变化的影响很重要（实验中[14]的半径为4.72mm）。前缘形状的这种微观变化将吸力表面损失修正了38％，因为椭圆形状更有效。该工作的总体目标是定义哪种配置对现代发动机更好。但是，图1.1表明这两种几何形状之间的总体最大差异很小（本书作者估计大约0.02mm），但是却负责过渡机制和损失的强烈变化。 以下研究表明，前缘误差和损失的关键机制与早期吸力侧产生尖峰和随后的减速有关。从理论上讲，为了减少损失，可以产生无尖峰分布[12]。 然而，绝对的前沿区域特别小并且受到制造误差的影响。通过使用实测数据，Lamb[15]表明，给定的一组压气机叶片的平均总压损失高于预期的基线剖面损失，只有少数叶片超过基线。同时羔羊[15]证明，基于几何变化评估一个配置文件的标准，如前缘形状在最小和最大设计半径之间的要求，与性能没有直接关系。通常认为，如果前沿处于特定限制范围内，性能将在可接受的范围内，但这不是事实。特别是已经显示了丢弃叶片的最小标准的弱点，这是由于在最低可接受标准下某些翼型优于基线[16]。当这些变化应用于使用实验测量的叶片进行数值模拟的六级压气机时，Garzon已经将效率降低了1.2％。在文献的大部分工作中，几何误差都是通过主成分分析来分解的。 Goodhand等人[11]研究了服役损耗与真实压气机的制造误差，以了解哪一个是发动机不同区域最重要的。对于服役中的损耗，他们使用了一台大约4,000个周期的发动机售后服务套件（在中型飞机上运行约3-4年）。图1.2显示了Goodhand等人发现的制造误差的包络[11]。作者指出，为了达到与制造误差分布相同的准确度，他们需要至少45个发动机的大约1200个叶片。他们发现，在大多数高压压气机中，制造差异似乎占主导地位，受服役损耗影响的主要区域集中在尖端区域附近。这表明侵蚀在最初的4,000个操作周期的大部分区域并没有产生显着的影响，并且高压压气机的性能的不确定性主要由制造误差所支配。 导致边缘“变形”的另一个原因是Elmstrometal。所示的涂层[13]。Elstrom等人研究的不同profi已经在图1.3中再现，具有均匀和不均匀的涂层分布。虽然有证据表明涂层压气机在某些应用中可以超过未涂层压气机，但在某些情况下，情况可能并非如此。Specifi，涂覆基体金属翼型时可能出现的一个问题是，由此导致的前缘形状变化会产生不利的空气动力学影响。 在最近的一次测试中，海军应用中的压气机被涂上了涂料，并且不能再达到Caguiat[17]报道的最低规格。具体而言，最大输出功率损失，燃料消耗率SFC增加，开始时间超过可接受水平。在涉及商用飞机，安全或军事行动的“关键任务”应用中，启动或重新启动的能力降低至关重要。 跨音速或超音速压气机叶片通常具有0.08-0.13mm的前缘半径，甚至均匀的涂层可以将半径改变20％，Elmstrometal[13]。虽然大部分叶片的涂层厚度非常均匀，但翼型不太可能在前缘附近具有均匀的涂层。涂层通常以液体形式涂敷，从涂敷的那一刻起，直到涂层明显干燥，各种物理力量，表面张力都是一个重要的例子，它会使涂层从尖锐的凸角流出并“聚集”一小段在它干燥之前的距离。这可以引入尖端尖峰，可以改变优化的前缘形状。 由于添加了均匀的涂层，相对总压损失有2％的降低。在低发生率时，不均匀的涂层显示总的压力损失比均匀涂层大约5％，比未涂布的机翼大8％。Elmstrom等人[13]提出了一个标准来预测非均匀涂层对分离泡的影响。然而，基本思想是即使不考虑服役损耗，非均匀涂层也会对压气机性能产生不利影响。 1.2.2 压气机转子间隙Sakulkaew等人[18]详细分析了尖端几何误差对效率的影响。Sakulkaew研究了顶部间隙从0.04到5％范围的压气机转子。在大型工业燃气轮机中，转子顶部和定子轮毂间隙在前级中的跨度可以小于0.5％，在后级中跨度可以大于5％。 作者确定了三种不同的损失机制。从0.5％到0.8％的跨度，效率的变化是由两种竞争机制驱动的：降低顶部泄漏混合损失和减少顶部间隙时增加的粘滞剪切损失。对于中等顶部间隙，跨度为0.8-3.4％，效率随着顶部间隙的增加而线性下降，符合丹顿顶部泄漏混合模型。主要影响是由于顶部泄漏混合。他们发现，对于特定的压气机，每隔1％的间隙尺寸减少1％的效率。这些数字与Freeman等人发现的一致，如图1.4所示。Freeman[19]发现效率下降1.4％，顶部间隙增加1％（跨度）。 然而，对于超过临界值（该转子的3.4％跨度）的顶部间隙，当叶尖变得更加后部负载时，效率对顶部间隙变得不太敏感，从而减少转子通道中的尖端流动混合损失。阈值由增加的顶部泄漏流量和随着顶部间隙增加引起的尖端流动引起的混合损失之间的竞争效应设定。 1.2.3压气机叶型粗糙度关于粗糙度对压气机性能影响的文献中只有少数实验测试可用。Suder等人过去曾对由于结垢导致的高速轴流压气机转子性能劣化进行了实验评估[20]，他研究了在翼型表面增加厚度和粗糙度的影响；他们将前缘和吸力侧前半部分确定为对转子性能影响最大的区域。 Gbadebo等人提出了其他实验结果[21]研究分布表面粗糙度对三维流动分离的影响。最近Syverudetal[22]描述了在GEJ85-13喷气发动机上进行的盐吸入测试活动。发现前台具有最大量的沉积物，在叶片的压力侧具有较高的表面粗糙度的非均匀分布。Syverud等人的另一项工作[7]将实验数据与阶段损失相关性进行比较；它表明现在的模型与质量流量变化相匹配，但由于粗糙度增加而低估了效率降低。 Morini等最近完成了大量的工作[23]基于阶段堆垛过程的阶段性模型预测了由于叶片结垢和机械损伤导致的压气机和涡轮映射的实际修改。为了考虑阶段恶化，使用这种方法对每个单阶段性能图进行缩放。作者使用计算方法来量化这些变化的影响，同时考虑到由于结垢导致的局部几何变化。 1.2.4压气机真实几何尺寸影响真正的几何效应是一个广泛的术语，用于识别与精确描述真实几何形状相关的所有效果，例如在设计阶段通常不会考虑的间隙，圆角等，但它们可能会影响真实的机器。例如，在文献中已经证明，叶片圆角也可以影响三维分离的尺寸。Curlett[24]表明，通过改变圆角半径，分离尺寸和叶片损失都被改变了。他发现最低的损失发生在没有圆角的情况下，而最大的损失发生在最大的圆角测试。 图1.5显示了剑桥大学Whittle实验室在低速轴流式压气机上进行的一些流动可视化，称为Deverson测试台。图1.5显示了在低速台架接近失速条件下圆角的影响。在套管定子附近引入圆角（圆角半径）2.5毫米，前缘半径1毫米）可以有一个更稳定的条件。特别是图1.4显示初始分离气泡减少了。数值上也可以观察到同样的效果。 1.3高压涡轮高压涡轮负载很高，并受到强烈的温度和热梯度的影响。由于这些原因，微小的变化会影响热部件的使用寿命，并会影响发动机的可靠性。 在轴流压气机中，小的几何误差主要改变发动机的效率，在涡轮中主要关心的是高温部件的寿命。 在公开文献中，以下两个不确定性被确定为主要重要性： 涡轮入口温度 冷却液系统。 1.3.1 高压涡轮入口温度燃烧出口处的温度分布严重影响第一阶段的使用寿命。正如本文作者以前的出版物所强调的那样，并且如Salvadorietal[25]，两个具有相同平均值但径向形状不同的温度分布对转子寿命可能有完全不同的影响。作者证明，可以在保持相同的平均值的同时增加转子顶部的寿命，改变燃烧室出口处的温度分布。不幸的是，温度曲线受到概率分布的影响，大多数情况下是未知的。对相同配置的随机研究突出了Montomoli等人在转子叶尖服役退化中引入的统计变化的重要性[26]。Montomoli等人[26]证明了尖端传热受到圆角半径和顶部间隙的随机分布的强烈影响。该研究表明，使用不确定度量化方法预测热斑迁移至关重要。 目前在燃气轮机中可用的最精确的高温测量系统是Massini等人的吸气温度探针[27]在具有苛刻条件的真实环境中，能够给出±0.6％的误差，即在1800K下±10K。尽管探针不是发动机中的“通用”测量技术，并且发动机中的温度测量通常使用K型和N型热电偶来执行，其最大工作范围是限于约1600K。 因此，用于发动机性能和健康监测的传感器不放置在燃烧室中，而是放置在低压涡轮的第一级，并受到高度不确定性的影响。为了增加操作范围，使用高温热电偶，例如由铂/铑制成的热电偶。但成本低，灵敏度低和校准漂移快，这使得这些不适合在真实涡轮环境中进行标准测量。 高温下热电偶的精度受到校准漂移，材料退化以及传导和辐射误差的限制。测量中的总不确定度可能高达2％，即在1,500K时±30K。不确定性的另一个来源与湍流水平有关。因为恶劣的环境下，燃烧室出口处的湍流强度很难测量，几乎未知。Ames和Moffat[28]用数字证明了这个水平约为19％，这个高水平可以改变HP涡轮的传热速率和喷嘴寿命。Krishnamoorthy和Sukhatme[29，30]为了评估上的涡轮级的热传递这个湍流度的影响，并为了开发实验关联取得了一些测量。与层流情况相比，相关性预测局部湍流强度为12％时热传递增加75％。Mehendale等人[31]表示可能会在前沿附近增加44％。大多数研究表明，由于自由流湍流水平引起的边界层转变，传热速率增加很快。尽管总体水平存在不确定性，但这些研究表明，需要准确的转换模型来获得准确的传热预测。 问题不仅是燃烧室出口处的最高温度，而且还有温度不均匀性。涡轮入口部分的流量不均匀性对叶片寿命有严重影响[2]。已经表明，当停滞温度出现切向不均匀时，转子压力侧有优先加热。此外，与通道涡流的相互作用使得较热区域的展向伸展得到增强，然后热流可以通过顶部间隙。结果，转子叶片在强烈的热循环下工作，从而减少了部件的剩余寿命。 此外，现代燃烧室在出口段呈现强烈的残余涡流剖面，次要流动效应是在晚些时候迁移热点[32]。同样因为这个原因，对高压涡轮级进气条件的详细了解是必要的，许多研究人员试图提出实验和数值燃烧模型来重现实际情况[25]。所有作者都提出了横向平均停滞的峰值温度场约为平均值的+10％：可以估计，热场中的这种变化导致转子叶片负荷（+10％）和峰值努塞尔数（+50％）的不可忽视的增加[25]。转子出口部分的滞止温度峰值也可以变化高达+10％，并对后续的汽轮机级的剩余寿命产生不利影响。主流湍流水平对热斑的衰减也有相关影响，特别是与冷却相结合。最近的工作试图量化现实条件对高压冷却叶片热通量的影响，结果取决于燃烧器相对于涡轮增压器的时钟位置的±20％Bineleaf[33]。冷却参数（最多的强翼展变化-30％的密度比，-还观察，导致重要的结论是，在燃烧器出口部分的不确定性起着关键的50％的吹入比）在评估高压汽轮机部件的剩余寿命中的作用。 1.3.2 高压涡轮真实几何影响高压叶片/喷嘴的一个特殊方面是平台间隙和泄漏对性能的影响。高压级具有较高的长宽比，并且泄漏的影响可以改变高达20％的喷嘴自由流。在台架和真正的燃气轮机中观察到了这种相互作用。 在公开文献中已经表明，层间射流对损失的净贡献非常小，并且主要受摄取拒绝相互作用支配。这种小间隙的宽度从间距的0至0.3％变化。整体而言，跨平台步骤的影响不会改变效率。 然而，摄取-排斥机制会影响叶片中的热应力，并可能在喷嘴尾缘附近产生严重后果。尾缘区域被严重冷却，并且不像叶片的其他部分那样“膨胀”。如果平台没有被充分吹扫，这会引起应力并损坏叶片的后部。 另一个真正的几何效应是靠近缩回边缘的喷嘴不确定性。这个区域非常关键，因为它可以设定涡轮的质量流量，并且几何形状的变化对此有直接的影响。然而，由于在这个区域几何学的光学重建的挑战性问题，估计几何误差是非常困难的。此外，我们需要考虑实际喷嘴的服役损耗以及在组装时通常“调整”喷嘴以最小化该误差的事实。这方面还没有在公开文献中进行调查。 1.3.3 高压涡轮冷却液系统Bunker[34]进行了考虑几何参数概率分布的初步研究。Bunker表明，高压部件中的几何参数的变化可能会受到影响部件寿命。有各种各样的参数可以改变，但它们对部件寿命的相对影响是不同的。Bunker使用所有几何参数的蒙特卡洛模拟和叶片温度预测的简化方法，显示出最关键的不确定性是与气膜冷却几何相关的。孔直径的10％的制造变化可以将叶片寿命缩短33％。这种不确定性在燃气轮机中并不少见。Moeckel[35]以不同的方式得出了类似的结论。在所有受变化影响的地理参数之间，冷却液几何形状是最有影响力的。出于这个原因，目前的工作主要集中在冷却液几何形状上，以评估几何不确定性的影响。 气膜冷却几何形状的不确定性是由于制造过程（即激光冲击钻孔）以及在使用中的操作（即热障涂层的散裂）。尽管事实上这些几何变化是虚构的，但文献中的大部分着作都认为这些效应是确定性的。叶片表面的外部部分是研究最多考虑到涂层剥落，[36，37]或信道obtrusion（诺维奇等人[38-40]）。上的外表面的几何差异对冷却per-formances混合的结果，令人惊讶，并不总是负[38-40]。但重要的是，这给生活预测带来了不确定性偏差。 如Bohn和Krewinkel[37]所示，当孔的尺寸较小时，这些变化的影响更为重要。事实上，这是实际燃气轮机的条件。Bohn和Krewinkel发现，使用真实几何模型进行模拟时，流动结构和传热水平不同，几乎与理想情况相差无几。这表明必须模拟真实的几何图形。问题是每个几何体都是不同的，只有统计数据可用（即平均值和可变性范围）。Saumweber和Schulz[41]对几何变化对冷却性能的影响进行了更系统的分析]再次采用确定性方法。作者改变了扩张角度和管道的倾斜度。孔几何的影响主要是作为内部马赫数的函数发现的。当内部风道不能靠气室逼近时，几何变化很重要。在表1.1中，显示了金属温度的不确定性和剩余寿命相关降低的估计。对于目前的分析，它被认为是一个平均值为900°C的金属温度。虽然大部分数据都是由Bunker提出的[34]，但关于数据不确定性的信息Massini等人提供了涡轮进口温度测量[27]。剩余寿命的变化使用Larson-Miller关系[42]这涉及蠕变过程速率r，金属温度T和用于蠕变过程ΔH的激活能量。拉尔森-米勒关系如方程1.1，其中A是常数，R代表气体常数。 蠕变速率用阿列纽斯型方程描述，这是一个指数规律，用于重现蠕变相对于金属温度升高的变化。可以证明，金属温度增加5％会使蠕变速度增加10倍。 表1.1涡轮不确定性和预期剩余寿命 不确定性（％） 金属T增加（K） 变化（％） 蠕变增加（-） 寿命减少（％） TET ±0.6％ 10.0 0.85 1.48 -37 叶恩公司角度 ±2° 1.9 0.16 1.08 -9 气膜冷却D ±10.0％ 39.4 3.36 4.70 -83 FCL/D ±6.0％ 39.4 3.36 4.70 -83 FC角度（内部） ±5° 10.0 0.85 1.48 -37 FC角度（外部） ±5° 10.0 0.85 1.48 -37 FCP/D ±10.0％ 19.4 1.65 2.14 -59 撞击D ±10.0％ 22.2 1.89 2.39 -64 进出口。H/d ±10.0％ 22.2 1.89 2.39 -64 进出口。P/d ±10.0％ 36.1 3.08 4.13 -81 肋骨P/L ±20.0％ 6.7 0.57 1.30 -27 肋骨L/H ±20.0％ 10.0 0.85 1.48 -37 肋角 ±5.0％ 3.9 0.33 1.17 -17 针鳍D ±20.0％ 11.1 0.95 1.55 -40 PinfinP/D ±10.0％ 6.1 0.52 1.27 -25 针鳍H/D ±20.0％ 13.9 1.18 1.73 -48 TE出口槽AR ±10.0％ 20.0 1.70 2.19 -60 TEth/AR ±25.0％ 12.8 1.09 1.65 -45 TBCth ±0.05毫米 12.8 1.09 1.65 -45 表1.1报告了由测量不确定度引起的金属温度升高引起的r增加的因素。在获得的结果中，可以观察到金属温度下约40K的变化（相对于参考值变化3.36％）将导致蠕变速率增加4.7倍。 Larson-Miller关系也用于通过Larson-Miller参数（LMP，方程1.2）直接关联叶片的预期寿命和金属温度。 在等式1.2C是一个常数（通常在20左右），而tr代表剩余寿命。已知对于给定的材料，LMP值在恒定的应力速率下是恒定的，然后有可能评估在给定的金属温度升高情况下叶片剩余寿命的变化。至于蠕变速率的评估，考虑了900℃的金属温度T1。公式1.2也可以重新排列，以证明金属温度变化ΔT，预期金属温度T1，预期剩余寿命tr，1和新值tr，2。 Larson等人[42]估计90％的分析叶片存活11,077小时。该值已被视为估算由测量不确定性产生的tr变化的参考值。预期的剩余寿命减少情况见表1.1。在获得的结果中，值得一提的是，1.9K的变化几乎可以忽略不计，在预期的使用寿命中，这将导致8.56％的不可忽略的下降。考虑到39.4K左右的最大变化，预期剩余寿命减少了83.45％，同时蠕变值相应增加。 必须强调的是，对于目前的分析，将温度变化ΔT应用于平均金属温度而不是局部值，并且然后获得的寿命变化表示几乎不可能的情况，实现的可能性非常低。但是，要记住一件罕见的事情并非不可能，而且要考虑到这些情况，不确定度量化分析是非常必要的。 1.4低压涡轮需要更清洁，更安全，更实惠的飞机。为了改善燃料消耗和排放，已经提出了几种不同的解决方案，其中新的机翼形状，更轻的飞机和更高效的发动机尤其重要。通过减少低压涡轮的重量可以实现显着的改进，低压涡轮的重量目前占整个发动机重量的30％。如巴斯克斯和托雷[43]所示，这种减少可以通过减少叶片的数量来获得。但是，为了进行相同的工作，每个叶片的空气动力学负载必须增加，这可能对效率有不利影响。如Hourmouziadis[44]所示]，高升程型材设计中遇到的主要困难是控制和减少吸力侧的层流分离气泡，这是由于吸力面后部高水平的减速，尤其是在低雷诺数下。根据飞机类别的不同，发动机重量减少10-17％意味着燃油消耗量减少3-5％（Tabakoff[5]）。 理论上低压涡轮叶片是过渡型翼型，其中不确定性的影响可能是最重要的。但是，如下面的段落所示，基于高升力叶片的航空发动机中使用的新设计并未显示出对粗糙度，尾缘厚度或翼型厚度的强烈依赖性。这表明低压涡轮中不确定性的影响很小。 1.4.1 低压涡轮对粗糙度的影响半个多世纪以来，对表面粗糙度对燃气轮机的影响进行了研究。研究一直致力于三个不同的主题：（1）影响（2）表面粗糙度对涡轮性能的影响，以及（3）表面粗糙度对传热的影响。 粗糙度的影响取决于雷诺数和叶片设计。对于前装载设计[高升程轮廓45]使表面粗糙化也对损失具有有益的效果，但这种效果消失在较低的雷诺数，≤30000，其中该表面变得光滑液压。粗糙度水平的不确定性会影响这种设计的整体损失（图1.6）。 巴斯克斯和托雷[43]通过实验研究了表面粗糙度对多级涡轮高速台架低压涡轮（低压涡轮）效率的影响。该台架由三个阶段组成，具有非常高的升力设计，并且他们比较了抛光表面抛光与铸造粗糙翼型之间的损耗差异。结果表明，在高海拔处，额外的粗糙度不会引入额外的压力损失，不确定性对表面粗糙度的影响可以忽略不计。 在航空发动机中，较高的粗糙度（达到铸造水平）对发动机性能的有益影响可忽略不计。考虑到在服务操作中，叶片表面变得粗糙，粗糙度水平的不确定性具有正偏差。 1.4.2 低压涡轮尾缘厚度周等人[46]研究了叶型厚度对低压涡轮叶片的影响。研究尾缘厚度从1.4到4.7％不等，雷诺数为21万。 当尾缘厚度增加时，主要有三个影响：（1）基压区高压区域增加，倾向于减少下游混合损失；（2）基础压力降低，这往往会增加损失；和（3）尾缘下游的流动扩散趋于增加 亏损。总体结果是三者的综合效应。对于T106C级联，将尾缘厚度从1.9％增加到2.8％，对损耗影响很小。进一步增加尾缘厚度增加了损失。T2叶片比T106C叶片具有更高的升力，因此降低尾缘下游混合损失的底部压力效应更明显。 周等人[46]发现超高提升设计，损失不会对一定范围内的叶片尾缘厚度适度增加非常敏感。在某些情况下，使用较厚的尾缘甚至可以减少损失。重要的是要记住，作者考虑了轮廓背压侧的变化，而不改变吸力侧的形状和扩散。 1.4.3 低压涡轮叶型厚度Torreetal[47]研究了翼型厚度对低压涡轮损失的影响。翼型厚度对低压涡轮效率的影响通过使用两套不同的叶片测试的三级台架进行了研究。两套NGV的设计在吸力面上具有相同的Cp分布。为了比较厚度的影响，重要的是在低压涡轮吸入侧保持相同的压力分布。事实上，大部分损失是由吸入侧驱动的，当研究其他参数对损失的贡献时，避免对这部分进行任何修改是很重要的。两组之间的唯一区别与翼型厚度有关。作者发现通过增加接近端壁的翼型厚度，分离泡及其与二次流的相互作用被移除。然而，翼型厚度变化的影响可以忽略不计。 在低压涡轮中，似乎几何变化对性能的影响是可以忽略的。 1.5结论图1.7显示了具有叠加不确定性的航空发动机的草图，对效率的影响以及显示哪一方面可能受所有服役损耗的不确定性影响的图表。 有可能总结对不同部件的影响： 风扇：风扇主要受服役损耗影响，主要是沙子吸入。吸入沙子会改变前缘形状，改变顶端附近跨音速风扇的冲击结构，弦长和前缘形状 轴流式压气机：前端主要受到服务中的退化和影响 特别是在尖端附近，后部高压压气机受到制造误差的影响。另一方面是有助于修改前缘形状的涂层分布。 高压涡轮：燃烧室存在未知条件，主要是涡轮入口温度和冷却系统中的制造误差。这些误差的主要影响是这些部件的寿命。 低压涡轮：制造误差的影响似乎可以忽略不计在公开文献中发现了什么。 参考文献Paniagua,G.,Dénos,R.,＆Almeida,S.(2004).轮毂端壁腔流量对跨音速高压涡轮流场的影响.JournalofTurbomachinery,126(4),578-586. Dudgeon,EH(1994).Agard,agard-AR-320. Schnell,R.,lengyel-Kampmann,T.,和Nicke,E.(2014).关于几何变量对风扇气动性能,不稳定叶片排相互作用及其机械特性的影响.叶轮机械杂志,136,091005-1. Ghenaiet,A.(2012).沙粒运动轨迹和侵蚀到涡扇发动机第一压缩阶段的研究.叶轮机械杂志,134(5). Tabakoff,W.(1986).单级轴流压气机性能恶化的研究.美国机械工程师协会,流体工程部(出版)FED,37,95-100. Balan,C.,＆Tabakoff,W.(1984).轴流式压气机性能恶化.AIAA纸. Ghenaiet,A.,Tan,SC,＆Elder,RL(2005).预测由于沙粒吸入导致的轴流式涡轮性能下降.ProceedingsoftheInstitutionofMechanicalengineers,PartA:JournalofPowerandEnergy,219(4),273-287. Klinner,J.,Hergt,A.,＆Willert,C.(2014).侵蚀扇翼前缘周围跨声速流动的实验研究.流体实验,55(9). Giebmanns,A.,Backhaus,J.,＆Frey,C.(2013).压气机前沿灵敏度和伴随流量求解器的分析.在所述涡轮ASME世博会论文集(第6卷A).181制造和使用中的不确定性… Giebmanns,A.,Schnell,R.,＆Steinert,W.(2012).通过2D和3D模拟和级联测量来分析和优化几何降级的跨音速风扇叶片.在ASME涡轮博览会会刊(第8卷,第279-288页)中. Goodhand,MN,Miller,RJ和Lung,HW(2012).二维压气机入射范围对运行中几何变化的敏感性.在所述涡轮ASME世博会论文集(第8卷,第159-170). Goodhand,MN,＆Miller,RJ(2011).压气机前沿尖峰:新的性能标准.叶轮机械杂志,133(2). Elmstrom,ME,Millsaps,KT,＆Hobson,GV(2011).不均匀的前缘涂层对压气机翼型的空气动力学性能的影响.JournalofTurbomachinery,133(4). Wheeler,APS,Sofia,A.,＆Miller,RJ(2009).前缘几何对压气机尾流相互作用的影响.JournalofTurbomachinery,131(4),1-8. Lamb,CT和Darmofal,DL(2004).基于性能的压气机叶片的几何公差.在所述涡轮ASME世博会论文集(第5A,第203-210). Garzon,VE和Darmofal,DL(2004).几何不确定性下压气机翼型鲁棒性的气动设计.ASME涡轮博览会会刊(第5卷,第191-202页). Caguiat,DE(2003).劳斯莱斯/艾里逊501-K燃气轮机防污压气机涂料评估.JournalofTurbomachinery,125(3),482-488. Sakulkaew,S.,Tan,CS和Donahoo,E.(2013).压气机效率随转子叶尖间隙从消失到大间隙而变化.叶轮机械杂志,135(3). Freeman,C.(1985).轴流式涡轮中的端部间隙效应.在CHSieverding(Ed.)中, VKILS1985-05,4月15-18.冯卡曼流体动力学研究所. Suder,KL,Chima,RV,＆Strazisar,AJ(1995).增加粗糙度和厚度的跨音速轴向压气机转子的影响.Transactions-ASME:JournalofTurbomachinery,117(4),491-505. Gbadebo,SA,Hynes,TP,＆Cumpsty,NA(2004).表面粗糙度对轴向压气机三维分离的影响.在ASME涡轮博览会2004年的会刊(第5卷,第471-481页)中. Syverud,E.,Brekke,O.和Bakken,le(2007).盐水吸入导致轴向压气机劣化.JournalofTurbomachinery,129(1),119-126. Morini,M.,Pinelli,M.,Spina,PR(2010).轴流式压气机级结垢的计算流体力学模拟.燃气轮机与发电工程杂志,132(7). Curlett,BP(1991).圆角半径在低速压气机系统中的空气动力学效应.美国宇航局技术备忘录105347. Salvadori,S.,Montomoli,F.＆Martelli,F.(2011).具有入口温度畸变的跨音速燃气轮机中的非定常流场的气热研究.叶轮机械杂志,133(3). Montomoli,F.,Massini,M.,＆Salvadori,S.(2011).叶轮机械中的几何不确定性:顶部间隙和圆角半径.Computers＆Fluids,46(1),362-368. Massini,M.,Miller,RJ,＆Hodson,HP(2011).一种用于测量高温气体停滞量的新型间歇吸气式探针.JournalofTurbomachinery,133(4). Ames,FE,＆Moffat,RJ(1990).模拟燃烧室湍流对边界层传热的影响.美国机械工程师协会热传导分部,(出版)HTD,138,11-17. Krishnamoorthy,V.,Pai,BR,＆Sukhatme,SP(1988).上游流动条件对喷嘴导叶传热的影响.JournalofTurbomachinery,110(3),412-416. Krishnamoorthy,V.,＆Sukhatme,SP(1989).自由流湍流对燃气轮机叶片传热的影响.JournalofTurbomachinery,111(4),497-501. Mehendale,AB,Ekkad,SV和Han,J.(1994).主流湍流对空气和CO2膜注入的燃气轮机叶片膜效率和传热系数的影响.InternationalJournalofHeatandMassTransfer,37(17),2707-2714. Hall,BF,Chana,KS,＆Povey,T.(2014).设计具有旋涡和温度畸变的非反应式燃烧器模拟器,并进行实验验证.燃气轮机与发电工程杂志,136(8). Salvadori,S.,Riccio,G.和Insinna,M.(2012).用解耦和松散耦合方法分析燃烧室/叶片的相互作用.在所述涡轮ASME世博会论文集(第8卷,第2641至2652年). Bunker,RS(2009).制造公差对燃气轮机冷却的影响.叶轮机械杂志,131(4),1-11. Moeckel,CW,Darmofal,DL和Kingston,TR(2007)通过制造变异性的概率热分析的冷却涡轮叶片的容差设计.在所述涡轮ASME世博会论文集(第5卷,第1179至1191年). Sundaram,N.,＆Thole,KA(2007).表面沉积,孔堵塞和热障涂层散裂对叶片端壁冷却的影响.JournalofTurbomachinery,129(3),599-607. Bohn,D.,＆Krewinkel,R.(2006).制造冷却孔造成的无意偏差以及蒸发冷却效率的操作.在ASME涡轮博览会的会刊中(第3卷,A部分,第689-699页). Jovanovic,MB,deLange,HC和vanSteenhoven,AA(2008).孔缺陷对绝热气膜冷却效果的影响.InternationalJournalofHeatandFluidFlow,29(2),377-386. Jovanovic,MB,deLange,HC和vanSteenhoven,AA(2006).孔洞缺陷对射流横流相互作用的影响.InternationalJournalofHeatandFluidFlow,27(1),42-53. Jovanovic,MB,DeLange,HC,和VanSteenhoven,AA(2005).激光钻孔缺陷对气膜冷却性能的影响.在所述涡轮ASME世博会论文集(3卷,A部分,第285-292). Saumweber,C.,＆Schulz,A.(2012).几何变化对扇形冷却孔冷却性能的影响.叶轮机械杂志,134(6). Larson,F.,R.,＆Miller,J.(1952).时间温度与破裂和蠕变应力的关系.ASME的交易,74,765-775. Vázquez,R.,＆Torre,D.(2013).表面粗糙度对低压涡轮效率的影响.在所述涡轮ASME世博会论文集(第6卷A). Hourmouziadis,J.(1989).低压涡轮的气动设计.AGARD系列讲座(第8.1-8.40页). Montomoli,F.,Hodson,H.和Haselbach,F.(2010).低雷诺数条件下新型低压涡轮叶片的粗糙度和不稳定性对其性能的影响.叶轮机械杂志,132(3). Zhou,C.,Hodson,H.,＆Himmel,C.(2013).尾缘厚度对超高提升LP涡轮叶片损失的影响.在所述涡轮ASME世博会论文集(第6卷A). Torre,D.,Vázquez,R.,＆Armañanzas,L.(2013).翼型厚度对低压涡轮效率的影响.叶轮机械杂志,136(5). 2 叶轮机械CFD中的局限性摘要：目前，计算流体动力学（CFD）是一种广泛应用于燃气轮机分析和设计的方法。由于可用的计算资源可以使用高保真方法模拟高速流动，因此CFD的准确性正在迅速提高。然而，CFD使用的是模型，并且有几个近似值和误差来源于过程，例如由N-S方程和湍流模型的离散化引起的截断误差。这种限制的典型例子可能是稳定流动假设，湍流闭合或网格分辨率。近似值的影响可能是最小的，以评估全部参数变化的趋势，但它会对预测当地的重要参数如流量温度和传热等有重大影响。值得强调的是，现有的计算资源正朝着所谓的高保真CFD推进，突出强调实现这一目标需要什么以及如何减少近似值的影响是非常重要的。 关键字：CFD限制 网格依赖 部件交互 2.1边界条件数值模拟的边界条件的确切知识可能是CFD中最具挑战性的问题之一，并且在叶轮机械中至关重要。事实上，叶轮机械部件经受非均匀条件，其分布必须以高精度确定。 这类问题的一个典型例子是仿真具有逼真入口条件的高压级。Salvadori等人[1]表明，非均匀入口温度曲线在叶片吸力上产生+10％的变化在中跨侧静压分布，+努塞尔数量-60％的变化叶片压力侧的热值和峰值总温度变化19％对于均匀入口的情况，在阶段出口部分的中间跨度处。考虑到涡轮入口温度的分布不是直接测量的，并且实际燃气涡轮中通常存在超过50K的误差，所以清楚这种参数的影响。 图2.1显示了MT1[1]高压阶段温度分布（a）中的热斑迁移。转子热负荷的预测高度依赖于入口非均匀温度分布，这通常是未知的。通过使用温度曲线（a），由于热点迁移，转子顶部将会燃烧。但是通过使用温度曲线（b）具有相同的温度平均值，转子顶部冷却并且没有寿命问题。不幸的是，这两种分布都处于燃烧室出口温度的测量误差范围内，并且与分布（a）或（b）相关的任何结论都可能具有误导性。 最近Insinna等人[2]研究了真实的燃烧室出口截面轮廓（包括涡流和压力/速度不均匀性）对高压冷却叶片性能的影响。作者证明在叶片负载的残余涡流的不可忽略的影响和旋流/透射电镜perature上的无量纲参数冷却的径向分布的效果，与变化高达37.5％上靠近端部的密度比吹风比率高达50％。除了高压涡轮中引用的论文以外，入口条件的不确定性会影响局部热负荷，从而影响寿命估计，但有些情况下边界条件会严重影响预测结果。例如，进口不均匀性会改变压气机性能，特别是失速开始时，来自衬管的冷却空气的再分配改变了燃烧室内的排放预测，并且未知的吹扫流量分布改变了高压涡轮的行为。考虑到高压涡轮中的定子-转子间隙，可以观察到净化质量流量低于1％的变化产生0.26％的效率损失[3]。 在低压涡轮级中，入口条件显得尤为重要，其中过渡过程由尾流和吸力侧边界层之间的相互作用驱动。然而，即使有一个能够准确计算这种交互作用的“完美”转换模型（现在情况并非如此），传入的唤醒很难准确预测。二维模拟过度预测了尾流中涡量的强度，因为不允许涡度的三维重新分布。值得一提的是，低压涡轮效率的单点降低是造成0.6-0.8点燃油消耗量增加的原因[4]，这就解释了对低压涡轮预测的兴趣。 很显然，差价合约应该转向耦合模拟和所谓的“虚拟引擎”模型[5]。有几项研究试图从进口到出口实现整个燃气轮机的数值模型，以减少边界条件的影响。 2.2再现真实几何每个仿真过程的一个关键方面就是真实的几何模型和仿真模型之间的区别。CFD中使用的模型和涡轮中的实际部件不完全相同。首先，计算域不考虑所有的几何特征，例如圆角和步骤。即使在集成模拟压气机/燃烧室/涡轮的情况下，二次空气系统（SAS）也可能被忽略，只有使用相关性或恒定质量流量源条件才能包括它们的影响。即使在包含SAS的情况下，服务运营期间的差距的实际尺寸几乎是未知的。然后，计算域中逼近水平的选择本质上与边界条件近似相关。 已经提到的另一个方面是几何细节受部件制造的影响，因此该模型（基于设计值）将不能精确再现发动机中的真实几何形状。为了量化几何变化的影响，可以做几个例子。Adami等人[6]表明，转子端壁的制造误差甚至可以将阶段效率提高。。。％。作者证明，这种改善的性能是由吹扫气流和主流之间的不同相互作用引起的。最近Montomoli等[7]表明，与锋利的情况相比，在转子顶部存在平滑边缘的情况下，转子顶部上的峰值马赫数会产生约20％的变化。由于间隙保持不变，因此该结果表明，圆角边缘可以增加质量流量，从而降低阶段效率。必须强调的是，原则上有很多细节可以包含在几何模型中，但其中大部分细节都是未知的，例如圆角和平台间隙。在许多情况下，CFD的这种限制可以用于几何不确定性类别，但在其他情况下（即小圆角，非轴对称环形。。。）近似于降低模型复杂度，降低计算成本，提高收敛性。 当几何模型被修改以改进收敛性和结果的准确性时，会出现不同的问题。例如，可以使用压缩尖端模型来模拟转子顶部上的静脉压缩物或压缩尾缘以去除航空翼片尾缘处的鱼尾效应。 2.3网格依赖网格依赖性分析必须被视为每个数值模拟的基本任务。事实上，网格间距效应可能导致对流动结构（即卡门涡街，冲击强度和位置，二次流动。。。）和积分参数（例如停滞损失）的差预测。由于这些原因，在执行高保真度计算流体动力学时，必须考虑计算网格对获得结果的影响。 必须强调的是，“完美网格”不存在：一旦数字活动的结果已经确定，必须对网格参数的适当定义进行个性化处理，以捕捉基本流动特性。此外，网格质量必须与选定的数值方法相一致，并特别注意稳定/非稳定分析和湍流建模。例如，当尾缘区域的空间分辨率太细时，用于稳定分析二维轮廓的几种方案可能导致非收敛解，因为尽管稳定假设，仍可能出现不稳定的基础区域。同时，用粗网格进行大涡模拟是错误的，因为子网格比例模型会试图解释涡结构。 然后创建一个适当的计算网格依赖于仿真的几个并发方面，用户时间在整个过程中起着关键作用。在的网孔的影响方面的方法在[提出8-10]被认为是CFD的黄金标准和强制性的科学出版物[10，11，12]。对于网格依赖性分析的完整评论，上述Roach的论文向读者建议。 电网收敛指数决定了电网对特定参数评估的影响。它代表了与空间滤波器相关的数值不确定性，并可以与实验不确定度进行比较。这是计算网格质量的后验评估。这个想法是提供一个关于通过渐近方法获得的参考解的特定计算网格的选择中包含的误差的估计。网格收敛指数最初是为了网格收敛研究而提出的，具有均匀细化[8]，并基于广义Richardson外推理论。后来提出了“推迟到极限的办法”[13][14]基本思想是将使用两个不同网格获得的数值模拟的分离离散解结合起来。 重点说明理查森外推准则的某些方面。首先，它不需要使用精确到几何级数的网格（点数的两倍）。理查森外推法最重要的特性是它甚至可以应用于功能性解决方案，例如空气箔的损失系数或冷却射流的排放系数。这个特性对于设计人员感兴趣的工程相关问题的应用至关重要。此外，如果用于外推的网格数量足够高，则函数的外推值与原始值的准确度的顺序相同。必须强调的是，理查森外推法给外推解提供了一些噪音，然后降低了更高阶导数的准确性。通常，当分析燃气轮机部件时，它并不代表真正的限制。 考虑到从两个不同网格获得的两个离散解，网格收敛指数背后的思想是将通过网格收敛研究得到的变量的相对变化与用准确网格加倍的二阶精确研究得到的相应变化相关联。使用第三个网格来估计外推解的误差本身可以理论上导致外推六阶精度解。网格收敛指数的应用程序的一个有用的例子可以在[11]中找到]有计算网格的完整程序。这种方法可以应用于结构化和非结构化案例。在后者中，当使用系统的网格细化方法时，该算法提供最佳结果。实际上，有几种情况下，对非结构化网格进行“结构化”改进是不可能的，主要是由于围绕固体壁的棱柱块存在边界层发展分析。出于这个原因，网格收敛指数的评估建议基于聚合参数，如轮廓损失。这种方法的应用实例可以在[15]中找到]，其中考虑到三个独立结果，对于细网格的网格收敛指数已经针对冷却轮廓的损失系数进行了评估。 网格收敛指数的一个主要缺点是，在数值运动开始之前，必须至少进行三次模拟。此外，如果存在不连续性或奇点，则必须在此过程中将其分析或个别移除。无论如何，当不连续性受到限制时，网格收敛指数的使用仍然有效。 必须强调的是，网格收敛指数没有提供关于代码本身准确性的任何信息：代码必须针对相同类别的问题进行验证并根据实验数据进行验证。当在复杂流程中考虑转换建模或部件之间的不稳定的相互作用时，这是非常重要的。一旦选择了最终网格，应该执行特定的数字活动来验证特定情况下的计算工具。 值得一提的是，这不是量化数值不确定性的唯一可能的技术。此方法只能用于执行网格间距效果的后验评估，并可用于为数字广告系列选择适当的网格。总之，计算流体动力学的良好实践应包括评估网格收敛指数，然后进行模型评估和不确定度量化。 2.4稳定/不稳定的相互作用当研究压气机和涡轮中的转子/定子相互作用时，基本上有一种选择会显着改变模拟的准确性：是否执行稳定模拟（使用混合平面或类似方法）或不稳定模拟。尽管在90年代已经广泛地进行了带混合平面的稳态模拟，但必须强调的是，假设转子/定子接口上的污迹不明确对于当前的精度要求来说过于强大。事实上，他[16，17]表明，滞后压力仅代表稳定环境下的损失：在稳定的绝热情况下，流线上的熵上升总是与总压力下降相关，而考虑到不稳定但无粘性的情况，压力时间变化影响停滞焓。他证明，在不稳定的粘性情况下，总压力变化可以提供关于全球损失的一些信息，但也受到远离叶片表面的欧拉流量的影响。此外，Payne等人[18]个人化了大量的时间分辨阶段效应，这是叶片阶段对非稳定损失实体的重要性的基础。另外，Pullan[19]]表明，与不稳定的模拟相比，稳定的模拟产生的损失减少了10％。 由稳态模拟引起的另一个经典误差是分析转子排中热点的重新分布。巴特勒等人[20]表明，在轴流机器中，热流体倾向于积聚在转子叶片的压力侧。考虑到对于没有体力的稳定等熵流，对于具有均匀总压入口场的规定几何形状，叶片出口处的马赫数和静态压力场两者的流线不受总体影响温度入口场（Munk和Prim[21]）。这意味着在定子出口部分，热流体比周围流体具有更高的速度。考虑转子入口处的速度三角形，可以获得偏析效应的典型机制（Kerrebrock和Mikolajczak[22]）。所谓的“正射流效应”是与通道涡相互作用的内在不稳定的现象：二次再分配使热流体从吸入到压力侧周向地穿过叶片，从而将热流体散布在叶片的整个压力表面上[23]。结果，叶片压力侧的热负荷增加，叶片的使用寿命缩短 蠕变速率增加。由于叶片出口部分的切向非均匀性被忽略，因此用混合平面进行的稳定计算不能再现这种现象。 可以得出结论，应该始终对涡轮级进行精确的非稳态模拟，作为对稳态模拟结果的支持。不稳定分析允许模拟几个重要的现象： 非稳态入口畸变：边界条件影响燃气轮机的性能； 潜在的相互作用：它是由压力波传播引起的（并反映- ）穿过定子/转子间隙； 旋转失速：典型的压气机，是由于导致流动分离的错误入口造成一些叶片堵塞造成的； 清醒通过：在低压涡轮中用于抑制的基础 层状分离气泡； 气动弹性不稳定性：通常称为“颤振”，是由叶片对不稳定扰动的机械响应产生的。 所有这些现象代表了燃气轮机设计中重要的不稳定话题。定子/转子相互作用的研究有许多不稳定的方法： Adamczyk等人的“确定性压力”方法[24] Dorney等人的“松散耦合”方法[25] Rai和Madavan[26]提出的“域缩放” “时间滞后”方法通过引入贾尔斯[27，28] “广义形状校正”，由他的方法[29，30] 所有这些方法由于各自的假设而对CFD分析引入了一些限制。很难量化每种方法所引入的不准确性，然后为可靠的模拟找到最准确的解决方案。在[24]中，不稳定效应是建立在一个稳定的环境上，然后分析的准确性与模型本身的准确性一样高。在[25]中，通过改变边界条件对单个分量执行非定常计算，然后获得弱相互作用。“域缩放”方法[26]被广泛使用，但修改了叶片计数比，然后相对于实际配置修改了特征频率。Giles[27，28]要求在CFD代码和一个复杂的处理导致的重建时间分辨溶液的变化。所述“gen-eralized形状校正”的方法[29，30]是由频率的确定性选择限定于模拟过程中占和一些phe-nomena难以进行分析（即，涡旋脱落）。最后，不稳定的相互作用应该用完全不稳定的模拟进行研究，但在这种情况下，仍然存在与所选时间步骤（代表分析的时间滤波器）相关的限制。 2.5部件交互如前所述，使用精确的边界条件来分析涡轮流量非常重要，然后对部件相互作用进行模拟是一种有前途的方法。几个作者提出准确的方法，以在燃气涡轮[几个不同的部件31-35]。尽管获得了改进的准确性，但是可以将一些限制个体化。在文献[31]中提出了一种可压缩的方法，并使用单个CFD代码来耦合燃烧室和高压涡轮。该方法受使用单一CFD代码的燃烧和空气动力学限制，而智能方法则宁愿建议对每个问题使用一个代码来提高精度[32]中已经解决了这个问题]与两个不同的代码之间，然后在[稳定耦合33，34]，其中，几个码被用于非定常的相互作用。在[35]也通过共轭方法进行金属部件的分析，并提出完整的非稳态/全环模拟。在大多数情况下，与选择非定常方法（如前所述）相关的一些限制以及为每个部件选择的准确度水平可以被指定。众所周知，通过将高阶方法用作大涡模拟可以对燃烧室进行精确分析，但由于高雷诺数，相同的方法很难用于高压涡轮。然后，必须使用精确的方法来交换界面上的湍流信息，特别是关于评估湍流长度尺度。 2.6冷却装置必须特别注意冷却装置的模拟，因为它们的设计受到几何不确定性，数值精度，流体/固体相互作用和边界条件变化的影响。可以说，冷却跨音速高压叶片的数值模拟是CFD中最具挑战性的课题之一。几何不确定性如此之高以至于冷却孔直径的10％变化会在叶片的局部金属温度中产生40K的增加[36]。Montomoli等人已经表明了几何变化对气膜冷却孔性能的影响[37]的交叉流动配置：已经证明，孔径大至5％的圆角会使流量系数变化0.1。数值精度也是冷却评估不确定性的重要来源。Carnevale等人研究了湍流模型的强大影响[38，39]用于间nal冷却系统。在[38]中已经证明只有前缘S能够复制 正确地说明针鳍之间努塞尔数的趋势，并且在[39]中已经证明，使用不确定度量化分析结合高阶方法学能够正确再现努塞尔数变化的趋势。尽管一些作者提出，低真度模型将是足够精确的，以匹配绝热效果的趋势[40]，它是当今公认的是，冷却系统应使用共轭热传递的方法[分析41]与过渡建模[2，42，43]。两者ķ-ε-υ2-˚FLien和Kalitzin[44]的转换模型以及Walters和Cokljat[45]的kT-kL-ω模型在冷却叶片分析中表现出高水平的准确性，尽管它发生在特定的参数调整后。在[2]也显示了内部充气室对无量纲冷却参数的径向分布的影响，对于所研究的情况在形状和数值上有很大的变化。总之，现代内部和外部冷却装置的高度复杂性以及它们对几何参数和工作条件的敏感性表明，使用高保真工具来减少认知不确定性，而不确定度量化应被视为处理任意参数。 2.7结论在之前的章节中，CFD在叶轮机械部件分析中所引入的局限性已被证明是用于克服这些问题的最有前途的方法。无论选择何种方法，始终存在与用于执行模拟的数字模型相关的限制。数值模拟的准确性是离散方程的准确性，所选择的离散化方法（前向/中央/后向）以及梯度重建顺序的组合。此外，将会出现与计算网格（空间滤波器）和选定时间步长（时间滤波器）相关的效应，更不用说双时间步进逼近的Courant数。后一个参数也将在显式/隐式算法的选择中发挥作用，这也与解决动荡模型的准确性有关。事实上，湍流是叶轮机械流动中的关键问题，因为它有可能从代数方法到直接数值模拟，并且准确度和计算成本越来越高。还可以强调的是，在存在多相流的情况下，即空化和燃烧时，所选择的方法将对所获得的结果引入特定的限制，其实体难以量化。大多数引用的问题都与随机不确定性有关，也称为可归约不确定性，因为它是问题物理知识和算法复杂性的函数。然后，随着对物理学知识和计算资源的改进，数值精度可以提高。然而， 参考文献Salvadori,S.,Montomoli,F.,Martelli,F.,Chana,KS,Qureshi,I.,＆Povey,T.(2012).非均匀入口剖面对涡轮级传热与流体流动的影响分析.JournalofTurbomachinery,134(1),011012-1-14.doi:10.1115/1.4003233. Insinna,M.,Griffini,D.,Salvadori,S.,＆Martelli,F.(2014).在真实的燃烧室出口流动条件下,气膜冷却高压涡轮叶片的共轭传热分析.在该ASME涡轮博览会2014年论文集,卷5A:传热,德国杜塞尔多夫,6月16日至20日,第V05AT11A007(14页).doi:10.1115/GT2014-25280. Pau,M.,Paniagua,G.,Delhaye,D.,delaLoma,A.,＆Ginibre,P.(2010).定子-轮缘吹扫气流和转子-平台气膜冷却对跨音速涡轮阶段的气热影响.叶轮机械杂志,132(2),021006-1-12.doi:10.1115/1.3142859. Bernardini,C.,Carnevale,M.,Manna,M.,Martelli,F.,Simoni,D.,Zunino,P.(2012).通过合成射流抑制涡轮叶片边界层分离:实验和数值研究.JournalofThermalScience21(5):404-412.doi:10.1007/s11630-012-0561-2 Medic,G.,Kalitzin,G.,You,D.,vanderWeide,E.,Alonso,JJ,＆Pitschk,H.(2007).整个燃气涡轮喷气发动机的综合RANS/leS计算.在第45届AIAA航空航天科学会议和展览,1月8日至11日,2007/内华达州里诺市,AIAA2007年至1117年. Adami,P.,Martelli,F.,＆Cecchi,S.(2007).使用非定常计算流体动力学方法分析高压涡轮中的护罩泄漏流量和主流相互作用.美国机械工程师学会会刊A部分:动力和能源杂志,21.doi:10.1243/09576509JPE466. Montomoli,F.,Massini,M.,＆Salvadori,S.(2011).叶轮机械中的几何不确定性:尖端缺口和半径.ElsevierComputersandFluids,46(1),362-368.doi:10.1016/j.compfluid.2010.11.031. Roache,PJ(1994).透视:网格细化研究的统一报告方法. JournalofFluidsEngineering,116(3),405-413.doi:10.1115/1.2910291. Roache,PJ(1997).计算流体动力学中的不确定度量化.流体力学年度回顾,29,123-160.doi:10.1146/annurev.fluid.29.1.123. Roache,PJ(1998).验证代码和计算.AIAAJournal,36,696-702.doi:10.2514/2.457. Celik,I.(1993).流体流量计算中的数值不确定性:未来研究的需求. JournalofFluidsEngineering,115,194-195.doi:10.1115/1.2910123. Roache,PJ,Kirti,NG和White,FM(1986).关于数字精度控制的编辑政策声明.JournalofFluidsEngineering,108,2.doi:10.1115/1.3242537. Richardson,LF(1910).近似算术解法涉及微分方程物理问题的有限差分及其在砌体坝应力中的应用.伦敦皇家学会交易系列A,210,307-357.doi:10.1098/rsta.1911.0009. Richardson,LF,＆Gaunt,JA(1927).推迟到极限的方法.第一部分.单格.第二部分.互穿网格.伦敦皇家学会的哲学交易.系列A,包含数学或物理性质的论文,226,299-361.doi:10.1098/rsta.1927.0008. Saracoglu,BH,Paniagua,G.和Salvadori,S.(2014).脉动冷却喷射的能量分析.在2014年ASME涡轮展览会上,Volume2D:叶轮机械,德国杜塞尔多夫,6月16-20日,第V02DT44A016页(10页).doi:10.1115/GT2014-25868. 他,L.(1996).VKI讲座系列第一部分:计算非定常涡轮流量的建模问题.VKI系列讲座”叶轮机械中的不稳定流动”,VonKarman流体力学研究所. 他,L.(1996).VKI讲座系列第二部分:时间推进计算叶片排相互作用和fl.VKI系列讲座”叶轮机械中的不稳定流动”,VonKarman流体力学研究所. Payne,SJ,Ainsworth,RW,Miller,RJ,Moss,RW,＆Harvey,NW(2005).高压汽轮机阶段的不稳定损失:交互作用.InternationalJournalofHeatandFluidFlow,26,695-708. Pullan,G.(2006).涡轮级叶片排相互作用引起的二次流动和损失.ASMEJournalofTurbomachinery,128(3),484-491. Butler,TL,Sharma,OP,Joslyn,HD,＆Dring,RP(1989).在轴流式涡轮级中重新分配入口温度畸变.AIAAJournalofPropulsionandPower,5,64-71. Munk,M.,＆Prim,R.(1947).关于具有相同流线模式的稳定气流的多重性.ProceedingsoftheNationalAcademyofScience,33,137-141. Kerrebrock,JL和Mikolajczak,AA(1970).转子尾迹内的定子运输及其对压气机性能的影响.ASMEJournalofEngineeringforPower,92(4),359-368. Dorney,DJ,Davis,RL,Edwards,DE,和Madavan,NK(1992).对涡轮级热连轧过程的不稳定分析.AIAAJournalofPropulsionandPower,8(2),520-529. Adamczyk,JJ,Mulac,RA和Celestina,ML(1986).关闭平均通道方程系统的无粘性形式的模型.ASME交易,108,180-186. Dorney,DJ,Davis,RL和Sharma,OP(1996).采用松散耦合叶片排方法的不稳定多级分析.AIAAJournalofPropulsionandPower,12(2),274-282. Rai,MM,＆Madavan,NK(1988).涡轮转子-定子相互作用的多翼型Navier-Stokes模拟.里诺:NASA埃姆斯研究中心. Giles,MB(1988).计算不稳定的尾流-转子相互作用.AIAAJournalofPropulsionandPower,4(4),356-362. Giles,MB(1990).跨音速涡轮中的定子/转子相互作用.AIAAJournalofPropulsionandPower,6(5),621-627. 他,L.(1990).欧拉解决方案用于摆动叶片周围的不稳定流动.ASMEJournalofTurbomachinery,112(4),714-722. 他,L.(1992).模拟非稳态叶轮机械流动的多重扰动方法.AIAAJournal,30(11),2730-2735. Klapdor,EV,diMare,F.,Kollmann,W.和Janicka,J.(2013).使用PDF/FGM模型的燃气轮机燃烧室的可压缩的基于压力的解算法.流动,湍流和燃烧,91(2),209-247. Insinna,M.,Salvadori,S.,＆Martelli,F.(2014).使用耦合RANS求解器模拟燃烧器/NGV相互作用:验证并应用于实际测试案例.在该ASME涡轮博览会2014年论文集,卷2D:透平机械,杜塞尔多夫,德国六月16-20页V02CT38A010(12页).doi:10.1115/GT2014-25433. Kim,S.,Schluter,JU,Wu,X.,Alonso,J.J,＆Pitsch,H.(2004).综合模拟燃气轮机的多组分分析:RANS边界条件.在第40届AIAA/ASME/SAE/ASEE联合推进会议和展览,AIAA-2004-3415. Medic,G.,Kalitzin,G.,You,D.,Herrmann,M.,Ham,F.,vanderWeide,E.,etal.(2006年).综合RANS/leS计算通过涡扇发动机的湍流.年度研究简报,斯坦福大学湍流研究中心. ColladoMorata,E.(2012).不稳定的气热环境对涡轮叶片温度的影响.博士论文,图卢兹大学. Bunker,RS(2009).制造公差对燃气轮机冷却的影响.ASMEJournalofTurbomachinery,131,041018-1-11.doi:10.1115/1.3072494. Montomoli,F.,Massini,M.,Salvadori,S.,＆Martelli,F.(2012).几何不确定性和气膜冷却圆角半径.ASMEJournalofTurbomachinery,134(1),011019-1-8.doi:10.1115/1.4003287. Carnevale,M.,Salvadori,S.,Manna,M.,＆Martelli,F.(2013).RANS,URANS和NleS方法在针鳍阵列流动预测中的对比研究.在ETC会议论文集,2013年4月15日至19日,芬兰Lappeenranta,第928-937号,ETC2013-111号文件的第10届欧洲叶轮机械会议论文集中. 322TurbomachineryCFD中的局限性 Carnevale,M.,Montomoli,F.,D’Ammaro,A.,Salvadori,S.,＆Martelli,F.(2013).不确定度量化:一种用于传热预测的随机方法.ASMEJournalofTurbomachinery,135(5),051021-1-8.doi:10.1115/1.4007836. Adami,P.,Martelli,F.,Chana,KS和Montomoli,F.(2003).气膜冷却NGV叶片的数值预测.在IGTI,ASME涡轮博览会2003论文集,6月16-19日,美国佐治亚州亚特兰大,美国,文件编号GT-2003-38861. Montomoli,F.,Adami,P.,DellaGatta,S.,＆Martelli,F.(2004).气膜冷却叶片中的共轭传热建模.在IGTI会议论文集中,2004年6月14-17日,奥地利维也纳ASME涡轮博览会,论文编号GT-2004-53177. Takahashi,T.,Funazaki,K.,Salleh,HB,Sakai,E.,＆Watanabe,K.(2012).评估URANS和DES以预测前缘气膜冷却.叶轮机械杂志,134,031008-1-10. Luo,J.,＆Razinsky,EH(2007).使用V2F湍流模型的冷却涡轮叶片的共轭传热分析.JournalofTurbomachinery,129(4),773-781. Lien,FS,＆Kalitzin,G.(2001).用υ2-f湍流模型计算跨音速流.InternationalJournalofHeatandFluidFlow,22(1),53-61. Walters,DK,＆Cokljat,D.(2008)用于Reynolds平均Navier-Stokes过渡流模拟的三方程涡粘模型.流体工程杂志,130(4). 3应用于燃气轮机部件的不确定度量化摘要：前面的章节分析了不同燃气轮机部件的不确定性水平，它们如何影响寿命和燃料消耗等性能以及由CFD建模本身引入的数值不确定性。本章将展示CFD现在如何使用不确定度量化技术来研究这种制造误差的影响，并指出，对于每个部件，使用UQ学习和/或发现了哪些方法以及使用了哪种方法。UQ主要考虑用于燃气轮机，以便为CFD预测增加一个“误差线”。然而，我们想表明，UQ最有趣的应用之一是从设计角度理解变量的影响，并“调查”问题的原因。Seshadri等人展示了一个非常好的例子[12]，作者使用UQ找出CFD与NASA转子37测试案例实验不一致的真正原因。即使推测数年，可能的原因是转子前的泄漏，Seshadri也能够量化由于泄漏造成的不确定性的影响。 关键词：敏感性研究 多项式混沌 伴随方法 压气机 涡轮 3.1压气机多种不同技术的组合表征了压气机不确定度的量化。它是可以识别的敏感性研究[1]，伴随制剂[2]使用统计方法和晶格采样蒙特卡洛，后处理[3]，多项式展开混沌[4，5]。 3.1.1敏感性研究敏感性研究是尝试量化不确定性的最古老和最简单的方法之一。该方法的基本思想是定义几何或运行条件的界限，并估计兴趣输出中的边界和梯度。让我们想象一个简单的问题，我们想要预测压气机空气箔在不同发生率下的性能， Ple±5°。在这种情况下，我们可以设想到在执行3个CFD研究+5°，0°和-5°入射的，并评估每个这三个条件的轮廓损失。在第一近似值它可以估计效率的从入射变化的依赖性仅仅作为为dη/二=（η0-η5）/5。 敏感性研究的一个例子可以在[6]中找到。作者进行了一项研究敏感性分析来评估几何变化和发生率影响的影响。作者使用MISES2D求解器来预测压气机翼型的线性/非线性行为，在翼型表面上测量几何变化，从而修改腔体的前15％[6]。UQ和轴流压气机的主要工作重点在前沿区域，因为如第一章所示，该区域易受不确定性影响，并可能对整体压气机性能产生巨大影响。 下面是一个二维压气机叶片灵敏度研究的例子。图3.1显示了通常用于评估输入几何图形中几何图形灵敏度的流程图。在这个例子中没有制造数据可用，并且使用文献结果来指定制造变异性建模。 本研究的调查程序遵循下面图3.2中概述的步骤。首先，定义基准叶片几何形状，并指定应用制造误差的方法。那么制造误差的几何就是这样网格化和模拟。由于此仿真的成本相对较低，因此最好重新对新的几何进行重新网格划分，而不是更改基线网格。然后将CFD的输出添加到数据集中。数据集是一个网格，每个节点代表一个独特的几何形状，并且与坐标变化的程度有关的坐标。如图3.1所示，该过程将循环显示原始叶片几何形状的每个独特变化。 如图3.2所示，将扰动应用于基线翼型，使用位移方向作为局部表面法线。法线方向用拉普拉斯松弛平滑。位移的距离，正值或负值，应用高斯分布和两个控制变量，即平均值和标准差。平均值的位置可以在前沿附近变化。图3.2显示了对110个不同修改的前沿扰动的结果。例如，对于应用于前沿的整体变化，CFD模拟预测的是相对变化停滞压力损失，如果与基线相比，+5.75和-3.96％。灵敏度分析限制了性能，并且对理解该性能非常有用修改的相对重要性。毫不奇怪，制造误差甚至可以提高翼型的性能（即使不能应对入射角变化，尖锐的前缘效率也会更高）。 3.1.2统计后处理关于如何使用CFD模拟和UQ分析实际压气机的光学测量一个有趣的方法在近几年的作品[被提出兰格和同事[3，7-10]。兰格等人[9]在使用光学数据的多级高压压气机的数值模拟中考虑了制造变异[10]。定义由坐标测量机（CMM）测量的叶片统计分布的最常用方法之一是应用主成分分析（PCA），该主成分分析使用正交变换以将可能的相关变量的一些测量结果转换为一组不相关的变量。 近年来，由于光学传感器成本的降低和该过程所需的测量时间缩短，如图3.3所示的光学技术在分析喷气发动机部件方面越来越普遍。即使是复杂的几何图形，如图3.3所示，也可以重建，费拉拉大学的Pinelli集团教授。 然而，将这些数据用于UQ是具有挑战性的，因为光学测量会产生一个随机点云，主成分分析不能直接应用于非结构化网格。兰格等人。写了几篇关于如何使用扫描几何体进行不确定度量化研究的文章。在[3]Langeetal。使用450个叶片的光学数据来获得叶片的几何重构和制造误差。假设在制造的压气机中只有很小的变化，作者将这个问题归结为在恒定跨度下定义基线翼型测量数据的差异。关于如何从扫描几何图形重建翼型参数的细节已经在之前由Lange等人发表。在[10]。在此过程中，指定哪些参数将用于定义误差非常重要。在文献[3]中，作者使用14个几何参数来表征每个叶片的测量数据与基线之间的偏差。通过内插这些参数的统计特性，Langeetal。获得了140个概率密度函数作为输入，他们研究了200个“虚拟压气机”。已经定义了变形过程以将叶片从其设计轮廓移动到测量轮廓。CFD结果经后处理后，使用统计学方法评估相关系数和重要系数，以确定结果对几何参数的敏感性。 作为设计指示，Lange[3]指出了前级的重要性-特别是对于高度节流的运行条件。从Goodhand的工作中可以看出，HPC压气机对服役损耗造成的侵蚀影响可以忽略不计[1]，因此可以得出结论，HPC主要/仅受制造误差和前期影响。 3D制造误差的广泛研究已经由相同作者[其他作品进行7，8]，使用不同数量的测量叶片的测得的制造误差的敏感性分析。在[7]作者研究了150个叶片来定义随机变化，并使用了一个带有拉丁超立方抽样的蒙特卡洛方法来确定高性能计算阶段性能值的分散性以及它们对剖面参数几何变异性的敏感性。这种研究的一个有趣的方面是分析厚度和角度的相对不确定性对压气机性能的影响。这是设计师和制造商的一个关键方面。在所有的参数中，兰格指出了加厚变化对压气机性能的重要性。 例如图3.4显示了用于执行一些随机分析的格点采样的结果。该方法可以看作是采用格子采样方法的蒙特卡洛方法。该过程几乎与前面的步骤相同。格点采样是所有数据的集合，它表示将几何误差与感兴趣的量相关联的矩阵，例如效率。考虑到从制造模型获得的输入PDF，数据进行后处理。通过这种方式，这个模型作为一个粗糙的蒙特卡洛模型，可以将动态输出再现为动量和PDF分布。 该方法在图3.2所示的情况下显示从晶格取样获得的平均值和基线几何结构之间的相对降低0.8％，以及在设计条件下的2.2％标准差。灵敏度分析也可以使用同样的方法来定义其他数据的先前数据的灵敏度，例如入射角度。 3.1.3多项式混沌方法评估压气机不确定性影响的最新方法是非嵌入式多项式混沌方法。Ghisu等人已经对使用多项式混沌的压缩系统性能进行了较早的研究[11]。作者使用非嵌入式多项式混沌（NIPC）公式来评估三轴式现代燃气涡轮发动机的通用模块化核心压缩系统的性能变异性，该系统受到不确定的运行条件和定义的概率密度函数的影响。作者使用平均线公式来预测压气机图，而不是CFD求解器。Askey方案的标准正交多项式被一组相对于特定概率密度函数计算的正交多项式代替，改进了方法的收敛性。 最近，非嵌入多项式混沌方法已被应用于Seshadri等人对轴流压气机性能的研究[4]。作者使用随机配置和稀疏伪谱近似来解释操作不确定性，例如节流偏移，入口条件变化和几何变化。作者表明，低阶逼近足以分析这些影响，因为不确定性本质上是线性的。 NIPC的一个非常有趣的应用已经在相同作者Seshadri等人的最新作品中显示出来[12]，在众所周知的测试案例转子37上。转子37是不确定度量化应用的特例。特别是数十年来一直研究这种情况来解释CFD和实验结果之间的差异，这种差异的主要原因归因于实验中的不确定性，而不是数值精度。尤其是，台架中的轮毂泄漏流量未知，并改变了结果。这项工作特别值得注意，因为它使用UQ来理解和量化实验装置中不确定性引起的变化，并且因为它解决了涡轮机械世界中研究最多的测试案例之一，该案例已用于校准和测试CFD求解器，湍流闭合等。作者使用稀疏伪谱近似方法，称为SPAM。正如预期Seshadri等。能够证明CFD与实验不一致的主要原因是由于小的泄漏流量。所提出的方法的优点之一是能够在灵敏度降低的方向上使用更多的点，这些点具有更高的灵敏度和更少的方向。同时Seshadri等人[5]证明了如何使用UQ来减少操作顶部间隙的变化。正如弗里曼[13]指出的（跨度）1％（跨度）顶端间隙的变化，效率下降了1.4％，这证明了应用不确定度量化，尽管计算成本较高（图3.5）。 有关如何应用非嵌入式多项式混沌展开的更多细节将在下一章详细介绍所有方法。然而，使用相同的二维翼型可以证明，在二阶近似下，需要6个CFD模拟来获得随机输出，例如平均值和标准差。 NIPC的优点是CFD模拟的数量减少以预测随机输出时刻。然而，如图3.6所示，结果可能会受到非完全收敛的CFD模拟的严重影响。出于这个原因，过采样技术可能有助于减少这种影响，如Montomoli等人所示[14]。 3.1.4伴随方法最近Giebmanns等人[2]使用伴随解算器来分析压气机或风扇叶片前缘变化的影响。伴随流动求解器可以计算目标函数的灵敏度（例如质量流量或等效效率），以及几何参数中的大量变化。这些求解器在优化中很受欢迎，但它不是一种常用的方法 在不确定度量化中。首先，作者分析了流动参数对前缘几何的几何变化的敏感性。之后研究伴随解算器的应用范围，最后与非线性仿真的结果进行比较。作者指出考虑伴随解算器的应用范围的重要性，它主要在解的变化是线性的（或几乎是线性的）时是有效的。 正如预期的那样，结果主要适用于压气机几何形状的小变化。然而重要的是要记住，在许多情况下，几何变化很小，正如[1]指出的，响应可能是线性的。出于这个原因，伴随方法可能是一个有趣的领域，其中几乎线性的行为可望评估几何不确定性的影响。 总之，以下方法已被用于使用不确定度量化来分析压气机的性能。这种表达式的输出是目标函数的灵敏度（图3.7）。 3.2涡轮由于几何误差对这些部件的寿命的影响，不确定度量化在涡轮部件中变得越来越流行。 与压气机一样，可以采用不同的方法，从蒙特卡洛方法与简单的一维模型[15]到蒙特卡洛与代理模型[16]以及最近多项式混沌展开在复杂三维几何中的应用（一个完整的喷嘴），具有多物理效应[14]。 3.2.1蒙特卡洛方法所进行的分析表明了应用于涡轮部件的不确定度量化应用最重要和最近的研究由邦克[15]。笔者使用强力蒙特卡洛方法结合简化模型估算叶片冷却效果。该研究总结了制造方法对典型高度冷却涡轮翼型产生的热边界条件的影响。作者突出了可能通过制造变化影响叶片传热能力的主要几何因素。每种主要几何因素都根据其对最大金属温度的可能影响进行评估，作者已经表明，在所有可能变化的参数中，考虑到变化范围，冷却孔尺寸是最重要的参数之一。在上一章中，Bunker发布的一些数据已被用于估算热气部件的寿命。3.8）。 蛮力蒙特卡洛在工业中通常用于预测二次空气流动系统的性能和失败的可能性。Montomoli等人[17]，用蛮力蒙特卡洛来设计和分析真实燃气轮机（LM2500+G4）的二次空气流动系统。 Montomoli等人[18]，分析了二次风的所有可能的变化流动系统识别关键条件。之后，这种随机分析的数据被用于真实燃气轮机的热力学研究，考虑了部件变形，热负荷，转子/定子与非定常CFD模拟的相互作用。这是第一次在公开文献中提出这样的分析，这种研究的流程图如图3.9所示Montomoli等人证明热气体的吸入是由不稳定的相互作用驱动的，并将影响量化为最大温度和热量传递。然而，蛮力蒙特卡洛超越了现在的3DCFD模拟能力，需要使用代理模型来代替。 3.2.2具有代理模型的蒙特卡洛方法蒙特卡洛等人在蒙特莫利等人的研究中表明了蒙特卡洛模型在燃气轮机中的应用之一[18]。作者研究了二次气流系统间隙中的不确定性对间隔器内热气体吸入的影响。用于净化车轮空腔的质量流体必须满足两个相反的要求：确保热气体吸入余量和保持高水平的性能。目标是最大限度地减少吹扫流量。其基本思想是，作为设计实践，用于清洗腔体的质量流体必须容纳热气体吸入，但是必须配合吸入的热气体的限制，如图3.10所示。作者认为maxi-母体温度Tcrit=0.92*T0hot作为缓冲腔温度的限制。图3.10所示的几何结构之间的定子高度的间隙为1％轮辋密封和蜂窝间隙2以及定子铰链和环形间隙1之间的0.4％。 蒙特卡洛方法（MCM）是所有随机研究的参考，如果实现（样本）的数量趋于无穷，则它收敛于理论解。此外，MCM是一种非嵌入式方法，CFD求解器被用作黑盒子。为了执行MCM模拟，需要用非常多的模拟来对输入参数的概率空间进行采样，以覆盖整个设计空间并获得输出的精确表示。此外蒙特卡洛方法直接给出随机输出，并用作所有随机研究的参考。此外，随机预测不受任何模型的影响，除了实现次数。 通过引入代理模型（在这种情况下为响应面），可以加速模型，从而避免使用CFD求解器来评估总体，从而加快了MCM计算的速度。如图3.11所示，不使用CFD求解器来获取所有样本，而使用响应面。这需要两个步骤：用CFD求解器构建响应面，覆盖所有设计空间，并通过这个代理模型运行MCM，见图3.11。该方法比标准MCM快得多，但它的计算效率通常低于下一段所示的多项式混沌展开。有利的是，如果与PCM相比，MCM可以用来对代理模型进行采样以直接获得概率输出，而不仅仅是分布的矩。 Montomoli等人[19]，作者之一是这项工作，决定应用这种技术来建模一个更现实的配置，特别是低压涡轮，考虑几何变形，发动机瞬态，结合物传热和时间不确定性。图3.12显示了更详细研究的案例[19]。 这种方法能够直接给出响应量的分布。例如图3.13显示了瞬态过程中金属温度的标准差。作者指出，随机场平均温度的平滑分布并不意味着较小的热梯度，这对于任何概率结果都是有效的，与标准确定性模拟不同。 这种方法的主要局限性之一是依赖于响应面的准确性，而代理模型的定义正在影响预测。相反，这种方法有几个优点：随机输出是直接计算的，它可以使用所有为优化开发的代理模型法（Krigin，响应面，人工神经网络等），速度很快（甚至可以使用1010个样本标准桌面可以处理这些数据），它可以直接模拟罕见事件的影响。 3.2.3灵敏度研究和随机后处理关于燃气轮机的灵敏度研究和传热有两项主要工作：气膜冷却[20]和转子叶尖误差[21]。在Bunker[15]的工作之后，Montomoli等人[20]决定分析几何误差对气膜冷却性能的影响。作者使用了著名的Karlsruhe大学的测试案例[22]，表明了燃气轮机冷却通道内的真实情况。整个过程与在轴流压气机中观察到的过程类似：作者从基线几何学开始，考虑几何变化，用CFD对设计空间进行采样，并用随机算法处理CFD结果（图3.14）。 如图Bunker[15，23]之间的高压涡轮喷嘴前缘的所有部分中，气膜冷却管道是其中制造的不确定性有更大的影响。特别是Montomoli等[20]专注于未测量的气膜冷却通道的根部，并且它们应用了薄膜半径的微小变化。在它们的几何形状中，它们假设根部的最大半径为冷却通道直径的5％。现代燃气轮机中的冷却通道直径约为1毫米，则所分析的圆角的最大半径约为50微米在现实生活中，这个数字是未知的，几乎不可能测量根圆角。然而，这项工作表明，这种微观误差会对气膜冷却性能产生很大的影响。 作者研究的情况仍然是理想的，因为气膜冷却通道的不确定性要高得多，如图3.15所示，表明了气膜冷却孔的轮廓[13]。实线表示通过最新的激光冲击钻孔技术获得的圆柱形孔的真实几何形状，虚线是理想形状。 Montomoli等人研究的气膜冷却管道[20]是一个经典的30°扇形孔，风扇出口角度为14°，出口面积比为3[24]。运行条件在很宽范围内变化，冷却通道和主流道间压力比为1.01&lt;Ptc/Pm&lt;2，冷却马赫数0&lt;Mac&lt;0.6，热气马赫数Mam=0.55，代表真实气体涡轮变化。 在这项工作中，作者采用设计实验方法对可能的空间进行了采样，其中设计空间由以下参数确定：r/D=0.0，1.25，2.50，5％，Machc=0.15，0.30，0.45，0.60，Ptc/Pm=1.4，1.6，1.8，2.0。图3.16以图形方式显示域，每个黑点代表aCFD模拟。 四个半径对排放系数的影响如图3.17所示。x轴是压力比，y轴是排放系数。虚线表示在所研究的半径范围内可以获得的排放系数的最大变化。该虚线区域的下界，实线表示r/D=0％，上限，r/D=5％的虚线。在较低的压力比Ptc/Pm=1.4和高内马赫数下，排放系数对r/D的依赖性降低。在较高的压力比下，变化率几乎不变，约为平均值的10％。 在此阶段，假设进行随机后处理分析，可以处理CFD数据。还考虑了与圆角半径的制造过程相关的概率分布。实验装置中r/D的实际分布是未知的。已经假设高和低半径范围内的高斯函数具有代表性。Cd函数是从先前描述的CFD模拟和使用样条近似以便找到中间点的值。在图3.18中显示了Ptc/Pm=1.4和内部马赫数的流量系数红线作为圆角半径的函数数字，Mac=0.3。黑线对应于r/D=0.5％和σ=1％。结合镉和假设制造分布，我们获得了Cd的概率分布及其平均值。考虑高斯函数的Cd的平均值（参考文献[18]中的图12）是Cd=0.73，图3.19。 如果我们设想按照r/D=0.5％的确定性方法（大多数我们分布的可能值），排放系数为0.71，差异为3％。获得Cd=0.73的等价确定性r/D是r/D=1％，是最可能值的两倍。这些差异对我们现在正在进行的模拟产生巨大影响。 同样的分析可以用平均值和方差值重复修改Cd的概率分布。从确定性模拟和概率方法获得的Cd之间的差异显示在图3.20中r/D和σ的几个平均值。作为例子，我们可以考虑一个案例r/D=4％，平均值和σ=2％。如果模拟中包含r/D的值，则由于制造误差导致Cd的不确定性将为2.5％。 考虑到这种不确定性的等效r/D必须为2.7％。如果在模拟中根本不包括圆角半径，则整体误差约为9％。我们可以观察到，从这个分析中，鲁棒条件由r/D=2％表示，因为两种方法之间的差异可以忽略不计。 Montomoli等人展示了随机后处理灵敏度研究的第二个例子[21]。用于初步分析转子叶尖的测试案例是在QinetiQ[17]研究的跨音速MT1高压涡轮级。转子转速为9,500RPM，设计点的压力比约为2.8。舞台上有32个NGV和60个转子叶片。 靠近叶片尖端的最重要的特征是顶部泄漏涡流并导致舞台的全球损失。流量由压力梯度驱动，压力梯度从压力到吸力侧，在出口产生涡流。流动漩涡在图3.21中可见。尖端区域有和没有圆角的比较表明圆角增加了尖端上的质量流量。 如图3.22所示，通过分析5个半径r/G0=0.0，0.03，0.075，0.15，0.3和三个顶部间隙G/G0=1，1.5，2，已经研究了几何变异性，其中每个黑点对应于CFD模拟。图3.22显示了改进转子的尖端，几何形状包括级间腔体。不稳定的模拟已经显示了尖端几何不确定性对尖端区域的质量流量和热传递的强烈依赖性。 3.2.4概率配置方法概率配置方法在实际燃气轮机部件中应用的第一个例子之一是Montomoli等人的工作[25]作者研究了一个真实的喷嘴。本研究中使用的几何形状是F型MHI燃气轮机的第一个HP喷嘴，如图3.23所示。喷嘴由薄膜和冲击冷却组合冷却。前缘采用带圆柱孔的标准淋浴头冷却系统。五个气膜冷却排在压力侧，两个在吸力侧具有恒定的圆柱直径。气膜冷却布局如图3.23所示。这个例子强调了即使在复杂的配置中可能使用概率配置方法。 冷却通过三个腔分配在喷嘴中： 前室充满前缘，吸气侧三排，压力侧一排。 中间充气室在压力侧供给双排。 后充气室控制尾缘槽的冷却液和压力侧的双排冷却液。 该区域由三个区域组成：“燃烧室”，“喷嘴流体”和“喷嘴固体”。燃烧器区域被用于通过对区域进行俯仰计时来在不同位置施加相同的边界条件。如图3.23中的红线所示，在固体和流体区域之间施加了一层隔热涂层。在热芯的燃烧器入口处在图3.23中用一个红色椭圆表示，它可以改变它的俯仰位置。两个冲击盒位于前部和中部腔内。冲击和气膜冷却的冷却孔尺寸相同。图3.24显示了应用于实际部件的多项式混沌分析应用的路线图。这种情况下的制造差异是测量数据和工程参数的混合。 用于固体区域的导热率为22.7W/mK，模拟中包括热障涂层，测得的平均厚度为0.3mm，热导率为1.7W/mK。假设端壁和喷嘴腔的冷却液温度恒定，T0c/Tref=0.39。以叶片的压力比为1.385作为参考出口质量平均静压。停滞温度和压力的分布如图3.25所示。在x轴上存在无量纲停滞压力。在y轴上有跨度高度。轮毂在H=0％，外壳在H=100％。假设均匀的切向分布，滞后压力被施加。 为了与单维网络分析所预测的质量流量相匹配，冷却使用了停滞压力边界条件。图3.26显示了具有实体模型和相应表面网格的喷嘴前缘的细节。在非嵌入式多项式混沌和所有采样方法中，对于定义收敛性非常重要 的模拟，因为随机输出很大程度上依赖于这些变化。对于所有情况，收敛性基于三个标准确定： 归一化残差值（≈10E-8） 主风管相对质量平衡误差（≈10E-3） 金属温度的相对变化（≈10E-5） 共轭传热研究已经考虑了三个变量的随机分布：热障涂层厚度，热芯的俯仰位置和湍流强度。TBC厚度的随机分布已经在高砂三菱重工研发中心实验获得，如图3.27所示。TBC厚度的总体分布符合正态分布，该分布已用于对此参数进行建模（表3.1）。 图3.27显示了用于概率配置方法的所有配置点。黑点是该方法所需的模拟，样本用于将过采样方法应用于该方法的白点。在下一章中将介绍不同的随机方法。图3.28显示了比多项式阶次和未知变量所需的最小数量更多的采样。这种过采样方法有助于减少数值近似的部分非收敛解对不确定度输出的总体预测的影响。 通过使用覆盖所有TBC厚度的所有可能变化的27个模拟，热芯的俯仰位置和湍流强度，可以定义金属温度的“不确定区域”。这个不确定区域由图3.29中的灰色区域表示。灰色区域表示在具有指定范围的不确定性的喷嘴中可以获得的金属温度的整个范围。限制该区域的上部黑线是可以获得的金属温度的最高水平，最低温度越低。 Montomoli等人使用了两种非嵌入式方法：概率配置方法和随机配置方法，但这两种方法得到的结果完全相同。图3.30中的红线显示了PCM和SCM的平均值。按照图3.30所用的比例尺，这两种解决方案是相辅相成的。在图3.29图的右侧示意性地示出了在吸力侧的尾缘具有特定温度分布的可能性。在每个位置都可以获得类似的图形。这两种方法预测的结果非常相似。观察到的整体趋势与实验数据相似。 作者指出，在所有参数中，温度分布的不确定性是最重要的。然而，用于模拟的湍流闭合（RANS模型）低估了不确定性的影响。前缘区域似乎是受涡流水平不确定性影响最大的部分。 可以比较不确定度对金属温度的相对贡献，如图3.29所示。这可以分解前缘，压力和吸力侧的贡献，如图3.31所示。很显然，最重要的影响与热核心俯仰位置有关。为了预测金属温度，热芯的位置比其他不确定性更重要一个数量级。 参考文献Goodhand,MN,Miller,RJ和Lung,HW(2012).二维压气机入射范围对运行中几何变化的敏感性.ASME涡轮博览会会刊,8,159-170. Giebmanns,A.,Backhaus,J.,＆Frey,C.(2013).压气机前沿灵敏度和伴随流量求解器的分析.ASME涡轮博览会会议记录,6A. Lange,A.,Voigt,M.,＆Vogeler,K.(2012).三维扫描压气机叶片的主成分分析,用于概率CFD模拟.在第53届AIAA/ASME/ASCE/AHS/ASC结构,2012年结构动力学和材料会议上. Seshadri,P.,Parks,G.,＆Jarrett,J.(2013).面向具有不确定度量化的轴流式压气机的稳健设计.在技术文件收集-AIAA/ASME/ASCE/AHS/ASC结构,结构动力学和材料会议. Seshadri,P.,Shahpar,S.,＆Parks,GT(2014).坚固的压气机叶片用于减少操作顶端间隙的变化.在ASME涡轮博览会2014年会议记录:涡轮技术会议和博览会GT2014(第1卷).2014年6月16日至20日. Goodhand,MN,＆Miller,RJ(2011年6月22日).真实几何形状对压气机三维分离的影响.JournalofTurbomachinery,134(2),021007.doi:10.1115/1.4002990. Lange,A.,Voigt,M.,＆Vogeler,K.(2010).考虑制造变异性的高压压气机级的概率CFD模拟.ASME涡轮博览会论文集,6,617-628. Lange,A.,Voigt,M.,Vogeler,K.,Schrapp,H.,Johann,E.,＆Gümmer,V.(2012年1月3日).制造变异性和非对称性对高压压气机阶段性能的影响.JournalofEngineeringforGasTurbinesandPower,134(3),032504.doi:10.1115/1.4004404. Lange,A.,Voigt,M.,Vogeler,K.,Schrapp,H.,Johann,E.,＆Gümmer,V.(2012年9月24日).制造变化对多级高压压气机性能的影响,燃气轮机与发电工程杂志,134(11),112601.doi:10.1115/1.4007167. Lange,A.,Vogeler,K.,＆Gümmer,V.(2009).在数值模拟中引入基于参数的压缩叶片模型来考虑测量几何不确定性.ASME涡轮博览会会刊,6,1113-1123. Ghisu,T.,Parks,GT,＆Jarrett,JP(2010).自适应多项式混沌燃气轮机压缩系统性能分析.AIAAJournal,48(6),1156-1170. Seshadri,P.,Shahpar,S.,＆Parks,GT(2014).坚固的压气机叶片用于减少操作顶端间隙的变化.在ASME涡轮博览会2014年会议:涡轮技术会议和博览会GT2014(第38卷).2014年6月16日至20日. 史密斯,WR(2002).激光冲击钻孔中的凝固和飞溅模型. SIAM应用数学杂志,62(6),1899-1923. Montomoli,F.,D’Ammaro,A.和Uchida,S.(2013年3月25日).不确定度量化和共轭传热:随机分析.JournalofTurbomachinery,135(3),031014.doi:10.1115/1.4007516. Bunker,RS(2009).制造公差对燃气轮机冷却的影响.叶轮机械杂志,131(4),1-11. Montomoli,F.,＆Massini,M.(2013).燃气轮机和不确定度量化:PDF尾巴对UQ预测的影响,BlackSwan.ASME涡轮博览会会刊,3C. Montomoli,F.,Massini,M.,Maceli,N.,Cirri,M.,Lombardi,L.,Ciani,A.,etal.(2010年4月2日).新型航改型低压涡轮中叶轮冷却与主流的相互作用.JournalofTurbomachinery,132(3),031013.doi:10.1115/1.3195036. Montomoli,F.,＆Massini,M.(2013).燃气轮机和不确定度量化:PDF尾巴对UQ预测的影响,BlackSwan.在ASMEIGTI2013中. 参考文献57 Montomoli,F.,Amirante,D.,Hills,N.,Shahpar,S.,Massini,M.(2014年10月28日).不确定度量化,罕见事件和任务优化:瞬态过程中金属温度的随机变化[工程的用于燃气涡轮和功率,137(4),042101.DOI:10.1115/1.4028546 Montomoli,F.,Massini,M.,＆Salvadori,S.(2011).几何不确定性和气膜冷却:圆角半径.叶轮机械杂志,134(1). Montomoli,F.,Massini,M.,＆Salvadori,S.(2011年7月).叶轮机械中的几何不确定性:顶部间隙和圆角半径.ComputersandFluids,46(1),362-368.doi:10.1016/j.compfluid.2010.11.031 Gritsch,M.,Schulz,A.,＆Wittig,S.(1998).具有扩展出口的气膜冷却孔的绝热壁效率测量.JournalofTurbomachinery,120(3),549-556. Moeckel,CW,Darmofal,DL和Kingston,TR(2007).通过制造变异性的概率热分析,冷却涡轮叶片的容差设计.ASME涡轮博览会会刊,5,1179-1191. Jovanovic,MB,deLange,HC和vanSteenhoven,AA(2008).孔缺陷对绝热气膜冷却效果的影响.InternationalJournalofHeatandFluidFlow,29(2),377-386. Montomoli,F.,D’Ammaro,A.和Uchida,S.(2012).不确定度量化和结合传热:一种随机分析.ASME涡轮博览会论文集,4,99-108. 4 不确定度量化方法综述摘要：本章概述了用于叶轮机械不确定度量化（UQ）的数学方法。UQ计算框架是defi和提出和检查每个不确定性传播技术的一种方法。提供了一些强调UQ分析动机的例子。 关键词：抽样方法 正交法 多项式混沌展开 谱方法 4.1 确认与验证为了建立计算机模拟的可靠性，美国航空航天学会（AIAA）定义了确认与验证框架，如Oberkampf等人所示[1]。验证被定义为“确定模型实现准确地代表开发者对模型的概念描述和模型解决方案的过程”。因此，验证涉及源代码和数值算法中的数学错误，以及由于输入数据中的不确定性和数字误差的影响而导致的解决方案的准确性。验证被定义为“从模型的预期用途的角度来确定模型是对现实世界的精确表示的程度的过程”。因此，验证处理模型的真实性以再现物理系统。图4.1是汇总了AIAA验证和验证定义的图表。 UQ的目标是定义与计算机模拟相关的误差线并提供获得某种结果的可能性。 4.2误差和不确定性在口语语言中，经常使用不确定性和误差，而不区分它们。然而，AIAA指南[1]在概率框架中定义了两个词，并突出了下面指出的差异。 4.2.1误差-确认和未确认这些误差被定义为“在任何阶段或模拟和模拟活动中的可识别的定义，这不是由于缺乏知识”。误差意味着缺陷，这可以通过检查来确定。此外，误差分类为： 已确认的误差可以被识别和删除。在代码中出现这些类型的误差是可以接受的，只要它们被识别并且它们的量化与代码的规范一起提供（例如舍入误差，离散化误差，有限的收敛）。 无法找到并从代码中删除的未确认误差（例如计算机编程误差，代码使用不当）。只有将结果与设定基准的代码进行比较才能识别它们。 4.2.2不确定性-不确定性和认知性不确定性定义为：“由于缺乏知识而导致的建模过程的任何阶段或活动中的潜在缺陷”。这些不确定性 意味着缺乏物理模型或输入参数的知识，这些反映在不可靠的模拟中。这些不确定性分类为： 与系统或其环境中的物理可变性（例如材料特性，制造公差，边界条件）有关的不确定性或不可约不确定性。正如本书所讨论的那样，它不能被减少，并且可以通过额外的实验来处理它，这些实验提供了更多的数据来模拟变量，或者使用概率方法。 认识上的不确定性或可降低的不确定性，与缺乏知识， 物理模型的边缘。事实上，它可能源自推导物理公式（例如湍流模型，周期性，稳态）的假设和/或简化。通过进行更多的实验并使用这些信息来改进物理模型，可以降低认知不确定性，如图4.2所示。 4.3概率论的初步实验的结果绝不相同。掷硬币有两个不同的结果，头部和尾部。可以通过对硬币几何形状和惯性特性，硬币翻转的流体状态，确切位置，冲击力值等的详细了解来预测结果。然而，迄今为止，还没有在预测硬币翻转的结果方面取得了100％的成功，“对于投掷硬币，以1/2概率进行独立性的经典假设非常稳固”[2]。对于连续变量，例如表格的长度，可以得出相同的结论。不确定性与测量系统的准确性有关，通常用误差条表示。 让我们考虑在概率空间（，B，P）上定义的连续函数X（ω）∈{0，1}，其中Q是结果空间，B是事件，P是概率测度。连续随机变量X（ω）是映射它们的函数从在部件的随机测量结果X的[R，并且对于每个事件甲我∈乙⊆Q在区间乙我⊆-[R，如示于图4.3。 间隔乙我属于集无边可数用来构成波雷尔字段乙*上X（）⊆ř。特别是，不可能事件⊘∈Q关联到空集的实数，而某些事件Q被关联到间隔X（）⊆ř。因此，随机变量X（ω）呈现值X∈[R与定义的概率，其在诱导X（）⊆ř由概率P（ω）即ω∈发生。总之，随机变量是一种变换 4.3.1概率和累积分布函数在概率空间（，B，P）中定义的随机变量X（ω）的分布函数定义为： ˚FX（X）=P（X（ω）≤X） 左边被称为X（ω）的累积分布函数（CDF），它定义了随机实验中概率的分布。它的措施随机变量X（ω）呈现低于或等于的概率值x。该函数在0和1之间总是不为负数且单调非递减。 鉴于连续随机变量X（ω）⊆-[R，并定义了一套乙⊆X（），有可能引入可积函数fx（x），使得： 函数˚FX（X）被调用的概率密度函数（PDF）X（ω），其整数测量概率X（ω）具有值X∈乙。另外，可以定义上述两个函数之间的以下关系： 4.5高斯分布一个真正的随机变量X（ω）具有正常或高斯分布N（μ，σ2）如果PDF是： 和两个˚FX（X）和˚FX（X）中，用不同的值σ2是表示在图4.5。常用于描述随机变量的另一个参数是标准差： 在这项工作中处理的所有随机变量X（ω）属于一类行为良好的变量。他们被说成是在空间大号2，如果 这个空间的主要属性是： 在随机变量的序列XÑ，Ñ∈Ñ收敛于X在大号2，如果： 两个随机变量：X1和X2是独立的，如果P（X∈乙，X∈乙）=P（X∈乙）P（X∈乙）（其中，P（X1∈乙1）是该概率X1是在间隔乙1而P（X2∈乙2）是变量X2在区间B2中的概率。理解这个意义的一种实用方法是 考虑物体的质量和颜色作为例子：这两个参数是相互独立的，可能受到随机变化的影响。因此，给定两个独立的随机变量，它们的联合概率密度函数 4.5.1在不确定性下的模拟带有计算机模拟的工程部件的设计通常遵循一系列明确定义的步骤，如图4.6所示，并在本段中进行了介绍。 首先，定义系统，所需的条件和输出；这意味着几何特征，所涉及的物理过程的识别以及运行条件的量化。在这个阶段，对输入值引入偶然的不确定性，即几何和运行条件的不确定性。 第二步是解决问题的算法的定义。定义了控制方程和现象模型。在这第二步中，不可避免地引入认知不确定性。由于缺乏知识或缺乏简化的必要性，可能会作出假设或者小的几何分量被消除或近似。 第三步也是最后一步涉及将数学算法转换为数字公式。控制方程的连续形式被转换成离散形式。因此，引入了离散误差，解决方案在离散位置进行评估。用于分解控制方程的数值方法是真实方程的近似，因为它是解决方案。此外，还可能存在误差或方程的不正确用法（例如代码无法处理的超音速条件）。 在这种情况下，在模拟中引入不确定性并不会改变步骤，但会在每个阶段增加一些难度。不确定性研究中有三个步骤：defi传播和证明，它们在图4.7中表示。 4.5.2不确定性定义第一步骤包括在受不确定性的输入的识别，并且因此他们的PDF的定义˚FX（X）（例如X±ùX％通过的高斯分布平均值定义X方差σ2）。随机投入可以是 运行条件[3]，几何形状[4]以及定义物理模型的经验参数，例如湍流模型[5]。大多数时候，随机输入的概率分布是未知的，其评估需要不可能实现，例如来自火星的航天飞机[6]，或昂贵的实验，例如燃气涡轮发动机Montomoli和Massini[7]。因此，专家的意见或可用的小实验证据可以提供帮助。 4.5.3不确定性传播这一步需要传播模型（求解器）中上一步中定义的不确定性。目的是计算PDF˚Fÿ（ÿEST间的量的）ÿ。这一步是最复杂和计算要求最高的。处理这一步有多种方法，其中一些将在下一段中介绍。 4.5.4不确定性认证一旦计算了感兴趣数量的统计量（均值，方差），就可以用它们来表征输出量，通常用于可靠性评估或验证环境。当需要评估发生某种结果的可能性（失败的可能性）时，前者非常重要。后者是对实验观察和模拟的PDF进行比较，以便定义数值结果置信度的度量。置信度被称为验证度量标准，可用于检验实验和计算机模拟之间的一致性，以改进数值工具。 在评估UQ分析过程中，第二步的目标是在模型中传播随机输入的PDF，然后生成感兴趣结果的PDF。 考虑包含计算模型的随机输入的向量x=（x1，x2，。。。，xnv）（nv代表变量的数量）。假设y=g（x）是感兴趣的输出以及函数g是一组方程，例如NavierStokes方程。随机输入需要和表示一起随机部分X我（ω我）映射的结果空间Q我实数X我：Q我→[R。 因此，确定性问题的正上方配制Ý=g（X1，X2，。。。，XNV）变成随机问题：Ý=（X1，X2，。。。，XNV：ω1，ω2，。。。，ωNV）。这个假设实际上增加了问题的维度，目标是计算y：fy的PDF，以便评估某个结果的可能性，或y的统计。接下来的段落将解释解决这个问题的不同方法。 4.6采样技术抽样技术对输入值进行选择，并在这些点中进行模拟，随后评估感兴趣结果的统计数据。抽样技术被认为是传播不确定性的最简单方法。这些方法根据人群的选择方式以及使用的样本数量而有所不同。 4.6.1蒙特卡洛方法-MCM蒙特卡洛方法的历史可以追溯到曼哈顿计划的40年代中期，它的名字由尼古拉斯·康斯坦丁大都会作为蒙特卡洛地区着名赌博传统的参考。该方法基于此方案： 定义一组可能的输入 生成随机输入 使用来自2的输入来执行确定性计算 评估感兴趣的结果。 最重要的部分是第二步，并且有随机数发生器考虑给定输入的PDF，在这种情况下输入被称为准随机数。第三步是计算成本最高的，因为解算器需要运行被选作为输入的点的数量，这可能从数千到数百万个样本。该方法收敛于1/N的精确随机解，其中N是样本数[8]。沃尔特斯和休斯[9]]回顾了应用于流体力学基本问题的各种UQ方法。他们的分析表明，MCM可能被认为是基准参考。这种方法很简单，通用，不依赖于输入变量的数量，也不需要改变求解器（即它是一种非嵌入式方法）。图4.8显示了一个随机输入问题的MCM方案的步骤。蓝点是整个集合，生成阶段的红点是为了在模型中执行模拟而拾取的点。 4.6.2改进的抽样策略：LHS和LB已经开发了几种方法来减少MCM的模型运行次数。Sàndor和Andras[10]提出了MCM的变体，它利用了更高效的采样，并且与简单的MCM相比，可以大大缩短计算时间，但同样精确的结果。 11]是标准MCM的一个广泛使用的变体。每个不确定输入参数xi的可能值范围被划分为M个相等概率的段。从每个间隔的一个值是随机选择的，并且中号从所述第一变量获得的值X1结合在与以随机方式中号为第二可变获得的值X2。这些M对以随机方式与下一个变量xnv的M个值组合，等等。该方法如图4.9所示。一套大小为M=5的两个输入随机变量x=（x1，x2），其中x1是高斯函数分布和x2是一个均匀分布。收敛速度较快，因为低概率发生率降低，并且此方法提供了最佳配合如Helton和Davis[12]所示，参数空间的聚散。 基于格的采样类似于LHS，因为可能值的整个范围再次被分为每个变量，但这次使用规则间隔的点来进行离散化。一旦解决方案在这些点进行评估，他们随机移动，另一组被发现并用作求解器的输入。格的特征与输入变量的分布严格相关。图4.10显示了一个2变量问题的基于点阵的采样的例子。 4.7正交方法正交法是基于这样一个事实，即为了计算输出的统计量，需要对积分进行评估：方程（4.3）和（4.4）。有不同的常规数值积分技术：蒙特卡洛积分，梯形法则，牛顿-科特斯公式，高斯积分公式等。在下一节将介绍的特殊情况下，高斯积分呈现指数收敛速率如Xiu[13]所示。在下面的段落中将介绍高斯积分和广义多项式混沌。 在深入研究正交方法之前，让我们理解为什么我们需要使用蒙特卡洛或积分方法进行积分，而当许多方程，呈现出一个确定的积分（例如，）。主要的两个核心-儿子认为有许多方程没有定积分（例如f（x）=ex2方程4.6）。第二个原因是函数可能非常复杂，并且更容易数值求解积分而不是找到其基元。方程f（x）=ex2已经被选中，因为它实际上代表了一个乘法常数，定义在式（1）中的erf函数。（4.6）。因此，一阶矩μ可简化为积分的求值。 4.7.1代理模型：响应面模型假设函数的存在性如下： 的新定义˚F〜（X＆OverBar；）其可以用低得多的COM的putational成本是建立相比˚F并且使得 其中是一个适当的规范。 响应面模型（RSM）使用二次或三次多项式来重新发送REP-˚F〜。在文献中可获得的大量代理模型的每个不同对它们基于的定义和上的假设˚F〜（X＆OverBar；）。每个代理模型具有一定的系数˚F〜。 RSM的一个最重要的特性是定义了这个近似函数的数学形状的一些固有假设提前。这些将很少与评估的真实响应相对应，这些评估是针对气动和机械问题的一般多节点和非线性的。未知量的数目与（nv+d）成正比！/（nv！d！）优点是RSM的分析形式允许进行数学分析目标函数及其约束的推导。因此，这种近似模型的最小值可以通过牛顿法找到。 4.7.2矩方法瞬时方法基于目标函数f的近似值通过一个关于它的名义值的泰勒级数展开˚F¯=˚F（ξ¯）。如果只有一个不确定参数被认为是目标函数读取的二阶展开 一阶一阶矩，一阶二阶矩，二阶一阶矩（SOFM）和二阶二阶矩（SOSM）方法的名称均取自考虑展开阶的顺序，以及分析的时刻。SOFM和SOSM可以计算如下： 其中p（x）表示噪声因子的概率密度函数（PDF） 4.7.3高斯积分让我们考虑函数f（x），它在域[a，b]中的积分可以表示为N项的有限加权和： 如果f（x）是分析的，即无限平滑，则高斯矩阵的收敛速度比任何代数阶都快。通过具体选择（xi，wi），结果 如果f（x）是域[a，b]（Xiu[13]）中的阶数≤（2n-1）的多项式，则是精确的。 如果函数f（x）呈现奇点，则可以使用数学方法，这将在关于Pade-legendre多项式的章节中解释。 横坐标xi和权重wi的选择基于加权函数ω（x）。让我们重写函数f（x）=ω（x）g（x）其中g（x）近似为一个多项式。积分方程4.10可以写成 横坐标xi是度数为N+1的多项式的根，与加权函数ω（x）正交。的权重，也称为克里斯托费尔号码，w我可以EVAL-uated用于使用列方程，如在奥尔弗等不同权重的函数[14]。如果没有关于与加权函数正交的多项式的信息，可以通过按[15]证明的那样评估特定的权重。 4.8多项式混沌展开术语多项式混沌（PC）展开在1938年由维纳在高斯随机过程分解工作中引入[16]。后来，Ghanem和Spanos[17]将PC的使用与有限元方法结合起来，为各种固体力学问题的不确定性建模。为了模拟非高斯过程，Xiu和Karniadakis[18]提出了广义多项式混沌（gPC），它可以根据随机输入的概率分布处理不同的正交多项式。 正交多项式的更多解释可以在Szego[19]，Sansone[20]和Xiu[13]中找到。的度A多项式Ñ∈Ñ可以写为： Qn（x）=aNxN+aN-1xN-1+。。。+a1x+a0 多项式的系统{QÑ（X），Ñ∈Ñ}被称为正交相对于所述函数w（X），如果它满足正交性条件： 其中d是所述载体的QÑ，w（X）是一个指定的权重函数，ħÑ是非零常数，δNM是克罗内克δ函数，其中δNM=0如果Ñ=中号和δNM=1，如果ñ=中号。一些正交多项式的加权函数与定义的可能函数相同，如Xiu和Karniadakis[18]所示。 权重函数的性质对gPC方案的构建很重要。PDF和权重函数可以至多相差一个恒定（即，1/2π为高斯分布），如表强调4.1。 很明显，方程4.3和4.4使用PDF作为权重函数可以使用gPC模型轻松评估。实际上，在一般的积分可以用数值内插函数评估PÑ（X的顺序）Ñ： 其中Rn（x）表示由于多项式Pn（x）的近似导致的误差项。有可能证明使用它的正交多项式 可以减少积分评估中的误差；因此这种方法更准确。当然，如果函数f（x）不包含权函数，则需要使用Hermite多项式对其进行乘法和除法运算，以使其在积分中： 正交多项式在UQ框架中的重要性依赖于已经在积分中与加权函数成比例的PDF；因此很容易准确评估积分： 其中数字xi是QN（x）的零点，数字w（xi）是权重，这些将在稍后介绍。 4.8.1多项式混沌投影怎样将正交多项式框架应用于随机变量（x：X（ω））的研究？ 使用多项式混沌投影（甚至称为概率配置法PCM）可以展开随机输出： 其中一个我（X）是确定性函数进行评估和Ĵ（ξ）是多尺寸的计算简称AE，下同（如果变量数大于1：NV》1）的正交基polyno-mials正交于输入的PDF不确定。ξ（ω）={ξ1，ξ2，。。。，ξd}是独立随机变量的矢量。变量ξ是一个线性变换- 不确定参数，所以不确定输入是标准随机变量Devroye和Devroye[21]。库马尔等人[22]提出了各种随机变量的变换技术。例如，如果假定随机变量具有平均值μ和标准差的正态PDF，则反式-用于形成是X=μ+σξ其中ξ〜Ñ（0，1），这是高斯distribu-平均值等于零，方差等于1。 方程4.11划分随机变量ÿ（X，ω）为确定性部分：系数一个我（X，吨），待评价，和一个随机部分Ψ我（ξ（ω）），制成表为一个高斯分布[17]。展开被截断为Np项通过变量的数目来确定NV和顺序d多项式的Ĵ（ξ） 这被称为总订单展开。为了计算随机输出方程，需要解决Np个未知数和Np方程的问题。因此，为了评估用于评估均值和方差的确定函数，需要运行Np次模型。实际上，使用defi方程4.3和4.4，随机解的统计量由下式给出： 然而，有可能评估确定性函数ai（x） （我=0，1，。。。，Ñp-1）中通过使用的正交性更简单的方法Ψ我： 为了评估积分，可以使用高斯积分点： 在这个等式中使用的权重可以在Olveretal[14]为人口分布，否则他们可以使用格雷厄姆-施密特正规化计算，如按[15]所示。 这种方法相对容易实施且高效。然而，为了提高鲁棒性[22]，建议采用至少两倍的点位点，因为以这种方式可以更好地估计统计量，因此使用回归方法。当不确定变量的数量大约为5时，多项式方法是优选的，因为需要的模拟数量随着所考虑变量的数量呈指数增长：这称为维度的诅咒，方程（3.13），而MCM收敛于精确解，而不考虑变量的数量。 4.8.2多项式混沌投影回归用于模拟的点取自第（N+1）阶正交多项式的零点。重要的是要强调，张量产品展开多次优于传统的全序展开。对于这种方法，允许各向异性，事实上，多项式阶数适用于单个变量- 包括一维多项式的所有组合。 系数ai（x），如等式4.17是从一个超定的评估 使用最小二乘法解决的系统： ns=Np系统完全解决 ns》Np系统超定，使用最小二乘法求解 如果在解决方案中存在噪声或者如果存在失败的采样（即，未完全采样），那么在2附近使用过采样比（即，ns/Np）允许在采样点处对采样进行插值并且增加该方法的鲁棒性融合解决方案等）[23]。 4.8.3随机过程谱展开的实用方面在一个正交多项式系统中，我们来定义 •{PN（x）}∞ ，一组度数为N的多项式。 N=1 （PÑ，P中号）的内积，即消失时Ñ=中号。 以前的内部产品可以连续的形式定义 或以离散形式 让我们定义ħÑ的大号2的范数PÑ在连续间隔一个≤X≤b如下： 因此，我们采用空间L2具有度量1的约定 正交多项式满足微分方程： 并可以按照以下公式计算： 在本节中，我们提供PC展开中正交多项式的摘要。 4.8.4 Legendre多项式Legendre多项式{Len（x），N=0，1，。。。，}是一个正交基 w[-1，1]相对于所述权重函数W（x）的=1/2对所有-1《X《1。 考虑规范化因素 勒让德多项式满足递推关系： 设定Le0（x）=1且Le1（x）=x可以定义多项式的每一阶。 根据内在的产品 4.8.5 Hermite多项式根据两种不同的权重形式，Hermite多项式有两种定义： 在两种情况下X∈[-∞，∞] 按照Legendre多项式的相同程序，Hermite的多项式可以计算出案例（1） 相关的显式表示对于情况（1） 多项式遵循差分表达式 4.8.6 Laguerre多项式Laguerre多项式{Lan（x），n=0，1，。。。，}是一个正交基 [0，∞]相对于权重函数w（x）=exp（-x）。他们是convention- 从而使出现在罗德里格斯公式中的因子是正态的 en=n！ 出现在罗德里格斯公式中的函数g是g（x）=x。因此，多项式La由。。。定义 并承认以下明确表示： 多项式服从g2（X）P’+g1（X）P’+一个ñPÑ=0与 g2（x）=x，g1（x）=1-x，并且an=n 递归关系： 4.8.7 Pade-Legendre多项式像随机配置一样，Pade-Legendre（PL）方法可以以非嵌入方式使用。PL方法需要与随机配置相似的数据，这是正交点处的实现。然而，PL方法不是将底层函数与有限阶多项式相近，而是使用有理函数，即两个多项式的比率。合理逼近的动机是它可以比单纯的多项式展开更好地表示具有奇点和不连续性的情况。特别是，它消除了吉布斯现象的棘手振荡。 从另一个角度来看，PL可以被认为是一种预处理的方法。这里的分母是预处理器。如果分母是一个常数，那么该方法退化为随机配置。对于一个不连续的基本函数，我们希望选择一个正序的多项式作为分母，使得基础函数和分母的乘积是平滑的，因此可以用多项式精确近似。PL方法提供了一种算法，从数据中构建一个良好的预处理器。本部分分为四个部分。在第一部分中，我们介绍一维近似的PL方法。然后将该方法概括为第二部分中的多维设置。以下部分对PL方法的错误进行了一些了解， 4.8.7.1 1D配方对于任何ķ∈Ñ∪{0}，回想我们的符号Pķ是集合中的所有（一维）聚nomials其度不大于k的。让你成为一个被表达的函数 在支持[-1，1]上。给定整数中号和大号，一对多项式P∈P中号 和Q∈P大号是（N，M，L）的溶液的Padre’-勒让德问题ù如果在那里使用离散标量产品而不是连续的对应产品。然后有理函数R（u）=P/Q被定义为u的近似值。如果解决方案存在，它是独一无二的。可以证明有理函数R（u）是u的插值，即在所有正交点xj。 有理逼近R（u）通过首先定义函数来构造P和Q作为勒让德多项式基的线性组合， =B达到分别命令M和L； 下面，我们给出一个计算P和Q的勒让德展开式中系数的过程。假设从现在开始N=M+L，这样所得到的方程组将不会受到过度约束或约束不足。 为了简单起见，我们选择重复使用Legendre基础来实现此目的。首先，我们计算分母Q。考虑φ高于M的φ 将它们插入Eq。（4.19），我们得到了上面的第一个等式是方程式的直接结果。（3.42）和离散标量积的线性。第二平等是从条件P∈PÑ；因为Ñ》中号，ΦÑ正交于所有与至多度的多项式中号。 最后一个线性系统可以定义如下： 4.8.7.2 ND配方在本节中，介绍了最小二乘Pade近似。考虑各向同性情况，即我们考虑张量网格上每个方向的数据点数量相同，但这不是对当前公式的限制。设d为不确定参数的个数，N+1为数据个数 指向每个方向。因此，我们有总的（Ñ+1）d个数据点（的实现）。 表示总度小于或小于的所有d维多项式的集合 等于小号∈Ñ∪{0}如Pd。的d维勒让德多项式，{ψķ}∞=0 被定义为一维多项式的乘积。请注意，有 度小于或等于s的多项式。 设Φ（a，b）是所有d维勒让德多项式的集合，其总度大于a但不超过b。让我们将v（a，b）定义为一个与Φ（a，b）大小相同且其元素的向量 其中φ我是第i个部件Φ（A，B）（顺序并不重要）。我们现在准备好陈述多维帕德勒-勒让尔问题。 给定整数M，L，K和Ñ使得中号+ķ≤Ñ，一对polynomi-的 和Q∈Pd被认为是所述的溶液（N，M，L，K）d维 最小二乘PL的逼近问题ü如果P 被minimed和∀X∈[-1，1]d，Q（X）》0。 值得注意的是，我们可以不再需要P-曲，φÑ=0对于所有多项式φ高达（总）度Ñ如在一维情况下，由于存在 会比未知系数更多的约束（方程）。因此，该方法的基础是找到一种解决方案，从某种意义上说，它是最优化的解决方案v||。这对近似不连续点近似的准确性有显着的影响。 通过上述问题定义，我们现在准备构造算法来求解P和Q的系数。分子P和分母Q可以写成在类似于一维情况的构造之后，我们获得用于求解系数qj的线性系统。 4.9谱方法谱方法与先前引入的其他两个类别相比是不同的。与采样和正交方法相反，不需要改变求解器，但是使用随机/智能选择点允许计算随机输出的统计量，谱方法需要改变求解器，因此它们是嵌入式的。他们更难实现，但继承了与GaLerkin方法相关的属性，并且基础函数的智能选择提供了指数收敛[24]。 4.9.1随机伽辽金方法随机伽辽金方法使用未知量的展开作为一系列正交多项式，就像在方程4.12。考虑一般的随机微分方程： 与前一段中解释的定义相同，y（x，ω）是解，L是随机微分算子，由矢量定义。S（x，ω）是 一个依赖于空间和时间的源项，它可以取决于随机事件。随机事件可以通过在边界条件，初始条件等中存在一个或多个不确定性来引入。随机解可以通过多项式混沌表示Eq来近似。4.12。将后者代入方程4.20结果于： 并施加在每个基础多项式a的Galerkin投影Ψķ： 其中（。，。）表示的内积。如在其它情况下，存在一组Ñp方程，可以如在多项式混沌投影的情况进行了说明被精确地解决。 如果使用商业软件来执行模拟，更改代码大部分时间是非常困难或不可能的。使用嵌入式方法通常是需要额外的计算和编码时间以及由于频谱收敛而获得的提高的准确度之间的折衷。 4.10结论在设计叶轮机械部件时使用UQ方法可以获得更可靠的解决方案，并考虑到内在的真实生活变化。主要有三类UQ技术： 基于采样的方法，这种方法计算起来很昂贵，但易于实施并且不会嵌入（例如蒙特卡洛方法）。改进的采样策略的开发允许减少计算成本的1-2个数量级（例如基于格的）。 正交技术，主要基于多项式混沌rep- 对随机产出的反感。使用正交公式和正交多项式可以获得快速和准确的UQ分析。 基于Galerkin投影的入侵技术，这是一个非常准确的技术 方法和快速收敛性，但它可能需要很多工作，因为它需要对所有非常量的变量使用多项式展开。 在验证框架中，为了验证所使用的数学模型（例如湍流模型），需要执行计算机模拟以及高精度实验。虽然使用UQ分析减少了偶然的不确定性，但处理认知不确定性也很重要。因此，这项工作并非纯粹专注于计算，而是需要进行一些实验性工作，以便对随机输入，所用的数学方法以及单纯计算工作无法捕捉到的真实环境效应进行全面的不确定性分析。 参考文献Oberkampf,W.,Sindir,M.,＆Conlisk,A.(1998).计算流体力学模拟验证和验证指南.美国航空航天研究所. Diaconis,P.,Holmes,S.,＆Montgomery,R.(2007).投掷硬币的动力偏见.SIAMReview,49(2),211-235. D’Ammaro,A.和Montomoli,F.(2013).不确定度量化和电影冷却. 计算机和流体,71,320-326. Montomoli,F.,Massini,M.,＆Salvadori,S.(2010).叶轮机械中的几何不确定性:顶部间隙和圆角半径.计算机和流体,46,362-368. Pecnik,R.,Witteveen,JA和Iaccarino,G.(2011).RANS叶轮机械应用中层流-湍流转变预测的不确定度量化.在第49届AIAA航空航天科学会议论文集中. Moser,R.(2009).高超声速再生车辆的校准,验证和不确定度量化.流体动力学会议摘要APS部门,(第1卷). Montomoli,F.,＆Massini,M.(2013).燃气轮机和不确定度量化:PDF尾巴对UQ预测的影响,黑天鹅.在2013年ASME涡轮博览会上:涡轮技术会议和博览会. Marshall,G.(1989).非线性偏微分方程解的蒙特卡洛方法.计算机物理通信,56(1),51-61. Walters,RW,＆Huyse,L.(2002).流体力学应用的不确定性分析.办公室,1,1-45. Sàndor,Z.＆Andras,P.(2004).用于估计多元正态概率的替代抽样方法.计量经济学杂志,120(2),207-234. Helton,J.,Johnson,J.,Sallaberry,C.,＆Storlie,C.(2006).对不确定性和敏感性分析采样方法的调查.可靠性工程和系统安全,91(10),1175-1209. Helton,J.,＆Davis,F.(2003).拉丁超立方体抽样和复杂系统分析中的不确定性传播.可靠性工程与系统安全,81(1),23-69. Xiu,D.(2010).随机计算的数值方法:谱方法.普林斯顿:普林斯顿大学出版社. Olver,F.,Lozier,D.,Boisvert,R.,＆Clark,C.(2010).NIST数学函数手册.剑桥:剑桥大学出版社. 按,WH(2007).数字配方:科学计算的艺术(第3版).剑桥:剑桥大学出版社. Wiener,N.(1938).同质混乱.美国数学杂志,60(4),897-936. Ghanem,R.,＆Spanos,P.(2003).随机有限元:一种谱方法.多佛:多佛出版社. Xiu,D.,＆Karniadakis,GE(2002).随机微分方程的维纳-阿斯基多项式混沌.SIAM科学计算杂志,24,619-644. Szego,G.(1959).正交多项式(第23卷).纽约:美国数学学会. Sansone,G.(1991).正交函数(第9卷).多佛:信使多佛出版社. Devroye,L.,＆Devroye,L.(1986).非均匀随机变量生成(第4卷).纽约:斯普林格. Kumar,Y.,Li,J.,Talarico,C.,＆Wang,J.(2005).基于概率配置方法的统计门时延模型考虑过程变化和多输入切换.IEEEComputerSociety,2,770-775. Hosder,S.,Walters,R.,＆Perez,R.(2006).用于CFD模拟中不确定性传播的非嵌入式多项式混沌方法(第14卷,第10649-10667页). Eldred,MS,Webster,CG,＆G,CP(2008).对维纳-亚基广义多项式混沌非嵌入式方法的评价.在:第十届AIAA非确定性方法会议论文集,编号AIAA-2008-1892(p.189).绍姆堡,伊利诺伊州:AIAA. 5 展望这项工作显示了燃气轮机不确定度量化活动的概况。在这个阶段可以想象，UQ对未来的发展将变得越来越重要。例如，发动机核心越来越小，这将增加制造误差的影响。此外，燃气轮机将引入新的设计方法，如增加制造，不确定性的影响将会增加。增材制造的优点之一是可以开发出更复杂的几何形状，但小特性受到变化的影响，这应该在未来考虑。 关于UQ方法，有两个主要的调查领域： 减少维数诅咒：如何使用具有更多未知参数的不确定度量化 认识/任意不确定性：如何将模型中的不确定性（动荡闭合）与制造中的不确定性相关联（任意不确定性） 维度的诅咒是UQ适用性的严重限制。发动机中未知数的数量非常高，现在我们只能解释其中的很少一部分，因为大多数UQ方法（不包括粗暴Monte Carlo）无法应对这种情况。 同时，认知和任意不确定性之间的相互联系变得越来越重要。更强大的计算机的开发允许模拟比过去更小的空间和时间尺度，其长度尺度与制造误差相当。 在UQ中还有其他领域可能会变得更加重要，比如所谓的黑天鹅事件的模拟。黑天鹅的概率是罕见的事件，可能并带来严重后果（如航空发动机）。未来将有可能设计出能够应对此类事件的发动机，从而最大限度地减少事故对航空的影响。飞行中的黑天鹅是航空事故，有可能表明可以将意外事件的影响降至最低。 角标A 伴随方法，40 轴流压气机，3 B 边界条件，21 C 部件交互，28 压气机，33 压气机翼型粗糙度，7 压气机前缘涂层，6 压气机前缘在使用中降解，5 压气机前缘形状，4 压气机真实几何特征，8 压气机转子顶部，7 冷却装置，28 累计分配，63 D 确定性压力，27 域名缩放，27 E 误差和不确定性，60 误差-承认和未被承认，60 F 风扇2 G 高斯分布，64 高斯积分，72 广义形状校正，27 网格收敛指数，24 H Hermite多项式，78 高压涡轮冷却系统，11 高压涡轮真实几何效应，11 高压涡轮进口温度，9 I 改进采样策略，69 L 拉盖尔多项式，79 勒让德多项式，78 松散耦合，27 低压涡轮，14 低压涡轮航空铝箔厚度，16 低压涡轮冲击粗糙度，14 低压涡轮尾缘厚度，15 M 网格依赖，24 时刻的方法，72 蒙特卡洛方法，41，69 采用代理模型的蒙特卡洛方法，42 P Pade-legendre，80 多项式混沌展开，73 多项式混沌方法，38 多项式混沌投影，74 多项式混沌投影-回归，76 谱展开的实际方面，77 概率配置方法，50 概率论，62 Q 正交方法，71 R 真实几何的复制，23 响应面模型，71 S 抽样技术，68 敏感性研究，34 敏感性研究和随机后处理，45 在不确定性下模拟，66 谱方法，83 统计后处理，35 随机Galerkin，83 T 时间滞后，27 暂态阶段，1 涡轮40 U 不确定性-任意性和认知性，61 不确定性认证，68 不确定性传播，68","link":"/2023/03/07/002_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/%E9%98%85180829%EF%BC%9A%E8%AE%A1%E7%AE%97%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6%E5%92%8C%E9%A3%9E%E6%9C%BA%E5%BC%95%E6%93%8E%E7%9A%84%E4%B8%8D%E7%A1%AE%E5%AE%9A%E5%BA%A6%E9%87%8F%E5%8C%96/"},{"title":"","text":"主要介绍MP(Matching Pursuits)算法和OMP(Orthogonal Matching Pursuit)算法[1]，这两个算法虽然在90年代初就提出来了，但作为经典的算法，国内文献(可能有我没有搜索到)都仅描述了算法步骤和简单的应用，并未对其进行详尽的分析，国外的文献还是分析的很透彻，所以我结合自己的理解，来分析一下写到博客里，算作笔记。 信号的稀疏表示(sparse representation of signals) 给定一个过完备字典矩阵，其中它的每列表示一种原型信号的原子。给定一个信号y，它可以被表示成这些原子的稀疏线性组合。信号 y 可以被表达为 y = Dx ，或者 。 字典矩阵中所谓过完备性，指的是原子的个数远远大于信号y的长度(其长度很显然是n)，即n&lt;&lt;k。 2.MP算法(匹配追踪算法) 2.1 算法描述 作为对信号进行稀疏分解的方法之一，将信号在完备字典库上进行分解。 假定被表示的信号为y，其长度为n。假定H表示Hilbert空间，在这个空间H里，由一组向量构成字典矩阵D，其中每个向量可以称为原子(atom)，其长度与被表示信号 y 的长度n相同，而且这些向量已作为归一化处理，即|，也就是单位向量长度为1。MP算法的基本思想：从字典矩阵D（也称为过完备原子库中），选择一个与信号 y 最匹配的原子(也就是某列)，构建一个稀疏逼近，并求出信号残差，然后继续选择与信号残差最匹配的原子，反复迭代，信号y可以由这些原子来线性和，再加上最后的残差值来表示。很显然，如果残差值在可以忽略的范围内，则信号y就是这些原子的线性组合。如果选择与信号y最匹配的原子？如何构建稀疏逼近并求残差？如何进行迭代？我们来详细介绍使用MP进行信号分解的步骤：[1] 计算信号 y 与字典矩阵中每列(原子)的内积，选择绝对值最大的一个原子，它就是与信号 y 在本次迭代运算中最匹配的。用专业术语来描述：令信号，从字典矩阵中选择一个最为匹配的原子，满足 ，r0 表示一个字典矩阵的列索引。这样，信号 y 就被分解为在最匹配原子的垂直投影分量和残值两部分，即： 。[2]对残值R1f进行步骤[1]同样的分解，那么第K步可以得到： ， 其中 满足 。可见，经过K步分解后，信号 y 被分解为： ，其中。 2.2 继续讨论 (1)为什么要假定在Hilbert空间中？Hilbert空间就是定义了完备的内积空。很显然，MP中的计算使用向量的内积运算，所以在在Hilbert空间中进行信号分解理所当然了。什么是完备的内积空间？篇幅有限就请自己搜索一下吧。 (2)为什么原子要事先被归一化处理了，即上面的描述。内积常用于计算一个矢量在一个方向上的投影长度，这时方向的矢量必须是单位矢量。MP中选择最匹配的原子是，是选择内积最大的一个，也就是信号(或是残值)在原子(单位的)垂直投影长度最长的一个，比如第一次分解过程中，投影长度就是。 ，三个向量，构成一个三角形，且和正交（不能说垂直，但是可以想象二维空间这两个矢量是垂直的）。 (3)MP算法是收敛的，因为 ，和正交，由这两个可以得出 ，得出每一个残值比上一次的小，故而收敛。 2.3 MP算法的缺点 如上所述，如果信号(残值)在已选择的原子进行垂直投影是非正交性的，这会使得每次迭代的结果并不少最优的而是次最优的，收敛需要很多次迭代。举个例子说明一下：在二维空间上，有一个信号 y 被 D=[x1, x2]来表达，MP算法迭代会发现总是在x1和x2上反复迭代，即 ，这个就是信号(残值)在已选择的原子进行垂直投影的非正交性导致的。再用严谨的方式描述[1]可能容易理解:在Hilbert空间H中，，，定义 ，就是它是这些向量的张成中的一个，MP构造一种表达形式：;这里的Pvf表示 f在V上的一个正交投影操作，那么MP算法的第 k 次迭代的结果可以表示如下(前面描述时信号为y，这里变成f了，请注意)： 如果 是最优的k项近似值，当且仅当。由于MP仅能保证，所以一般情况下是次优的。这是什么意思呢？是k个项的线性表示，这个组合的值作为近似值，只有在第k个残差和正交，才是最优的。如果第k个残值与正交，意味这个残值与fk的任意一项都线性无关，那么第k个残值在后面的分解过程中，不可能出现fk中已经出现的项，这才是最优的。而一般情况下，不能满足这个条件，MP一般只能满足第k个残差和xk正交，这也就是前面为什么提到“信号(残值)在已选择的原子进行垂直投影是非正交性的”的原因。如果第k个残差和fk不正交，那么后面的迭代还会出现fk中已经出现的项，很显然fk就不是最优的，这也就是为什么说MP收敛就需要更多次迭代的原因。不是说MP一定得到不到最优解，而且其前面描述的特性导致一般得到不到最优解而是次优解。那么，有没有办法让第k个残差与正交，方法是有的，这就是下面要谈到的OMP算法。 3.OMP算法 3.1 算法描述 OMP算法的改进之处在于：在分解的每一步对所选择的全部原子进行正交化处理，这使得在精度要求相同的情况下，OMP算法的收敛速度更快。 那么在每一步中如何对所选择的全部原子进行正交化处理呢？在正式描述OMP算法前，先看一点基础思想。 先看一个 k 阶模型，表示信号 f 经过 k 步分解后的情况，似乎很眼熟，但要注意它与MP算法不同之处，它的残值与前面每个分量正交，这就是为什么这个算法多了一个正交的原因，MP中仅与最近选出的的那一项正交。 (1) k + 1 阶模型如下： (2) 应用 k + 1阶模型减去k 阶模型，得到如下： (3) 我们知道，字典矩阵D的原子是非正交的，引入一个辅助模型，它是表示对前k个项 的依赖，描述如下： (4) 和前面描述类似，在span(x1, …xk)之一上的正交投影操作，后面的项是残值。这个关系用数学符号描述： 请注意，这里的 a 和 b 的上标表示第 k 步时的取值。 将(4)带入(3)中，有： （5） 如果一下两个式子成立，(5)必然成立。 (6) (7) 令，有 其中 。 ak的值是由求法很简单，通过对(7)左右两边添加作内积消减得到： 后边的第二项因为它们正交，所以为0，所以可以得出ak的第一部分。对于，在（4）左右两边中与作内积，可以得到ak的第二部分。 对于(4)，可以求出，求的步骤请参见参考文件的计算细节部分。为什么这里不提，因为后面会介绍更简单的方法来计算。 3.2 收敛性证明 通过(7) ，由于与正交，将两个残值移到右边后求二范的平方，并将ak的值代入可以得到： 可见每一次残差比上一次残差小，可见是收敛的。 3.3 算法步骤 整个OMP算法的步骤如下： 由于有了上面的来龙去脉，这个算法就相当好理解了。 到这里还不算完，后来OMP的迭代运算用另外一种方法可以计算得知，有位同学的论文[2]描述就非常好，我就直接引用进来： 对比中英文描述，本质都是一样，只是有细微的差别。这里顺便贴出网一哥们写的OMP算法的代码，源出处不得而知，共享给大家。 再贴另外一个洋牛paper[3]中关于OMP的描述，之所以引入，是因为它描述的非常严谨，但是也有点苦涩难懂，不过有了上面的基础，就容易多了。 它的描述中的Sweep步骤就是寻找与当前残差最大的内积时列在字典矩阵D中的索引，它的这个步骤描述说明为什么要选择内积最大的以及如何选择。见下图，说的非常清晰。 它的算法步骤Update Provisional Solution中求很简单，就是在 b = Ax 已知 A和b求x， 在x的最小二范就是A的伪逆与b相乘，即： 看上去头疼，其实用matlab非常简单，看看上面的matlab的代码就明白了。 我们可以看得出来，算法流程清晰明了，还是很好理解的。这正是OMP算法的魅力，作为工具使用简单，背后却隐藏着很有趣的思想。 写这篇博客的目的，是因为搜索了一下，MP和OMP没有人很详细的介绍。文献[1]讲的很清楚的，大家有兴趣可以找来看看。不要被老板发现我居然在搜中文文献还写中文博客。 参考文献： [1] Orthogonal Matching Pursuit:Recursive Function Approximat ion with Applications to Wavelet Decomposition [2]http://wenku.baidu.com/view/22f3171614791711cc7917e4.html [3] From Sparse Solutions of Systems of Equations to Sparse Modeling of Signals and Images","link":"/2023/03/07/005_%E6%95%B0%E5%AD%A6/MP%E7%AE%97%E6%B3%95%E5%92%8COMP%E7%AE%97%E6%B3%95%E5%8F%8A%E5%85%B6%E6%80%9D%E6%83%B3%20-%20CSDN%E5%8D%9A%E5%AE%A2/"},{"title":"","text":"主成分分析（Principal components analysis） -最大方差解释 问题 真实的训练数据总是存在各种各样的问题： 1、 比如拿到一个汽车的样本，里面既有以“千米/每小时”度量的最大速度特征，也有“英里/小时”的最大速度特征，显然这两个特征有一个多余。 2、 拿到一个数学系的本科生期末考试成绩单，里面有三列，一列是对数学的兴趣程度，一列是复习时间，还有一列是考试成绩。我们知道要学好数学，需要有浓厚的兴趣，所以第二项与第一项强相关，第三项和第二项也是强相关。那是不是可以合并第一项和第二项呢？ 3、 拿到一个样本，特征非常多，而样例特别少，这样用回归去直接拟合非常困难，容易过度拟合。比如北京的房价：假设房子的特征是（大小、位置、朝向、是否学区房、建造年代、是否二手、层数、所在层数），搞了这么多特征，结果只有不到十个房子的样例。要拟合房子特征-&gt;房价的这么多特征，就会造成过度拟合。 4、 这个与第二个有点类似，假设在IR中我们建立的文档-词项矩阵中，有两个词项为“learn”和“study”，在传统的向量空间模型中，认为两者独立。然而从语义的角度来讲，两者是相似的，而且两者出现频率也类似，是不是可以合成为一个特征呢？ 5、 在信号传输过程中，由于信道不是理想的，信道另一端收到的信号会有噪音扰动，那么怎么滤去这些噪音呢？ 回顾我们之前介绍的《模型选择和规则化》，里面谈到的特征选择的问题。但在那篇中要剔除的特征主要是和类标签无关的特征。比如“学生的名字”就和他的“成绩”无关，使用的是互信息的方法。 而这里的特征很多是和类标签有关的，但里面存在噪声或者冗余。在这种情况下，需要一种特征降维的方法来减少特征数，减少噪音和冗余，减少过度拟合的可能性。 下面探讨一种称作主成分分析（PCA）的方法来解决部分上述问题。PCA的思想是将n维特征映射到k维上（k PCA计算过程 首先介绍PCA的计算过程， 假设我们得到的2维数据如下： 行代表了样例，列代表特征，这里有10个样例，每个样例两个特征。可以这样认为，有10篇文档，x是10篇文档中“learn”出现的TF-IDF，y是10篇文档中“study”出现的TF-IDF。也可以认为有10辆汽车，x是千米/小时的速度，y是英里/小时的速度，等等。 第一步分别求x和y的平均值，然后对于所有的样例，都减去对应的均值。这里x的均值是1.81，y的均值是1.91，那么一个样例减去均值后即为（0.69,0.49），得到 第二步，求特征协方差矩阵，如果数据是3维，那么协方差矩阵是 这里只有x和y，求解得 对角线上分别是x和y的方差，非对角线上是协方差。协方差大于0表示x和y若有一个增，另一个也增；小于0表示一个增，一个减；协方差为0时，两者独立。协方差绝对值越大，两者对彼此的影响越大，反之越小。 第三步，求协方差的特征值和特征向量，得到 上面是两个特征值，下面是对应的特征向量，特征值0.0490833989对应特征向量为 ，这里的特征向量都归一化为单位向量。 第四步，将特征值按照从大到小的顺序排序，选择其中最大的k个，然后将其对应的k个特征向量分别作为列向量组成特征向量矩阵。 这里特征值只有两个，我们选择其中最大的那个，这里是1.28402771，对应的特征向量是 。 第五步，将样本点投影到选取的特征向量上。假设样例数为m，特征数为n，减去均值后的样本矩阵为DataAdjust(mn)，协方差矩阵是nn，选取的k个特征向量组成的矩阵为EigenVectors(n*k)。那么投影后的数据FinalData为 这里是 FinalData(101) = DataAdjust(102矩阵)×特征向量 得到结果是 这样，就将原始样例的n维特征变成了k维，这k维就是原始特征在k维上的投影。 上面的数据可以认为是learn和study特征融合为一个新的特征叫做LS特征，该特征基本上代表了这两个特征。 上述过程有个图描述： 正号表示预处理后的样本点，斜着的两条线就分别是正交的特征向量（由于协方差矩阵是对称的，因此其特征向量正交），最后一步的矩阵乘法就是将原始样本点分别往特征向量对应的轴上做投影。 如果取的k=2，那么结果是 这就是经过PCA处理后的样本数据，水平轴（上面举例为LS特征）基本上可以代表全部样本点。整个过程看起来就像将坐标系做了旋转，当然二维可以图形化表示，高维就不行了。上面的如果k=1，那么只会留下这里的水平轴，轴上是所有点在该轴的投影。 这样PCA的过程基本结束。在第一步减均值之后，其实应该还有一步对特征做方差归一化。比如一个特征是汽车速度（0到100），一个是汽车的座位数（2到6），显然第二个的方差比第一个小。因此，如果样本特征中存在这种情况，那么在第一步之后，求每个特征的标准差，然后对每个样例在该特征下的数据除以。 归纳一下，使用我们之前熟悉的表示方法，在求协方差之前的步骤是： 其中是样例，共m个，每个样例n个特征，也就是说是n维向量。是第i个样例的第j个特征。是样例均值。是第j个特征的标准差。 整个PCA过程貌似及其简单，就是求协方差的特征值和特征向量，然后做数据转换。但是有没有觉得很神奇，为什么求协方差的特征向量就是最理想的k维向量？其背后隐藏的意义是什么？整个PCA的意义是什么？ PCA理论基础 要解释为什么协方差矩阵的特征向量就是k维理想特征，我看到的有三个理论：分别是最大方差理论、最小错误理论和坐标轴相关度理论。这里简单探讨前两种，最后一种在讨论PCA意义时简单概述。 3.1 最大方差理论 在信号处理中认为信号具有较大的方差，噪声有较小的方差，信噪比就是信号与噪声的方差比，越大越好。如前面的图，样本在横轴上的投影方差较大，在纵轴上的投影方差较小，那么认为纵轴上的投影是由噪声引起的。 因此我们认为，最好的k维特征是将n维样本点转换为k维后，每一维上的样本方差都很大。 比如下图有5个样本点：（已经做过预处理，均值为0，特征方差归一） 下面将样本投影到某一维上，这里用一条过原点的直线表示（前处理的过程实质是将原点移到样本点的中心点）。 假设我们选择两条不同的直线做投影，那么左右两条中哪个好呢？根据我们之前的方差最大化理论，左边的好，因为投影后的样本点之间方差最大。 这里先解释一下投影的概念： 红色点表示样例，蓝色点表示在u上的投影，u是直线的斜率也是直线的方向向量，而且是单位向量。蓝色点是在u上的投影点，离原点的距离是（即或者）由于这些样本点（样例）的每一维特征均值都为0，因此投影到u上的样本点（只有一个到原点的距离值）的均值仍然是0。 回到上面左右图中的左图，我们要求的是最佳的u，使得投影后的样本点方差最大。 由于投影后均值为0，因此方差为： 中间那部分很熟悉啊，不就是样本特征的协方差矩阵么（的均值为0，一般协方差矩阵都除以m-1，这里用m）。 用来表示，表示，那么上式写作 由于u是单位向量，即，上式两边都左乘u得， 即 We got it！就是的特征值，u是特征向量。最佳的投影直线是特征值最大时对应的特征向量，其次是第二大对应的特征向量，依次类推。 因此，我们只需要对协方差矩阵进行特征值分解，得到的前k大特征值对应的特征向量就是最佳的k维新特征，而且这k维新特征是正交的。得到前k个u以后，样例通过以下变换可以得到新的样本。 其中的第j维就是在上的投影。 通过选取最大的k个u，使得方差较小的特征（如噪声）被丢弃。 主成分分析（Principal components analysis）-最小平方误差解释 3.2 最小平方误差理论 假设有这样的二维样本点（红色点），回顾我们前面探讨的是求一条直线，使得样本点投影到直线上的点的方差最大。本质是求直线，那么度量直线求的好不好，不仅仅只有方差最大化的方法。再回想我们最开始学习的线性回归等，目的也是求一个线性函数使得直线能够最佳拟合样本点，那么我们能不能认为最佳的直线就是回归后的直线呢？回归时我们的最小二乘法度量的是样本点到直线的坐标轴距离。比如这个问题中，特征是x，类标签是y。回归时最小二乘法度量的是距离d。如果使用回归方法来度量最佳直线，那么就是直接在原始样本上做回归了，跟特征选择就没什么关系了。 因此，我们打算选用另外一种评价直线好坏的方法，使用点到直线的距离d’来度量。 现在有n个样本点，每个样本点为m维（这节内容中使用的符号与上面的不太一致，需要重新理解符号的意义）。将样本点在直线上的投影记为，那么我们就是要最小化 这个公式称作最小平方误差（Least Squared Error）。 而确定一条直线，一般只需要确定一个点，并且确定方向即可。 第一步确定点： 假设要在空间中找一点来代表这n个样本点，“代表”这个词不是量化的，因此要量化的话，我们就是要找一个m维的点，使得 最小。其中是平方错误评价函数（squared-error criterion function），假设m为n个样本点的均值： 那么平方错误可以写作： 后项与无关，看做常量，而，因此最小化时， 是样本点均值。 第二步确定方向： 我们从拉出要求的直线（这条直线要过点m），假设直线的方向是单位向量e。那么直线上任意一点，比如就可以用点m和e来表示 其中是到点m的距离。 我们重新定义最小平方误差： 这里的k只是相当于i。就是最小平方误差函数，其中的未知参数是和e。 实际上是求的最小值。首先将上式展开： 我们首先固定e，将其看做是常量，，然后对进行求导，得 这个结果意思是说，如果知道了e，那么将与e做内积，就可以知道了在e上的投影离m的长度距离，不过这个结果不用求都知道。 然后是固定，对e求偏导数，我们先将公式（8）代入，得 其中 与协方差矩阵类似，只是缺少个分母n-1，我们称之为散列矩阵（scatter matrix）。 然后可以对e求偏导数，但是e需要首先满足，引入拉格朗日乘子，来使最大（最小），令 求偏导 这里存在对向量求导数的技巧，方法这里不多做介绍。可以去看一些关于矩阵微积分的资料，这里求导时可以将看作是，将看做是。 导数等于0时，得 两边除以n-1就变成了，对协方差矩阵求特征值向量了。 从不同的思路出发，最后得到同一个结果，对协方差矩阵求特征向量，求得后特征向量上就成为了新的坐标，如下图： 这时候点都聚集在新的坐标轴周围，因为我们使用的最小平方误差的意义就在此。 PCA理论意义 PCA将n个特征降维到k个，可以用来进行数据压缩，如果100维的向量最后可以用10维来表示，那么压缩率为90%。同样图像处理领域的KL变换使用PCA做图像压缩。但PCA要保证降维后，还要保证数据的特性损失最小。再看回顾一下PCA的效果。经过PCA处理后，二维数据投影到一维上可以有以下几种情况： 我们认为左图好，一方面是投影后方差最大，一方面是点到直线的距离平方和最小，而且直线过样本点的中心点。为什么右边的投影效果比较差？直觉是因为坐标轴之间相关，以至于去掉一个坐标轴，就会使得坐标点无法被单独一个坐标轴确定。 PCA得到的k个坐标轴实际上是k个特征向量，由于协方差矩阵对称，因此k个特征向量正交。看下面的计算过程。 假设我们还是用 来表示样例，m个样例，n个特征。特征向量为e，表示第i个特征向量的第1维。那么原始样本特征方程可以用下面式子来表示： 前面两个矩阵乘积就是协方差矩阵（除以m后），原始的样本矩阵A是第二个矩阵m*n。 上式可以简写为 我们最后得到的投影结果是，E是k个特征向量组成的矩阵，展开如下： 得到的新的样例矩阵就是m个样例到k个特征向量的投影，也是这k个特征向量的线性组合。e之间是正交的。从矩阵乘法中可以看出，PCA所做的变换是将原始样本点（n维），投影到k个正交的坐标系中去，丢弃其他维度的信息。举个例子，假设宇宙是n维的（霍金说是11维的），我们得到银河系中每个星星的坐标（相对于银河系中心的n维向量），然而我们想用二维坐标去逼近这些样本点，假设算出来的协方差矩阵的特征向量分别是图中的水平和竖直方向，那么我们建议以银河系中心为原点的x和y坐标轴，所有的星星都投影到x和y上，得到下面的图片。然而我们丢弃了每个星星离我们的远近距离等信息。 总结与讨论 这一部分来自http://www.cad.zju.edu.cn/home/chenlu/pca.htm PCA技术的一大好处是对数据进行降维的处理。我们可以对新求出的“主元”向量的重要性进行排序，根据需要取前面最重要的部分，将后面的维数省去，可以达到降维从而简化模型或是对数据进行压缩的效果。同时最大程度的保持了原有数据的信息。 PCA技术的一个很大的优点是，它是完全无参数限制的。在PCA的计算过程中完全不需要人为的设定参数或是根据任何经验模型对计算进行干预，最后的结果只与数据相关，与用户是独立的。 但是，这一点同时也可以看作是缺点。如果用户对观测对象有一定的先验知识，掌握了数据的一些特征，却无法通过参数化等方法对处理过程进行干预，可能会得不到预期的效果，效率也不高。 图表 4：黑色点表示采样数据，排列成转盘的形状。 容易想象，该数据的主元是或是旋转角。 如图表 4中的例子，PCA找出的主元将是。但是这显然不是最优和最简化的主元。之间存在着非线性的关系。根据先验的知识可知旋转角是最优的主元（类比极坐标）。则在这种情况下，PCA就会失效。但是，如果加入先验的知识，对数据进行某种划归，就可以将数据转化为以为线性的空间中。这类根据先验知识对数据预先进行非线性转换的方法就成为kernel-PCA，它扩展了PCA能够处理的问题的范围，又可以结合一些先验约束，是比较流行的方法。 有时数据的分布并不是满足高斯分布。如图表 5所示，在非高斯分布的情况下，PCA方法得出的主元可能并不是最优的。在寻找主元时不能将方差作为衡量重要性的标准。要根据数据的分布情况选择合适的描述完全分布的变量，然后根据概率分布式 来计算两个向量上数据分布的相关性。等价的，保持主元间的正交假设，寻找的主元同样要使。这一类方法被称为独立主元分解(ICA)。 图表 5：数据的分布并不满足高斯分布，呈明显的十字星状。 这种情况下，方差最大的方向并不是最优主元方向。 另外PCA还可以用于预测矩阵中缺失的元素。 独立成分分析（Independent Component Analysis） 问题： 1、上节提到的PCA是一种数据降维的方法，但是只对符合高斯分布的样本点比较有效，那么对于其他分布的样本，有没有主元分解的方法呢？ 2、经典的鸡尾酒宴会问题（cocktail party problem）。假设在party中有n个人，他们可以同时说话，我们也在房间中一些角落里共放置了n个声音接收器（Microphone）用来记录声音。宴会过后，我们从n个麦克风中得到了一组数据 ，i表示采样的时间顺序，也就是说共得到了m组采样，每一组采样都是n维的。我们的目标是单单从这m组采样数据中分辨出每个人说话的信号。 将第二个问题细化一下，有n个信号源，，每一维都是一个人的声音信号，每个人发出的声音信号独立。A是一个未知的混合矩阵（mixing matrix），用来组合叠加信号s，那么 x的意义在上文解释过，这里的x不是一个向量，是一个矩阵。其中每个列向量是， 表示成图就是 这张图来自 http://amouraux.webnode.com/research-interests/research-interests-erp-analysis/blind-source-separation-bss-of-erps-using-independent-component-analysis-ica/ 的每个分量都由的分量线性表示。A和s都是未知的，x是已知的，我们要想办法根据x来推出s。这个过程也称作为盲信号分离。 令，那么 将W表示成 其中，其实就是将写成行向量形式。那么得到： ICA的不确定性（ICA ambiguities） 由于w和s都不确定，那么在没有先验知识的情况下，无法同时确定这两个相关参数。比如上面的公式s=wx。当w扩大两倍时，s只需要同时扩大两倍即可，等式仍然满足，因此无法得到唯一的s。同时如果将人的编号打乱，变成另外一个顺序，如上图的蓝色节点的编号变为3,2,1，那么只需要调换A的列向量顺序即可，因此也无法单独确定s。这两种情况称为原信号不确定。 还有一种ICA不适用的情况，那就是信号不能是高斯分布的。假设只有两个人发出的声音信号符合多值正态分布，，I是2*2的单位矩阵，s的概率密度函数就不用说了吧，以均值0为中心，投影面是椭圆的山峰状（参见多值高斯分布）。因为，因此，x也是高斯分布的，均值为0，协方差为 。 令R是正交阵，。如果将A替换成A’。那么。s分布没变，因此x’仍然是均值为0，协方差 。 因此，不管混合矩阵是A还是A’，x的分布情况是一样的，那么就无法确定混合矩阵，也就无法确定原信号。 密度函数和线性变换 在讨论ICA具体算法之前，我们先来回顾一下概率和线性代数里的知识。 假设我们的随机变量s有概率密度函数（连续值是概率密度函数，离散值是概率）。为了简单，我们再假设s是实数，还有一个随机变量x=As，A和x都是实数。令是x的概率密度，那么怎么求？ 令，首先将式子变换成，然后得到，求解完毕。可惜这种方法是错误的。比如s符合均匀分布的话（），那么s的概率密度是 ，现在令A=2，即x=2s，也就是说x在[0,2]上均匀分布，可知。然而，前面的推导会得到 。正确的公式应该是 推导方法 更一般地，如果s是向量，A可逆的方阵，那么上式子仍然成立。 ICA算法 ICA算法归功于Bell和Sejnowski，这里使用最大似然估计来解释算法，原始的论文中使用的是一个复杂的方法Infomax principal。 我们假定每个有概率密度，那么给定时刻原信号的联合分布就是 这个公式代表一个假设前提：每个人发出的声音信号各自独立。有了p(s)，我们可以求得p(x) 左边是每个采样信号x（n维向量）的概率，右边是每个原信号概率的乘积的|W|倍。 前面提到过，如果没有先验知识，我们无法求得W和s。因此我们需要知道，我们打算选取一个概率密度函数赋给s，但是我们不能选取高斯分布的密度函数。在概率论里我们知道密度函数p(x)由累计分布函数（cdf）F(x)求导得到。F(x)要满足两个性质是：单调递增和在[0,1]。我们发现sigmoid函数很适合，定义域负无穷到正无穷，值域0到1，缓慢递增。我们假定s的累积分布函数符合sigmoid函数 求导后 这就是s的密度函数。这里s是实数。 如果我们预先知道s的分布函数，那就不用假设了，但是在缺失的情况下，sigmoid函数能够在大多数问题上取得不错的效果。由于上式中是个对称函数，因此E[s]=0（s的均值为0），那么E[x]=E[As]=0，x的均值也是0。 知道了，就剩下W了。给定采样后的训练样本 ，样本对数似然估计如下： 使用前面得到的x的概率密度函数，得 大括号里面是。 接下来就是对W求导了，这里牵涉一个问题是对行列式|W|进行求导的方法，属于矩阵微积分。这里先给出结果，在文章最后再给出推导公式。 最终得到的求导后公式如下，的导数为（可以自己验证）： 其中是梯度上升速率，人为指定。 当迭代求出W后，便可得到来还原出原始信号。 注意：我们计算最大似然估计时，假设了与之间是独立的，然而对于语音信号或者其他具有时间连续依赖特性（比如温度）上，这个假设不能成立。但是在数据足够多时，假设独立对效果影响不大，同时如果事先打乱样例，并运行随机梯度上升算法，那么能够加快收敛速度。 回顾一下鸡尾酒宴会问题，s是人发出的信号，是连续值，不同时间点的s不同，每个人发出的信号之间独立（和之间独立）。s的累计概率分布函数是sigmoid函数，但是所有人发出声音信号都符合这个分布。A（W的逆阵）代表了s相对于x的位置变化，x是s和A变化后的结果。 实例 s=2时的原始信号 观察到的x信号 使用ICA还原后的s信号 行列式的梯度 对行列式求导，设矩阵A是n×n的，我们知道行列式与代数余子式有关， 是去掉第i行第j列后的余子式，那么对求导得 adj(A)跟我们线性代数中学的是一个意思，因此","link":"/2023/03/07/005_%E6%95%B0%E5%AD%A6/%E4%B8%BB%E6%88%90%E4%BB%BD%E5%88%86%E6%9E%90(PCA)%E6%9C%80%E8%AF%A6%E7%BB%86%E5%92%8C%E5%85%A8%E9%9D%A2%E7%9A%84%E8%AF%A0%E9%87%8A(2)/"},{"title":"","text":"https://blog.csdn.net/qq_29831163/article/details/89379731 伽马分布 伽马函数 ：称 为伽马函数，其中参数 α&gt;0 ，伽马函数具有如下性质： 其中 n 为自然数；或写作 余元公式：对于x∈（0,1），有 与贝塔函数 B(m,n) 的关系 : 对于 x&gt;0 ;伽马函数是严格凹函数。 x足够大时，可以用Stirling 公式来计算Gamma 函数值: 背景：若一个元器件能抵挡一些外来冲击，但遇到第k次冲击即告失效，则第k 次冲击来到的时间X(寿命)服从形状参数为k的伽马分布 。 密度函数: α&gt;0 为形状参数 ， λ&gt;0 为尺度参数 ； 密度函数图如下所示， 数学期望与方差 与指数分布 的关系 若形状参数为整数k,则伽马变量可以表示成k个独立同分布的指数变量之和。即， 若 ,则 ,其中 【独立同分布】 卡方分布 与伽马分布的关系 称 的伽马分布为自由度为n的卡方分布，即 密度函数 期望与方差 注：后期再讲数理统计中的t分布与F分布时，再重新细讲卡方分布。参考重要抽样分布：卡方分布（χ2分布）、t分布和F分布 贝塔分布 背景：很多比率，比如，产品的不合格率、机器的维修率、某商品的市场占有率、射击的命中率….都是在区间（0，1）上取值的随机变量，可用beta分布来描述这些随机变量 贝塔函数 ：称 为贝塔函数，其中参数 a&gt;0，b&gt;0 。贝塔函数的性质： 密度函数 ：当 0&lt;x&lt;1 时，为 f(x)；否则为 0。 其中 α &gt;0, β&gt;0 都是形状参数。【下图中 a就是α ，b就是 β】 贝塔分布是定义在（0，1）区间上的连续概率分布，是伯努利分布和二项式分布的共轭先验分布。 数学期望与方差： 与均匀分布的关系： 当 a=b=1 时的贝塔分布就是区间（0，1）上的均匀分布，即 贝塔分布（Beta Distribution) 是一个作为伯努利分布和二项式分布的共轭先验分布的密度函数，在机器学习和数理统计学中有重要应用。在概率论中，贝塔分布，也称Β分布，是指一组定义在(0,1) 区间的连续概率分布，有两个参数 α&gt;0, β&gt;0。 Β分布的概率密度函数是： 其中 Γ(z) Γ函数。随机变量X服从参数为 α, β 的Β分布，通常写作 X~ Be(α, β)。 图1.概率密度函数 Β分布的累积分布函数是： 其中 Bx(α, β ) 是不完全Β函数；Ix(α, β ) 是正则不完全贝塔函数。 图2.累积分布函数 性质 参数为 α, β 贝塔分布的众数是： 2.期望值和方差分别是： 3.偏度是： 4.峰度是： 或： k 阶矩是： 其中 (x)k 表示下降阶乘幂。 k 阶矩还可以递归地表示为： 6.满足下面式子： 给定两个Β分布随机变量, X~ Beta(α, β)，Y~ Beta(α’, β’), X 的微分熵为： 其中 Ψ 表示双伽玛函数。 联合熵为： 9.KL散度其为： 实例 空气中含有的气体状态的水分。表示这种水分的一种办法就是相对湿度。即现在的含水量与空气的最大含水量（饱和含水量）的比值。我们听到的天气预告用语中就经常使用相对湿度这个名词。 相对湿度的值显然仅能出现于0到1之间（经常用百分比表示）。而空气为什么出现某个相对湿度显然具有随机性（可以利用最复杂原理），这些提示我们空气的相对湿度可能符合贝塔分布。","link":"/2023/03/07/005_%E6%95%B0%E5%AD%A6/%E4%BC%BD%E9%A9%AC%E5%88%86%E5%B8%83%E4%B8%8E%20%E8%B4%9D%E5%A1%94%E5%88%86%E5%B8%83%20-%20%E5%86%B7%E6%9C%88%E6%97%A0%E5%A3%B0%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20CSDN%E5%8D%9A%E5%AE%A2/"},{"title":"","text":"本博客的CSDN地址为：https://blog.csdn.net/qy20115549/article/details/87247363 指数分布族的概念 指数分布族是一系列分布的统称，包含连续和离散的相关分布。例如，正态分布(Gaussian)、泊松分布（Poisson）、二项分布(Bernoulli)、指数分布(exponential)、Gamma分布、多项式分布(multivariate)等。 指数分布族中的分布以及指数分布族的性质，经常用于机器学习(machine learning)模型的参数假设以及参数推理中。较为典型的模型是生成模型，例如主题模型(Topic Models)中经常使用到的共轭分布(multivariate和Dirichlet分布、Bernoulli和Beta分布、Poisson和gamma分布等)。指数分布族中的共轭经常用于参数推理、另外其统计特性经常用于变分推理。例如，有兴趣的可以详细阅读下面几篇文章： Blei D M, Ng A Y, Jordan M I. Latent dirichlet allocation[J]. Journal of machine Learning research, 2003, 3(Jan): 993-1022. Teh Y W, Newman D, Welling M. A collapsed variational Bayesian inference algorithm for latent Dirichlet allocation[C]//Advances in neural information processing systems. 2007: 1353-1360. Blei D M, Kucukelbir A, McAuliffe J D. Variational inference: A review for statisticians[J]. Journal of the American Statistical Association, 2017, 112(518): 859-877. 【变分推断的综述性文章—案例代码为：https://blog.csdn.net/qy20115549/article/details/86694325】 Su J. Variational Inference: A Unified Framework of Generative Models and Some Revelations[J]. arXiv preprint arXiv:1807.05936, 2018. 【变分自编码器VAE、生成对抗网络GAN】 Wainwright M J, Jordan M I. Graphical models, exponential families, and variational inference[J]. Foundations and Trends® in Machine Learning, 2008, 1(1–2): 1-305. 【一本书】 指数分布族中的分布于都写成下面的形式： 其中： $\\eta$为自然参数(natural parameter)，可以是向量形式 $T(x)$为充分统计量(sufficient statistic) $A(\\eta)$为累计函数(cumulant function)，作用是确保概率和为1 $h(x)$为underlying measure 典型分布转化 Bernoulli分布 以下是Bernoulli分布的转化： 对比上面的形式，可以得到： Poisson分布 泊松分布的标准形式为： 写成指数形式为： 因此泊松分布也属于指数分布族，其相关参数为： Gaussian分布 正太分布的形式为： 写成指数形式为： 因此，也满足指数组分布： 高斯分布有两个参数，因此自然参数以及充分统计量都有两个。 多元Gaussian分布 标准形式为： 写成指数族形式： 对比： 可以得到： 自然参数为： cumulant function为： Multinomial分布 多项式分布的形式为： 重写为： 从这里发现，累计函数A(η)为0了，实际上并不为0。继续转化有： 这里有： 因此，可以得到： 由这个式子可以转化得到π​k​​，即： 可以看出这个式子是softmax函数。 另外，我们也可以获得： 变分推断应用 在变分推理中，经常使用到的是A(η)性质，即A(η)对(η的一阶偏导数： 上面这个公式，可以由最原始的公式得到。继续计算有： 例如，对二项分布而言： 对正太分布而言： 在变分推理中，经常要计算期望，通过这个性质，便可以将期望计算转化成求导计算。例如， LDA模型 LDA的概率图表示如下： 主题分布θ服从先验为α的Dirichlet分布，即： 其中： 对θ的分布进行转化有： 因此，可以看出Dirichlet分布也属指数分布，由上面的公式得到： 自然参数η​i​​: sufficient statistic为： log normalizer或cumulant function为： 基于上面这三个公式有： 在LDA的变分推理中，需要将下界ELOB转化为多项期望，如下面所示： 此公式中，包含多个期望，在计算时，每个期望都需要推导出公式。由于前面已经分析参数θ，下面只例举E​q​​[logp(θ​j​​∣α)]: 在上面公式标红的部分，便可转化成偏导的计算，这里θ对应的变分参数为γ，即： 这里的log normalizer或cumulant function为： 进而可以计算公式标红的期望： 其中，Ψ(⋅)为digamma函数，及Gamma函数对数的一阶偏导数。因此有： 关于其他期望的求法与这个类似，这里不作过多赘述，有兴趣的可以学习这篇文章： Inference Methods for Latent Dirichlet Allocation 参考内容 https://people.eecs.berkeley.edu/~jordan/courses/260-spring10/other-readings/chapter8.pdf http://www.cs.columbia.edu/~jebara/4771/tutorials/lecture12.pdf https://people.eecs.berkeley.edu/~jordan/courses/260-spring10/other-readings/chapter9.pdf http://times.cs.uiuc.edu/course/598f16/notes/lda-survey.pdf [lda推理]","link":"/2023/03/07/005_%E6%95%B0%E5%AD%A6/%E6%8C%87%E6%95%B0%E5%88%86%E5%B8%83%E6%97%8F(Exponential%20Family)%E7%9B%B8%E5%85%B3%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E5%8F%8A%E5%9C%A8%E5%8F%98%E5%88%86%E6%8E%A8%E6%96%AD%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%20%20%20%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E8%80%85%E5%AE%98%E6%96%B9%E7%BD%91%E7%AB%99(Datalearner)/"},{"title":"","text":"小o是高阶无穷小,大O则是有界量而不是同阶量 具体一点讲,如果给定某个变化趋势x-&gt;a, 1.若lim f(x)/g(x)=0,那么记f(x) = o(g(x))； 2.若存在M&gt;0使得|f(x)/g(x)|0,那么记f(x)=Ω(g(x)) 4.若00时o(x^k)可以化到O(x^{k+1}),比如k+1阶可微函数的n阶Maclaurin展开的余项就有这两种形式.不过一般是不成立的,比如x-&gt;0时x/lnx=o(x),但是不能化到o(x^2). 追答：谁告诉你|f(x)/g(x)|≦M就是只相差常数倍，那样还要大Θ记号干什么，有没有下界区别很本质。另外我也写过o(u)可以写成O(u)的结论。既然我写了那么多你就应该仔细看几遍再仔细想想。 大O是有界量，f(x)=O(g(x))只表明“f可以被g控制”，不说明它们同阶，比如说 x→0时x^3=O(x) n→+∞时lnn=O(n) 这些都不是同阶量。 当limA=0时： 如果limB/A=0，就说B是比A高阶的无穷小，记作B=o(A)，表示B比A趋近于零的速度更快； 如果limB/A=∞，就说B是比A低阶的无穷小 如果limB/A=c≠0，就说B与A是同阶无穷小 如果limB/A=1，就说B与A是等价无穷小，记作B~A； 如果limB/(A^k)=c≠0，就说B是关于A的k价无穷小； 定义 O(x):若对于任意的x,存在常数k,使得f(x)&lt;=k*x，那么f(x)是属于O(x)的； 同理，若对于任意的x,存在常数k，使得g(x)&lt;=k*f(x)，那么g(x)是属于O[f(x)]的。 解释 即O[f(x)]是g(x)的上界的常数倍，为了表征g(x)的性质，通常取其上确界约化系数后的形式。 举例 1）f(x)＝x^2+x+1是O(x^2)的（当然也是O(x^3)的，但是为了更准备地表明f(x)的性质，通常我们取O(x^2)) 2）f(x)＝sin(x)是O(1)的（当然也是O(x)的，想怎么用都行，看具体条件） 3) f(n)＝n!是O(n^n)的（这个更明显，看你想怎么用吧） 是用于描述函数渐进行为的数学符号。更确切地说，它是用另一个（通常更简单的）函数来描述一个函数数量级的渐近上界。在数学中，它一般用来刻画被截断的无穷级数尤其是渐近级数的剩余项；在计算机科学中，它在分析算法复杂性的方面非常有用。","link":"/2023/03/07/005_%E6%95%B0%E5%AD%A6/%E9%AB%98%E9%98%B6%E6%97%A0%E7%A9%B7%E5%B0%8F%20%E5%88%99%E6%98%AF%E6%9C%89%E7%95%8C%E9%87%8F%E8%80%8C%E4%B8%8D%E6%98%AF%E5%90%8C%E9%98%B6%E9%87%8F/"},{"title":"","text":"贝塔分布（Beta Distribution）简介及其应用 贝塔分布（Beta Distribution）是一个连续的概率分布，它只有两个参数。它最重要的应用是为某项实验的成功概率建模。在本篇博客中，我们使用Beta分布作为描述。 一、Beta分布的定义及其简介 二、为实验成功概率建模（为棒球运动员的击球率建模） 三、为顺序统计量建模 四、旧货商服务质量推断 一、Beta分布的定义及其简介 Beta分布是一个定义在 [0,1] 区间上的连续概率分布族，它有两个正值参数，称为形状参数，一般用 α 和 β 表示。在贝叶斯推断中，Beta分布是Bernoulli、二项分布、负二项分布和几何分布的共轭先验分布。Beta分布的概率密度函数形式如下： 这里的 Γ 表示gamma函数。 Beta分布的均值是：​α/(β+​​α​​)​​ 方差是：​αβ​​/((α+β)​²(α+β+1)​​) 下面我们看一下Beta分布的图形： beta分布的R语言实例，首先，我们可以画一个beta分布的概率密度函数。 12345678910set.seed(1)x&lt;-seq(0,1,length.out=10000)plot(0,0,main='probability density function',xlim=c(0,1),ylim=c(0,2.5),ylab='PDF')lines(x,dbeta(x,0.5,0.5),col='red')lines(x,dbeta(x,1,2),col='green')lines(x,dbeta(x,2,2),col='pink')lines(x,dbeta(x,2,5),col='orange')lines(x,dbeta(x,1,3),col='blue')lines(x,dbeta(x,5,1),col='black')legend('top',legend=c('α=0.5,β=0.5','α=1,β=2','α=2,β=2','α=2,β=5','α=1,β=3','α=5,β=1'),col=c('red','green','pink','orange','blue','black'),lwd=1) 我们再来画一个beta分布的累计概率密度函数 12345678910set.seed(1)x&lt;-seq(0,1,length.out=10000)plot(0,0,main='cumulative distribution function',xlim=c(0,1),ylim=c(0,1),ylab='PDF')lines(x,pbeta(x,0.5,0.5),col='red')lines(x,pbeta(x,1,2),col='green')lines(x,pbeta(x,2,2),col='pink')lines(x,pbeta(x,2,5),col='orange')lines(x,pbeta(x,1,3),col='blue')lines(x,pbeta(x,5,1),col='black')legend('topleft',legend=c('α=0.5,β=0.5','α=1,β=2','α=2,β=2','α=2,β=5','α=1,β=3','α=5,β=1'),col=c('red','green','pink','orange','blue','black'),lwd=1) 从Beta分布的概率密度函数的图形我们可以看出，Beta分布有很多种形状，但都是在 0-1 区间内，因此Beta分布可以描述各种 0-1 区间内的形状（事件）。因此，它特别适合为某件事发生或者成功的概率建模。同时，当 α=1，β=1 的时候，它就是一个均匀分布。 下面我们使用三个例子来描述Beta分布的应用。 二、为实验成功概率建模（为棒球运动员的击球率建模） Statlect网站上给出了一个简单的解释。假设一个概率实验只有两种结果，一个是成功，概率是X，另一个是失败，概率为(1−X)。其中，X 的值我们是不知道的，但是它所有可能的情况也是等概率的。如果我们对X的不确定性用一种方式描述，那么，可以认为X是一个来自于[0,1]区间的均匀分布的样本。这是很合理的，因为X只可能是[0,1]之间的某个值。同时，我们对X也一无所知，认为它是[0,1]之间任何一个可能的值。这些都与[0,1]均匀分布的性质契合。现在，假设我们做了n次独立重复的实验，我们观察到k次成功，n−k次失败。这时候我们就可以使用这些实验结果来修订之前的假设了。换句话说，我们就要计算X的条件概率，其条件是我们观察到的成功次数和失败次数。这里计算的结果就是Beta分布了。在这里，在总共n次实验，k次成功的条件下，X的条件概率是一个Beta分布，其参数是k+1和n−k+1。 在Cross Validated的问题：What is the intuition behind beta distribution?中，David Robinson给出了另外一个关于击中棒球的例子。在棒球运动中，有个叫平均击球率的概念。就是用一个运动员击中棒球的次数除以他总的击球数量。一般情况下，棒球运动员的击球概率在0.266左右。高于这个值就是不错的运动员了。假设我们要预测一个运动员在某个赛季的击球率，我们可以使用已有的数据计算。但是在赛季刚开始的时候，他击球次数少，因此无法准确预测。比如他只打了一次球，那击球率就是1或者0，这个显然是不对的，我们也不会这么预测。因为我们都有一个先验期望。即根据历史情况，我们认为一个运动员大概的击球率应当是在0.215到0.360之间。因此，当一个运动员在赛季开始就被三振出局，那么我们可以预期这个运动员的击球率可能会略低于平均值，但他不可能是0。那么，在这个运动员的例子中，关于在赛季开始的击球情况，可以使用二项式分布表示，也就是一系列击球成功和失败的实验（假设之间相互独立）。同时，我们也会给这个数据一个先验期望（即统计中的先验知识），这个先验的分布一般就是Beta分布。这里的Beta分布就是用来修正我们观测到的运动员的击球率的（简单来说就是即便开始这个运动员被三振出局了，我们也只会预测他的击球率可能低于平均水平，但不会是0）。 如上图1所示，我们使用Beta分布作为先验来解决这个问题。这个图是这个问题的概率图模型，假设该用户的击球率的分布是一个参数为θ的分布（这里θ既表示一个分布，也是这个分布的参数。因为在概率图模型中，我们经常使用某个分布的参数来代替说明某个模型），也就是说θ是用户击球成功的概率。假设，到目前为止，用户在这个赛季总共打了n次球，击中的次数是x，这是一个二项式分布，即 p(y∣θ)=Binomial(x;n,θ)。我们的目标就是推导θ分布的形式并估算这个参数的值。这就变成了在贝叶斯推断中的求后验概率的问题了：p(θ∣y,α,β)=​p(y)​​p(y∣θ)p(θ∣α,β)​​ 在这里，分母 p(y) 是数据结果，也就是常数。分子第一个项是二项式分布，即 p(y∣θ) = θ​x​​(1−θ)​(n−x)​​，分子的第二项是Beta分布的结果了。详细结果后面再说。在这里，最后我们会发现 θ 也是一个Beta分布。其结果为 Beta(α+x, β+(n−x)) 比如，假设所有的运动员击球率在0.27左右，范围一般是0.21到0.35之间。这个可以用参数α=81和β=219的Beta分布表示，即 Beta(81,219)。为什么参数取这两个值呢？因为这两个参数的Beta分布的均值是 0.27，主要的区间是[0.2,0.35]。假设某个用户击球 300次，成功 100次，那么，根据计算的结果，用户的击球率的分布应当是 Beta(181,419)，其概率大约是均值 0.303，要比平均水平略高。 从上面这两个例子中我们可以看出，对于某个事件发生的可能的概率，当我们只有一些大概的了解，但无法知道确切的概率的时候，可以使用Beta分布表示这个概率分布。也就是说，Beta分布是用来为某些具有一定范围的事情建模的，例如 0-1 之间的概率。 三、为顺序统计量建模 假设有个机器可以随机产生[0, 1]之间的随机数，机器运行10次，第7大的数是什么，偏离不超过0.01？这个问题的数学化表达如下： 1. X​1​​, X​2​​, …, X​n​​∼Uniform(0, 1), i.i.d. 2. 将这 n 个随机变量排序得到顺序统计量 X​(1)​​, X​(2)​​, …, X​(n)​​ 3. 问 X​(k)​​ 的分布是什么？ 我们可以假设计算 X​k​​ 落在 [x,x+Δx] 区间上的概率：P(x≤X​k​​≤x+Δx)=? 我们将区间分成三个部分 [0,x), [x,x+Δx], (x+Δx,1]。假设只有1个数落在区间 [x,x+Δx] 内，那么该事件可以表示：E={X​1​​∈[x,x+Δx], X​i​​∈[0,x)], X​j​​∈(x+Δx,1]} 其中，i=2 ,…, k, j=k+1, …, n 从而有：P(E)=∏​i=1​n​​P(x​i​​)=x​k−1​​(1−x−Δx)​n−k​​Δx=x​k−1​​(1−x)​n−k​​Δx+o(Δx) 其中o(Δx)表示Δx的高阶无穷小。根据推断，落在[x,x+Δx]区间的事件超过一个，则对应的事件概率就是o(Δx)。进而我们可以得到X​k​​的概率密度为： f(x)=lim​Δx→0​​​Δx​​P(x≤X​k​​≤x+Δx)​​ =​(k−1)!(n−k)!​​n!​​x​k−1​​(1−x)​n−k​​ =​Γ(k)Γ(n−k+1)​​Γ(n+1)​​x​k−1​​(1−x)​n−k​​ =​Γ(α)Γ(β)​​Γ(α+β)​​x​α−1​​(1−x)​β−1​​ 上式即为一般意义上的beta分布。具体的推导过程可以参见《LDA数学八卦》。 四、旧货商服务质量推断 假设亚马逊上有三家旧货商，其评价结果分别如下： 商家一：85193个评论，94%的正向 商家二：20785个评论，98%的正向 商家三：840个评论，99%的正向 那么这三个商家中，哪一家的服务质量最好呢？假设这三家的服务质量分别是θ​X​​、θ​Y​​和θ​Z​​。假设我们对三家旧货商的信息一无所知，那么这些参数的先验可以认为是一个均匀分布，也可以等同于beta(1,1)。根据之前的知识，我们知道，最终这三家旧货商的服务质量应当服从三个不同参数的Beta分布，即beta(80082,5113)、beta(20370,417)和beta(833,9)（把正向的和负向的评论书算出来，分别加1就是参数了，参考上面公式）。注意，当Beta分布的参数很大的时候，我们可以使用相同均值和方差的正态分布代替这个beta分布。因此，最终这三家供货商，商家3的服务质量的标准差是0.003，是最大的。其他两家的标准差比这个还小。因此，我们可以认为这三家供货商的服务质量都高度聚焦于他们的均值。因此，从第一个或第二个分布中抽取的样本不太可能比第三个样本的值高。也就是说前两个服务商不太可能质量比第三个高。 参考1：https://stats.stackexchange.com/questions/47771/what-is-the-intuition-behind-beta-distribution 参考2：https://www.johndcook.com/blog/2011/09/27/bayesian-amazon/#comments 参考3：https://en.wikipedia.org/wiki/Beta_distribution 参考4：《LDA数学八卦》","link":"/2023/03/07/005_%E6%95%B0%E5%AD%A6/%E8%B4%9D%E5%A1%94%E5%88%86%E5%B8%83%EF%BC%88Beta%20Distribution%EF%BC%89%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%20%20%20%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E8%80%85%E5%AE%98%E6%96%B9%E7%BD%91%E7%AB%99(Datalearner)/"},{"title":"","text":"主成分分析（Principal components analysis） -最大方差解释 问题 真实的训练数据总是存在各种各样的问题： 1、 比如拿到一个汽车的样本，里面既有以“千米/每小时”度量的最大速度特征，也有“英里/小时”的最大速度特征，显然这两个特征有一个多余。 2、 拿到一个数学系的本科生期末考试成绩单，里面有三列，一列是对数学的兴趣程度，一列是复习时间，还有一列是考试成绩。我们知道要学好数学，需要有浓厚的兴趣，所以第二项与第一项强相关，第三项和第二项也是强相关。那是不是可以合并第一项和第二项呢？ 3、 拿到一个样本，特征非常多，而样例特别少，这样用回归去直接拟合非常困难，容易过度拟合。比如北京的房价：假设房子的特征是（大小、位置、朝向、是否学区房、建造年代、是否二手、层数、所在层数），搞了这么多特征，结果只有不到十个房子的样例。要拟合房子特征-&gt;房价的这么多特征，就会造成过度拟合。 4、 这个与第二个有点类似，假设在IR中我们建立的文档-词项矩阵中，有两个词项为“learn”和“study”，在传统的向量空间模型中，认为两者独立。然而从语义的角度来讲，两者是相似的，而且两者出现频率也类似，是不是可以合成为一个特征呢？ 5、 在信号传输过程中，由于信道不是理想的，信道另一端收到的信号会有噪音扰动，那么怎么滤去这些噪音呢？ 回顾我们之前介绍的《模型选择和规则化》，里面谈到的特征选择的问题。但在那篇中要剔除的特征主要是和类标签无关的特征。比如“学生的名字”就和他的“成绩”无关，使用的是互信息的方法。 而这里的特征很多是和类标签有关的，但里面存在噪声或者冗余。在这种情况下，需要一种特征降维的方法来减少特征数，减少噪音和冗余，减少过度拟合的可能性。 下面探讨一种称作主成分分析（PCA）的方法来解决部分上述问题。PCA的思想是将n维特征映射到k维上（k PCA计算过程 首先介绍PCA的计算过程： 假设我们得到的2维数据如下： 行代表了样例，列代表特征，这里有10个样例，每个样例两个特征。可以这样认为，有10篇文档，x是10篇文档中“learn”出现的TF-IDF，y是10篇文档中“study”出现的TF-IDF。也可以认为有10辆汽车，x是千米/小时的速度，y是英里/小时的速度，等等。 第一步分别求x和y的平均值，然后对于所有的样例，都减去对应的均值。这里x的均值是1.81，y的均值是1.91，那么一个样例减去均值后即为（0.69,0.49），得到 第二步，求特征协方差矩阵，如果数据是3维，那么协方差矩阵是 这里只有x和y，求解得 对角线上分别是x和y的方差，非对角线上是协方差。协方差大于0表示x和y若有一个增，另一个也增；小于0表示一个增，一个减；协方差为0时，两者独立。协方差绝对值越大，两者对彼此的影响越大，反之越小。 第三步，求协方差的特征值和特征向量，得到 上面是两个特征值，下面是对应的特征向量，特征值0.0490833989对应特征向量为 ，这里的特征向量都归一化为单位向量。 第四步，将特征值按照从大到小的顺序排序，选择其中最大的k个，然后将其对应的k个特征向量分别作为列向量组成特征向量矩阵。 这里特征值只有两个，我们选择其中最大的那个，这里是1.28402771，对应的特征向量是 。 第五步，将样本点投影到选取的特征向量上。假设样例数为m，特征数为n，减去均值后的样本矩阵为DataAdjust(mn)，协方差矩阵是nn，选取的k个特征向量组成的矩阵为EigenVectors(n*k)。那么投影后的数据FinalData为 这里是 FinalData(101) = DataAdjust(102矩阵)×特征向量 得到结果是 这样，就将原始样例的n维特征变成了k维，这k维就是原始特征在k维上的投影。 上面的数据可以认为是learn和study特征融合为一个新的特征叫做LS特征，该特征基本上代表了这两个特征。 上述过程有个图描述： 正号表示预处理后的样本点，斜着的两条线就分别是正交的特征向量（由于协方差矩阵是对称的，因此其特征向量正交），最后一步的矩阵乘法就是将原始样本点分别往特征向量对应的轴上做投影。 如果取的k=2，那么结果是 这就是经过PCA处理后的样本数据，水平轴（上面举例为LS特征）基本上可以代表全部样本点。整个过程看起来就像将坐标系做了旋转，当然二维可以图形化表示，高维就不行了。上面的如果k=1，那么只会留下这里的水平轴，轴上是所有点在该轴的投影。 这样PCA的过程基本结束。在第一步减均值之后，其实应该还有一步对特征做方差归一化。比如一个特征是汽车速度（0到100），一个是汽车的座位数（2到6），显然第二个的方差比第一个小。因此，如果样本特征中存在这种情况，那么在第一步之后，求每个特征的标准差，然后对每个样例在该特征下的数据除以。 归纳一下，使用我们之前熟悉的表示方法，在求协方差之前的步骤是： 其中是样例，共m个，每个样例n个特征，也就是说是n维向量。是第i个样例的第j个特征。是样例均值。是第j个特征的标准差。 整个PCA过程貌似及其简单，就是求协方差的特征值和特征向量，然后做数据转换。但是有没有觉得很神奇，为什么求协方差的特征向量就是最理想的k维向量？其背后隐藏的意义是什么？整个PCA的意义是什么？ PCA理论基础 要解释为什么协方差矩阵的特征向量就是k维理想特征，我看到的有三个理论：分别是最大方差理论、最小错误理论和坐标轴相关度理论。这里简单探讨前两种，最后一种在讨论PCA意义时简单概述。 3.1 最大方差理论 在信号处理中认为信号具有较大的方差，噪声有较小的方差，信噪比就是信号与噪声的方差比，越大越好。如前面的图，样本在横轴上的投影方差较大，在纵轴上的投影方差较小，那么认为纵轴上的投影是由噪声引起的。 因此我们认为，最好的k维特征是将n维样本点转换为k维后，每一维上的样本方差都很大。 比如下图有5个样本点：（已经做过预处理，均值为0，特征方差归一） 下面将样本投影到某一维上，这里用一条过原点的直线表示（前处理的过程实质是将原点移到样本点的中心点）。 假设我们选择两条不同的直线做投影，那么左右两条中哪个好呢？根据我们之前的方差最大化理论，左边的好，因为投影后的样本点之间方差最大。 这里先解释一下投影的概念： 红色点表示样例，蓝色点表示在u上的投影，u是直线的斜率也是直线的方向向量，而且是单位向量。蓝色点是在u上的投影点，离原点的距离是（即或者）由于这些样本点（样例）的每一维特征均值都为0，因此投影到u上的样本点（只有一个到原点的距离值）的均值仍然是0。 回到上面左右图中的左图，我们要求的是最佳的u，使得投影后的样本点方差最大。 由于投影后均值为0，因此方差为： 中间那部分很熟悉啊，不就是样本特征的协方差矩阵么（的均值为0，一般协方差矩阵都除以m-1，这里用m）。 用来表示，表示，那么上式写作 由于u是单位向量，即，上式两边都左乘u得， 即 We got it！就是的特征值，u是特征向量。最佳的投影直线是特征值最大时对应的特征向量，其次是第二大对应的特征向量，依次类推。 因此，我们只需要对协方差矩阵进行特征值分解，得到的前k大特征值对应的特征向量就是最佳的k维新特征，而且这k维新特征是正交的。得到前k个u以后，样例通过以下变换可以得到新的样本。 其中的第j维就是在上的投影。 通过选取最大的k个u，使得方差较小的特征（如噪声）被丢弃。 主成分分析（Principal components analysis）-最小平方误差解释 3.2 最小平方误差理论 假设有这样的二维样本点（红色点），回顾我们前面探讨的是求一条直线，使得样本点投影到直线上的点的方差最大。本质是求直线，那么度量直线求的好不好，不仅仅只有方差最大化的方法。再回想我们最开始学习的线性回归等，目的也是求一个线性函数使得直线能够最佳拟合样本点，那么我们能不能认为最佳的直线就是回归后的直线呢？回归时我们的最小二乘法度量的是样本点到直线的坐标轴距离。比如这个问题中，特征是x，类标签是y。回归时最小二乘法度量的是距离d。如果使用回归方法来度量最佳直线，那么就是直接在原始样本上做回归了，跟特征选择就没什么关系了。 因此，我们打算选用另外一种评价直线好坏的方法，使用点到直线的距离d’来度量。 现在有n个样本点，每个样本点为m维（这节内容中使用的符号与上面的不太一致，需要重新理解符号的意义）。将样本点在直线上的投影记为，那么我们就是要最小化 这个公式称作最小平方误差（Least Squared Error）。 而确定一条直线，一般只需要确定一个点，并且确定方向即可。 第一步确定点： 假设要在空间中找一点来代表这n个样本点，“代表”这个词不是量化的，因此要量化的话，我们就是要找一个m维的点，使得 最小。其中是平方错误评价函数（squared-error criterion function），假设m为n个样本点的均值： 那么平方错误可以写作： 后项与无关，看做常量，而，因此最小化时， 是样本点均值。 第二步确定方向： 我们从拉出要求的直线（这条直线要过点m），假设直线的方向是单位向量e。那么直线上任意一点，比如就可以用点m和e来表示 其中是到点m的距离。 我们重新定义最小平方误差： 这里的k只是相当于i。就是最小平方误差函数，其中的未知参数是和e。 实际上是求的最小值。首先将上式展开： 我们首先固定e，将其看做是常量，，然后对进行求导，得 这个结果意思是说，如果知道了e，那么将与e做内积，就可以知道了在e上的投影离m的长度距离，不过这个结果不用求都知道。 然后是固定，对e求偏导数，我们先将公式（8）代入，得 其中 与协方差矩阵类似，只是缺少个分母n-1，我们称之为散列矩阵（scatter matrix）。 然后可以对e求偏导数，但是e需要首先满足，引入拉格朗日乘子，来使最大（最小），令 求偏导 这里存在对向量求导数的技巧，方法这里不多做介绍。可以去看一些关于矩阵微积分的资料，这里求导时可以将看作是，将看做是。 导数等于0时，得 两边除以n-1就变成了，对协方差矩阵求特征值向量了。 从不同的思路出发，最后得到同一个结果，对协方差矩阵求特征向量，求得后特征向量上就成为了新的坐标，如下图： 这时候点都聚集在新的坐标轴周围，因为我们使用的最小平方误差的意义就在此。 PCA理论意义 PCA将n个特征降维到k个，可以用来进行数据压缩，如果100维的向量最后可以用10维来表示，那么压缩率为90%。同样图像处理领域的KL变换使用PCA做图像压缩。但PCA要保证降维后，还要保证数据的特性损失最小。再看回顾一下PCA的效果。经过PCA处理后，二维数据投影到一维上可以有以下几种情况： 我们认为左图好，一方面是投影后方差最大，一方面是点到直线的距离平方和最小，而且直线过样本点的中心点。为什么右边的投影效果比较差？直觉是因为坐标轴之间相关，以至于去掉一个坐标轴，就会使得坐标点无法被单独一个坐标轴确定。 PCA得到的k个坐标轴实际上是k个特征向量，由于协方差矩阵对称，因此k个特征向量正交。看下面的计算过程。 假设我们还是用 来表示样例，m个样例，n个特征。特征向量为e，表示第i个特征向量的第1维。那么原始样本特征方程可以用下面式子来表示： 前面两个矩阵乘积就是协方差矩阵（除以m后），原始的样本矩阵A是第二个矩阵m*n。 上式可以简写为 我们最后得到的投影结果是，E是k个特征向量组成的矩阵，展开如下： 得到的新的样例矩阵就是m个样例到k个特征向量的投影，也是这k个特征向量的线性组合。e之间是正交的。从矩阵乘法中可以看出，PCA所做的变换是将原始样本点（n维），投影到k个正交的坐标系中去，丢弃其他维度的信息。举个例子，假设宇宙是n维的（霍金说是11维的），我们得到银河系中每个星星的坐标（相对于银河系中心的n维向量），然而我们想用二维坐标去逼近这些样本点，假设算出来的协方差矩阵的特征向量分别是图中的水平和竖直方向，那么我们建议以银河系中心为原点的x和y坐标轴，所有的星星都投影到x和y上，得到下面的图片。然而我们丢弃了每个星星离我们的远近距离等信息。 总结与讨论 这一部分来自http://www.cad.zju.edu.cn/home/chenlu/pca.htm PCA技术的一大好处是对数据进行降维的处理。我们可以对新求出的“主元”向量的重要性进行排序，根据需要取前面最重要的部分，将后面的维数省去，可以达到降维从而简化模型或是对数据进行压缩的效果。同时最大程度的保持了原有数据的信息。 PCA技术的一个很大的优点是，它是完全无参数限制的。在PCA的计算过程中完全不需要人为的设定参数或是根据任何经验模型对计算进行干预，最后的结果只与数据相关，与用户是独立的。 但是，这一点同时也可以看作是缺点。如果用户对观测对象有一定的先验知识，掌握了数据的一些特征，却无法通过参数化等方法对处理过程进行干预，可能会得不到预期的效果，效率也不高。 图表 4：黑色点表示采样数据，排列成转盘的形状。 容易想象，该数据的主元是或是旋转角。 如图表 4中的例子，PCA找出的主元将是。但是这显然不是最优和最简化的主元。之间存在着非线性的关系。根据先验的知识可知旋转角是最优的主元（类比极坐标）。则在这种情况下，PCA就会失效。但是，如果加入先验的知识，对数据进行某种划归，就可以将数据转化为以为线性的空间中。这类根据先验知识对数据预先进行非线性转换的方法就成为kernel-PCA，它扩展了PCA能够处理的问题的范围，又可以结合一些先验约束，是比较流行的方法。 有时数据的分布并不是满足高斯分布。如图表 5所示，在非高斯分布的情况下，PCA方法得出的主元可能并不是最优的。在寻找主元时不能将方差作为衡量重要性的标准。要根据数据的分布情况选择合适的描述完全分布的变量，然后根据概率分布式 来计算两个向量上数据分布的相关性。等价的，保持主元间的正交假设，寻找的主元同样要使。这一类方法被称为独立主元分解(ICA)。 图表 5：数据的分布并不满足高斯分布，呈明显的十字星状。 这种情况下，方差最大的方向并不是最优主元方向。 另外PCA还可以用于预测矩阵中缺失的元素。 独立成分分析（Independent Component Analysis） 问题： 1、上节提到的PCA是一种数据降维的方法，但是只对符合高斯分布的样本点比较有效，那么对于其他分布的样本，有没有主元分解的方法呢？ 2、经典的鸡尾酒宴会问题（cocktail party problem）。假设在party中有n个人，他们可以同时说话，我们也在房间中一些角落里共放置了n个声音接收器（Microphone）用来记录声音。宴会过后，我们从n个麦克风中得到了一组数据 ，i表示采样的时间顺序，也就是说共得到了m组采样，每一组采样都是n维的。我们的目标是单单从这m组采样数据中分辨出每个人说话的信号。 将第二个问题细化一下，有n个信号源，，每一维都是一个人的声音信号，每个人发出的声音信号独立。A是一个未知的混合矩阵（mixing matrix），用来组合叠加信号s，那么 x的意义在上文解释过，这里的x不是一个向量，是一个矩阵。其中每个列向量是， 表示成图就是 这张图来自 http://amouraux.webnode.com/research-interests/research-interests-erp-analysis/blind-source-separation-bss-of-erps-using-independent-component-analysis-ica/ 的每个分量都由的分量线性表示。A和s都是未知的，x是已知的，我们要想办法根据x来推出s。这个过程也称作为盲信号分离。 令，那么 将W表示成 其中，其实就是将写成行向量形式。那么得到： ICA的不确定性（ICA ambiguities） 由于w和s都不确定，那么在没有先验知识的情况下，无法同时确定这两个相关参数。比如上面的公式s=wx。当w扩大两倍时，s只需要同时扩大两倍即可，等式仍然满足，因此无法得到唯一的s。同时如果将人的编号打乱，变成另外一个顺序，如上图的蓝色节点的编号变为3,2,1，那么只需要调换A的列向量顺序即可，因此也无法单独确定s。这两种情况称为原信号不确定。 还有一种ICA不适用的情况，那就是信号不能是高斯分布的。假设只有两个人发出的声音信号符合多值正态分布，，I是2*2的单位矩阵，s的概率密度函数就不用说了吧，以均值0为中心，投影面是椭圆的山峰状（参见多值高斯分布）。因为，因此，x也是高斯分布的，均值为0，协方差为 。 令R是正交阵，。如果将A替换成A’。那么。s分布没变，因此x’仍然是均值为0，协方差 。 因此，不管混合矩阵是A还是A’，x的分布情况是一样的，那么就无法确定混合矩阵，也就无法确定原信号。 密度函数和线性变换 在讨论ICA具体算法之前，我们先来回顾一下概率和线性代数里的知识。 假设我们的随机变量s有概率密度函数（连续值是概率密度函数，离散值是概率）。为了简单，我们再假设s是实数，还有一个随机变量x=As，A和x都是实数。令是x的概率密度，那么怎么求？ 令，首先将式子变换成，然后得到，求解完毕。可惜这种方法是错误的。比如s符合均匀分布的话（），那么s的概率密度是 ，现在令A=2，即x=2s，也就是说x在[0,2]上均匀分布，可知。然而，前面的推导会得到 。正确的公式应该是 推导方法 更一般地，如果s是向量，A可逆的方阵，那么上式子仍然成立。 ICA算法 ICA算法归功于Bell和Sejnowski，这里使用最大似然估计来解释算法，原始的论文中使用的是一个复杂的方法Infomax principal。 我们假定每个有概率密度，那么给定时刻原信号的联合分布就是 这个公式代表一个假设前提：每个人发出的声音信号各自独立。有了p(s)，我们可以求得p(x) 左边是每个采样信号x（n维向量）的概率，右边是每个原信号概率的乘积的|W|倍。 前面提到过，如果没有先验知识，我们无法求得W和s。因此我们需要知道，我们打算选取一个概率密度函数赋给s，但是我们不能选取高斯分布的密度函数。在概率论里我们知道密度函数p(x)由累计分布函数（cdf）F(x)求导得到。F(x)要满足两个性质是：单调递增和在[0,1]。我们发现sigmoid函数很适合，定义域负无穷到正无穷，值域0到1，缓慢递增。我们假定s的累积分布函数符合sigmoid函数 求导后 这就是s的密度函数。这里s是实数。 如果我们预先知道s的分布函数，那就不用假设了，但是在缺失的情况下，sigmoid函数能够在大多数问题上取得不错的效果。由于上式中是个对称函数，因此E[s]=0（s的均值为0），那么E[x]=E[As]=0，x的均值也是0。 知道了，就剩下W了。给定采样后的训练样本 ，样本对数似然估计如下： 使用前面得到的x的概率密度函数，得 大括号里面是。 接下来就是对W求导了，这里牵涉一个问题是对行列式|W|进行求导的方法，属于矩阵微积分。这里先给出结果，在文章最后再给出推导公式。 最终得到的求导后公式如下，的导数为（可以自己验证）： 其中是梯度上升速率，人为指定。 当迭代求出W后，便可得到来还原出原始信号。 注意：我们计算最大似然估计时，假设了与之间是独立的，然而对于语音信号或者其他具有时间连续依赖特性（比如温度）上，这个假设不能成立。但是在数据足够多时，假设独立对效果影响不大，同时如果事先打乱样例，并运行随机梯度上升算法，那么能够加快收敛速度。 回顾一下鸡尾酒宴会问题，s是人发出的信号，是连续值，不同时间点的s不同，每个人发出的信号之间独立（和之间独立）。s的累计概率分布函数是sigmoid函数，但是所有人发出声音信号都符合这个分布。A（W的逆阵）代表了s相对于x的位置变化，x是s和A变化后的结果。 实例 s=2时的原始信号 观察到的x信号 使用ICA还原后的s信号 行列式的梯度 对行列式求导，设矩阵A是n×n的，我们知道行列式与代数余子式有关， 是去掉第i行第j列后的余子式，那么对求导得 adj(A)跟我们线性代数中学的是一个意思，因此 YaK ： yet another knowledge , 彼岸的知识。 我们提供一把钥匙给孩子，去探索数字世界–学习编程和软件知识，并打开未来世界窗口。 让更多的孩子享受公平教育；让孩子拥有更强的能力去面对未来不确定的社会；让孩子能沉浸在快乐的学习过程中。 需要自我的存在，发现思想的力量。从元状态中寻找科学之美，理解自我的魅力。突破思维的局限。在多学科交叉的状态下，寻找更多存在的可能。","link":"/2023/03/07/005_%E6%95%B0%E5%AD%A6/%E4%B8%BB%E6%88%90%E4%BB%BD%E5%88%86%E6%9E%90(PCA)%E6%9C%80%E8%AF%A6%E7%BB%86%E5%92%8C%E5%85%A8%E9%9D%A2%E7%9A%84%E8%AF%A0%E9%87%8A/"},{"title":"","text":"1、延时 “E:\\教程\\编程\\CMD\\CMD_4种延时方法测试.bat” ping 127.0.0.1 -n 6 &gt;nul 6 表示 ping 多少次，实际应用中，次数减去1，就是大约的秒数； 127.1 表示本地网络，全称是 127.0.0.1，127.1 是简写 nul 是空设备，你可以理解为实际不存在的设备。 2、如何让MATLAB程序运行不显示警告输入 warning off 即可 3、三维数组，元胞数组，结构体3.1 三维数组必须一致12345A = zeros(10,5,3)，三个10x5的矩阵rand(2,3)，2x3的均匀分布随机数（0-1）矩阵randi(4,2,3)，2x3的均匀分布的伪随机整数（1,2,3,4）矩阵randn(2,3)，2x3的标准正态分布随机数矩阵randn(2)，2x2的标准正态分布随机数矩阵 3.2 元胞数组每个元胞的大小可以不同123A = cell(1, 6)eye(3)，3x3的主对角线为1 ，其他为0的矩阵ones(4)， 4x4的都为1的矩阵 3.3 结构体的大小可以不同1234books = struct('name',{{'Machine Learning','Data Mining'}},'price',[30 40])books.namebooks.name(1)books.name{1} 4、.* ./要求前后的矩阵或数组维度一致，表示对应元素的相乘或相除 5、常见矩阵操作123456789101112131415pinv(A) 求A的伪逆矩阵inv(A) 求A的逆矩阵A(:) 将A转换为列向量[m, n] = find(A &gt; 20) 找出A中大于20的元素的下标，m为行，n为列if any(A) % A为逻辑值，可以遍历A中的所有元素，相当于循环了···else···endfind(A) 查找A中非0元素的下标及值factorial(n) n的阶乘prod(1:6) 数组元素的乘积isequal(S, T) 判断S与T是否相等 6、绘图1234567891011121314151617181920212223242526272829x = 0:0.01:2*pi;y = sin(x);figure % 创建一个新的画布plot(x, y)title('y = sin(x)') % 命名图xlabel('x') % 命名x轴ylabel('sin(x)') % 命名y轴xlim([0 2*pi]) % 限制x轴范围x = 0:0.01:20;y1 = 200*exp(-0.05*x).*sin(x);y2 = 0.8*exp(-0.5*x).*sin(10*x);figure[AX,H1,H2] = plotyy(x,y1,x,y2,'plot'); % 绘制2个y轴的图set(get(AX(1),'Ylabel'),'String','Slow Decay') set(get(AX(2),'Ylabel'),'String','Fast Decay') xlabel('Time (\\musec)') % \\mu 为μtitle('Multiple Decay Rates') set(H1,'LineStyle','--')set(H2,'LineStyle',':')t = 0:pi/50:10*pi;plot3(sin(t),cos(t),t) % 三维立体绘图xlabel('sin(t)')ylabel('cos(t)')zlabel('t')grid on % 打开网格axis square 7、数据导入与导出12345678910111213 txt格式M = importdata('myfile.txt');S = M.data;save 'data.txt' S -asciiT = load('data.txt');xls格式xlswrite('data.xls',S)W = xlsread('data.xls'); csv格式csvwrite('data.csv',S)V = csvread('data.csv'); 8、matlab块注释%{ %} 9、三维数组，元胞数组1E = zeros(10,5,3) 10、三维数组，元胞数组1E = zeros(10,5,3) 11、三维数组，元胞数组1E = zeros(10,5,3)","link":"/2023/03/07/001_%E6%96%B0%E6%83%B3%E6%B3%95/CMD/"},{"title":"","text":"","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/(33)aurora%E7%BC%96%E8%BE%91%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89_%E6%8B%82%E6%B0%B4%E9%A3%98%E7%BB%B5_%E6%96%B0%E6%B5%AA%E5%8D%9A%E5%AE%A2/"},{"title":"","text":"原文地址 blog.csdn.net 数据规范化数据规范化（归一化）处理是数据挖掘的一项基础工作。不同评价指标往往具有不同的量纲，数值见的差别可能很大，不进行处理可能会影响到数据分析的结果。为了消除指标之间的量纲和取值范围差异的影响，需要进行标准化处理，将数据按照比例进行缩放，使之落入一个特定的区域，便于进行综合分析。如将工资收入属性值映射到 [-1, 1] 或者 [0, 1] 内。 数据规范化对于基于距离的挖掘算法尤为重要。 （1）最小 - 最大规范化最小 - 最大规范化也称为离散标准化，是对原始数据的线性变换，将数据值映射到 [0, 1] 之间。 转换公式如下： $$ $$$$ \\vec{x}\\stackrel{\\mathrm{def}}{=}{x_1,\\dots,x_n} $$ 离差标准化保留了原来数据中存在的关系，是消除量纲和数据取值范围影响的最简单方法。这种处理方法的缺点是若数值集中且某个数值很大，则规范化后各值接近于 0，并且将会相差不大。（如 1， 1.2， 1.3， 1.4， 1.5， 1.6，8.4）这组数据。若将来遇到超过目前属性 [min, max] 取值范围的时候，会引起系统报错，需要重新确定 min 和 max。 （2）零 - 均值规范化（z-score 标准化）零 - 均值规范化也称标准差标准化，经过处理的数据的均值为 0，标准差为 1。转化公式为： 其中为原始数据的均值，为原始数据的标准差，是当前用得最多的数据标准化方式。标准差分数可以回答这样一个问题：”给定数据距离其均值多少个标准差” 的问题，在均值之上的数据会得到一个正的标准化分数，反之会得到一个负的标准化分数。 （3）小数定标规范化通过移动属性值的小数位数，将属性值映射到 [-1, 1] 之间，移动的小数位数取决于属性值绝对值的最大值。转化公式为： 代码的实现地址为：点击打开链接","link":"/2023/03/07/001_%E6%96%B0%E6%83%B3%E6%B3%95/%E6%95%B0%E6%8D%AE%E8%A7%84%E8%8C%83%E5%8C%96%EF%BC%88%E5%BD%92%E4%B8%80%E5%8C%96%EF%BC%89%E3%80%81%E5%8F%8A%20Z-score%20%E6%A0%87%E5%87%86%E5%8C%96_%E5%86%99%20IT%20%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%88%91%EF%BC%8C%E8%AF%BB%20math%20%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BD%A0%20-%20CSDN%20%E5%8D%9A%E5%AE%A2/"},{"title":"","text":"1、来自 UQlab PCE 帮助文档 The OMP algorithm is a linear regression tool that minimizes the norm of the approximation residual at each iteration. The algorithm uses the leave-one-out error estimator in Eq. (1.26) to adaptively select the best active set.","link":"/2023/03/07/001_%E6%96%B0%E6%83%B3%E6%B3%95/OMP/"},{"title":"","text":"Geatpy是一个高性能实用型的Python遗传算法工具箱，提供一个面向对象的进化算法框架，经过全面改版后，新版Geatpy2目前由华南农业大学、暨南大学、华南理工等本硕博学生联合团队开发及维护。 Website (including documentation): http://www.geatpy.com Demo : https://github.com/geatpy-dev/geatpy/tree/master/geatpy/demo Pypi page : https://pypi.org/project/geatpy/ Contact us: http://geatpy.com/index.php/about/ Bug reports: https://github.com/geatpy-dev/geatpy/issues Notice: http://geatpy.com/index.php/notice/ FAQ: http://geatpy.com/index.php/faq/ Geatpy提供了许多已实现的遗传和进化算法相关算子的库函数，如初始化种群、选择、交叉、变异、重插入、多目标优化非支配排序等，并且提供诸多已实现的进化算法模板来实现多样化的进化算法。其执行效率高于Matlab、Java和Python编写的一些知名工具箱、平台或框架等，学习成本低、模块高度脱耦、扩展性高。 Geatpy支持二进制/格雷码编码种群、实数值种群、整数值种群、排列编码种群。支持轮盘赌选择、随机抽样选择、锦标赛选择。提供单点交叉、两点交叉、洗牌交叉、部分匹配交叉(PMX)、顺序交叉(OX)、线性重组、离散重组、中间重组等重组算子。提供简单离散变异、实数值变异、整数值变异、互换变异等变异算子。支持随机重插入、精英重插入。支持awGA、rwGA、nsga2、快速非支配排序等多目标优化的库函数、提供进化算法框架下的常用进化算法模板等。 关于遗传算法、进化算法的学习资料，在官网中https://www.geatpy.com 有详细讲解以及相关的学术论文链接。同时网上也有很多资料。 闲话少说……下面讲一下怎么安装和使用： 先说一下安装方法： 首先是要windows系统，Python要是3.5，3.6或3.7版本 ，并且安装了pip。只需在控制台执行 pip install geatpy 即可安装成功。或者到github上下载源码进行编译安装：https://github.com/geatpy-dev/geatpy 。推荐是直接用pip的方式安装。因为这样方便后续的更新。我为了方便运行demo代码以及查看源码和官方教程文档，因此另外在github上也下载了（但仍用pip方式安装）。 有些初学Python的读者反映还是不知道怎么安装，或者安装之后不知道怎么写代码。这里推荐安装Anaconda，它集成了Python的许多常用的运行库，比如Numpy、Scipy等。其内置的Spyder开发软件的风格跟Matlab类似，给人熟悉的感觉，更容易上手。 再说一下更新方法： Geatpy在持续更新。可以通过以下命令使电脑上的版本与官方最新版保持一致： pip install –upgrade geatpy 若在更新过程中遇到”–user”错误的问题，这是用pip进行安装时遇到的常见问题之一。意味着需要以管理员方式运行： pip install –user –upgrade geatpy Geatpy提供2种方式来使用进化算法求解问题。先来讲一下第一种最基本的实现方式：编写编程脚本。 编写脚本实现遗传算法： 以一个非常简单的单目标优化问题为例：求f(x)=xsin(10pi*x)+2.0 在 x∈[-1,2] 上的最大值。 直接编写脚本如下： “””demo.py””” import numpy as np import geatpy as ea # 导入geatpy库 import matplotlib.pyplot as plt import time “””============================目标函数============================””” defaim(x):# 传入种群染色体矩阵解码后的基因表现型矩阵 return x * np.sin(10 * np.pi * x) + 2.0 x = np.linspace(-1, 2, 200) plt.plot(x, aim(x)) # 绘制目标函数图像 “””============================变量设置============================””” x1 = [-1, 2] # 自变量范围 b1 = [1, 1] # 自变量边界 varTypes = np.array([0]) # 自变量的类型，0表示连续，1表示离散 Encoding = ‘BG’# ‘BG’表示采用二进制/格雷编码 codes = [1] # 变量的编码方式，2个变量均使用格雷编码 precisions =[4] # 变量的编码精度 scales = [0] # 采用算术刻度 ranges=np.vstack([x1]).T # 生成自变量的范围矩阵 borders=np.vstack([b1]).T # 生成自变量的边界矩阵 “””=========================遗传算法参数设置=========================””” NIND = 40; # 种群个体数目 MAXGEN = 25; # 最大遗传代数 FieldD = ea.crtfld(Encoding,varTypes,ranges,borders,precisions,codes,scales) # 调用函数创建区域描述器 Lind = int(np.sum(FieldD[0, :])) # 计算编码后的染色体长度 obj_trace = np.zeros((MAXGEN, 2)) # 定义目标函数值记录器 var_trace = np.zeros((MAXGEN, Lind)) # 定义染色体记录器，记录每一代最优个体的染色体 “””=========================开始遗传算法进化========================””” start_time = time.time() # 开始计时 Chrom = ea.crtbp(NIND, Lind) # 生成种群染色体矩阵 variable = ea.bs2real(Chrom, FieldD) # 对初始种群进行解码 ObjV = aim(variable) # 计算初始种群个体的目标函数值 best_ind = np.argmax(ObjV) # 计算当代最优个体的序号 开始进化 for gen in range(MAXGEN): FitnV = ea.ranking(-ObjV) # 根据目标函数大小分配适应度值(由于遵循目标最小化约定，因此最大化问题要对目标函数值乘上-1) SelCh=Chrom[ea.selecting('rws', FitnV, NIND-1), :] # 选择，采用'rws'轮盘赌选择 SelCh=ea.recombin('xovsp', SelCh, 0.7) # 重组(采用两点交叉方式，交叉概率为0.7) SelCh=ea.mutbin(Encoding, SelCh) # 二进制种群变异 把父代精英个体与子代合并 Chrom = np.vstack([Chrom[best_ind, :], SelCh]) variable = ea.bs2real(Chrom, FieldD) # 对育种种群进行解码(二进制转十进制) ObjV = aim(variable) # 求育种个体的目标函数值 记录 best_ind = np.argmax(ObjV) # 计算当代最优个体的序号 obj_trace[gen, 0] = np.sum(ObjV) / NIND # 记录当代种群的目标函数均值 obj_trace[gen, 1] = ObjV[best_ind] # 记录当代种群最优个体目标函数值 var_trace[gen, :] = Chrom[best_ind, :] # 记录当代种群最优个体的变量值 进化完成 end_time = time.time() # 结束计时 “””============================输出结果及绘图================================””” best_gen = np.argmax(obj_trace[:, [1]]) print(‘目标函数最大值：’, obj_trace[best_gen, 1]) # 输出目标函数最大值 variable = ea.bs2real(var_trace[[best_gen], :], FieldD) # 解码得到表现型 print(‘对应的决策变量值为：’) print(variable[0][0]) # 因为此处variable是一个矩阵，因此用[0][0]来取出里面的元素 print(‘用时：’, end_time - start_time) plt.plot(variable, aim(variable),’bo’) ea.trcplot(obj_trace, [[‘种群个体平均目标函数值’, ‘种群最优个体目标函数值’]]) 运行结果如下： 目标函数最大值： 3.850272716105895 对应的决策变量值为： 1.8505813776055176 用时： 0.02496051788330078 仔细查看上述代码，我们会发现Geatpy的书写风格与Matlab大同小异，有Matlab相关编程经验的基本上可以无缝转移到Python上利用Geatpy进行遗传算法程序开发。 Geatpy提供了详尽的API文档，比如要查看上面代码中的”ranking”函数是干什么的，可以在python中执行 import geatpy as ga help(ga.ranking) 即可看到”ranking”函数的相关使用方法。 另外官网上也有更多详尽的Geatpy教程：http://geatpy.com/index.php/details/ 利用框架实现遗传算法。 Geatpy提供开放的面向对象进化算法框架。即“问题类”+“进化算法模板类+种群类”。对于一些复杂的进化算法，如多目标进化优化、改进的遗传算法等，按照上面所说的编写脚本代码是非常麻烦的，而用框架的方法可以极大提高编程效率。 这里给出一个利用框架实现NSGA-II算法求多目标优化函数ZDT-1的帕累托前沿面的例子： 第一步：首先编写ZDT1的问题类，写在“MyProblem.py”文件中： -- coding: utf-8 -- “””MyProblem.py””” import numpy as np import geatpy as ea classMyProblem(ea.Problem):# 继承Problem父类 def__init__(self): name = 'ZDT1'# 初始化name（函数名称，可以随意设置） M = 2# 初始化M（目标维数） maxormins = [1] * M # 初始化maxormins（目标最小最大化标记列表，1：最小化该目标；-1：最大化该目标） Dim = 30# 初始化Dim（决策变量维数） varTypes = [0] * Dim # 初始化varTypes（决策变量的类型，0：实数；1：整数） lb = [0] * Dim # 决策变量下界 ub = [1] * Dim # 决策变量上界 lbin = [1] * Dim # 决策变量下边界 ubin = [1] * Dim # 决策变量上边界 调用父类构造方法完成实例化 ea.Problem.__init__(self, name, M, maxormins, Dim, varTypes, lb, ub, lbin, ubin) defaimFunc(self, pop):# 目标函数 Vars = pop.Phen # 得到决策变量矩阵 ObjV1 = Vars[:, 0] gx = 1 + 9 * np.sum(Vars[:, 1:30], 1) hx = 1 - np.sqrt(ObjV1 / gx) ObjV2 = gx * hx pop.ObjV = np.array([ObjV1, ObjV2]).T # 把结果赋值给ObjV defcalReferObjV(self):# 计算全局最优解作为目标函数参考值 N = 10000# 生成10000个参考点 ObjV1 = np.linspace(0, 1, N) ObjV2 = 1 - np.sqrt(ObjV1) globalBestObjV = np.array([ObjV1, ObjV2]).T return globalBestObjV 上面代码中，问题类的构造函数__init__()是用于定义与ZDT1测试问题相关的一些参数，如决策变量范围、类型、边界等等。aimFunc()是待优化的目标函数。calReferObjV()用来计算理论的全局最优解，这个理论最优解可以是通过计算得到的，也可以是通过导入外部文件的数据得到的，如果待求解的问题没有或尚不知道理论最优解是多少，则这个calReferObjV()函数可以省略不写。 第二步：在同一个文件夹下编写执行脚本，实例化上述问题类的对象，然后调用Geatpy提供的nsga2算法的进化算法模板(moea_NSGA2_templet)，最后结合理论全局最优解PF（即俗称的“真实前沿点”）通过计算GD、IGD、HV等指标来分析优化效果： -- coding: utf-8 -- import geatpy as ea # import geatpy from MyProblem import MyProblem “””================================实例化问题对象=============================””” problem = MyProblem() # 生成问题对象 “””==================================种群设置================================””” Encoding = ‘RI’# 编码方式 NIND = 50# 种群规模 Field = ea.crtfld(Encoding, problem.varTypes, problem.ranges, problem.borders) # 创建区域描述器 population = ea.Population(Encoding, Field, NIND) # 实例化种群对象（此时种群还没被初始化，仅仅是完成种群对象的实例化） “””================================算法参数设置===============================””” myAlgorithm = ea.moea_NSGA2_templet(problem, population) # 实例化一个算法模板对象` myAlgorithm.MAXGEN = 200# 最大进化代数 myAlgorithm.drawing = 1# 设置绘图方式（0：不绘图；1：绘制结果图；2：绘制过程动画） “””===========================调用算法模板进行种群进化=========================== 调用run执行算法模板，得到帕累托最优解集NDSet。NDSet是一个种群类Population的对象。 NDSet.ObjV为最优解个体的目标函数值；NDSet.Phen为对应的决策变量值。 详见Population.py中关于种群类的定义。 “”” NDSet = myAlgorithm.run() # 执行算法模板，得到非支配种群 NDSet.save() # 把结果保存到文件中 输出 print(‘用时：%f 秒’%(myAlgorithm.passTime)) print(‘评价次数：%d 次’%(myAlgorithm.evalsNum)) print(‘非支配个体数：%d 个’%(NDSet.sizes)) print(‘单位时间找到帕累托前沿点个数：%d 个’%(int(NDSet.sizes // myAlgorithm.passTime))) 计算指标 PF = problem.getReferObjV() # 获取真实前沿，详见Problem.py中关于Problem类的定义 if PF isnotNoneand NDSet.sizes != 0: GD = ea.indicator.GD(NDSet.ObjV, PF) # 计算GD指标 IGD = ea.indicator.IGD(NDSet.ObjV, PF) # 计算IGD指标 HV = ea.indicator.HV(NDSet.ObjV, PF) # 计算HV指标 Spacing = ea.indicator.Spacing(NDSet.ObjV) # 计算Spacing指标 print('GD',GD) print('IGD',IGD) print('HV', HV) print('Spacing', Spacing) “””=============================进化过程指标追踪分析============================””” if PF isnotNone: metricName = [['IGD'], ['HV']] [NDSet_trace, Metrics] = ea.indicator.moea_tracking(myAlgorithm.pop_trace, PF, metricName, problem.maxormins) 绘制指标追踪分析图 ea.trcplot(Metrics, labels = metricName, titles = metricName) 运行结果如下： 种群信息导出完毕。 用时：0.503653 秒 评价次数：10000 次 非支配个体数：50 个 单位时间找到帕累托前沿点个数：99 个 GD 0.0011025023611967554 IGD 0.15098973339777405 HV 0.624906599521637 Spacing 0.009326105831814594 正在进行进化追踪指标分析，请稍后…… 指标追踪分析结束，进化记录器中有效进化代数为: 200 上述代码中已经对各个流程进行了详细的注释。其中进化算法的核心逻辑是写在进化算法模板内部的，可前往查看对应的源代码。此外，我们还可以参考Geatpy进化算法模板的源代码来自定义算法模板，以实现丰富多样的进化算法，如各种各样的改进的进化算法等： 最后值得注意的是：目标函数aimFunc()那一块地方最容易写错。aimFunc()的输入参数pop是一个种群对象（有关种群对象可以查看工具箱中的Population.py类源码，或者查看Geatpy数据结构）。pop.Phen是种群的表现型矩阵，意思是种群染色体解码后得到的表现型矩阵，它对应的即为问题类中的决策变量。Phen是一个矩阵，每一行对应种群中的一个个体的表现型。在计算目标函数时，可以把这个Phen拆成一行一行，即逐个逐个个体地计算目标函数值，然后再拼成一个矩阵赋值给pop对象的ObjV属性。也可以利用Numpy的矩阵化计算来“一口气”把种群所有个体的目标函数值计算出来。无论采用的是哪种计算方法，最后得到的目标函数值是要保存在pop对象的ObjV属性中的，这个ObjV是“种群目标函数值矩阵”，每一行对应一个个体的所有目标函数值，每一列对应一个目标。比如： 它表示有种群3个个体，待优化目标有2个。 后面的博客将深入理解Geatpy的数据结构、进化算法框架的用法与扩展，以及探讨框架的核心——进化算法模板的实现。还会讲一些使用Geatpy解决问题的案例。欢迎继续跟进~感谢！","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/(4%E6%9D%A1%E6%B6%88%E6%81%AF)Python%E9%81%97%E4%BC%A0%E5%92%8C%E8%BF%9B%E5%8C%96%E7%AE%97%E6%B3%95%E6%A1%86%E6%9E%B6%EF%BC%88%E4%B8%80%EF%BC%89Geatpy%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8_jazzbin%E7%9A%84%E5%8D%9A%E5%AE%A2-CSDN%E5%8D%9A%E5%AE%A2_geatpy/"},{"title":"","text":"上一篇讲了Geatpy的快速入门：https://blog.csdn.net/qq_33353186/article/details/82014986 但是光是几个例子是远远不能熟练掌握python遗传和进化算法编程的，得进一步了解其原理以及API。 Geatpy提供面向对象的简单封装的开放式进化算法框架，可以方便、自由地与其他算法或项目相结合。Geatpy的文件结构如下图所示： 其中“core”文件夹里面全部为Geatpy工具箱的内核函数；“templates”文件夹存放的是Geatpy的进化算法模板；“testbed”是进化算法的测试平台，内含多种单目标优化、多目标优化、组合优化的测试集。“demo”文件夹中包含了应用Geatpy工具箱求解问题的案例。“operators”是2.2.2版本之后新增的，里面存放着面向对象的重组和变异算子类，这些重组和变异算子类通过调用“core”文件夹下的重组和变异算子来执行相关的操作。 Geatpy 的面向对象进化算法框架有四个大类：Algorithm(算法模板顶级父类)、Population(种群类)、PsyPopulation(多染色体种群类) 和Problem(问题类)，分别存放在“Algorithm.py”、“Population.py”、“Problem.py”文件中。其UML 类图如下所示： Geatpy 的面向对象进化算法框架有四个大类：Algorithm(算法模板顶级父类)、Population(种群类)、PsyPopulation(多染色体种群类) 和Problem(问题类)，分别存放在“Algorithm.py”、“Population.py”、“Problem.py”文件中。其UML 类图如下所示： Problem类定义了与问题相关的一些信息，如问题名称name、优化目标的维数M、决策变量的个数Dim、决策变量的范围ranges、决策变量的边界borders等。maxormins是一个记录着各个目标函数是最小化抑或是最大化的list类型列表，其中元素为1表示对应的目标是最小化目标；为-1表示对应的是最大化目标。例如M=3，maxormins=[1,-1,1]，此时表示有三个优化目标，其中第一、第三个是最小化目标，第二个是最大化目标。varTypes是一个记录着决策变量类型的行向量，其中的元素为0表示对应的决策变量是连续型变量；为1表示对应的是离散型变量。待求解的目标函数定义在aimFunc()的函数中。calReferObjV()函数则用于计算或读取目标函数参考值（一般用理论上的目标函数的最优值作为参考值），该参考值可以用于后续的指标分析。在实际使用时，不是直接在Problem类的文件中修改相关代码来使用的，而是通过定义一个继承Problem的子类来完成对问题的定义的。这些在后面的章节中会详细讲述。getReferObjV()是Problem父类中已经实现了的一个函数，它先尝试读取特定文件夹中的目标函数值参考数据，如果读取不到，则调用calReferObjV()进行计算。对于Problem类中各属性的详细含义可查看Problem.py源码。 Population类是一个表示种群的类。一个种群包含很多个个体，而每个个体都有一条染色体(若要用多染色体，则使用PsyPopulation类)。除了染色体外，每个个体都有一个译码矩阵Field(或俗称区域描述器)来标识染色体应该如何解码得到表现型，同时也有其对应的目标函数值以及适应度。种群类就是一个把所有个体的这些数据统一存储起来的一个类。比如里面的Chrom是一个存储种群所有个体染色体的矩阵，它的每一行对应一个个体的染色体；ObjV是一个目标函数值矩阵，每一行对应一个个体的所有目标函数值，每一列对应一个目标。对于Population类中各属性的详细含义可查看Population.py源码以及下一章“Geatpy数据结构”。 PsyPopulation类是继承了Population的支持多染色体混合编码的种群类。一个种群包含很多个个体，而每个个体都有多条染色体。用Chroms列表存储所有的染色体矩阵(Chrom)；Encodings列表存储各染色体对应的编码方式(Encoding)；Fields列表存储各染色体对应的译码矩阵(Field)。 Algorithm类是进化算法的核心类。它既存储着跟进化算法相关的一些参数，同时也在其继承类中实现具体的进化算法。比如Geatpy中的moea_NSGA3_templet.py是实现了多目标优化NSGA-III算法的进化算法模板类，它是继承了Algorithm类的具体算法的模板类。关于Algorithm类中各属性的含义可以查看Algorithm.py源码。这些算法模板通过调用Geatpy工具箱提供的进化算法库函数实现对种群的进化操作，同时记录进化过程中的相关信息，其基本层次结构如下图： Geatpy工具箱提供了大量的跟进化算法有关的内核函数，涵盖了单目标优化、多目标优化、组合优化等方面的众多算子，同时提供指标评价、绘图等功能性函数。下图展示了Geatpy的函数调用关系。中心是进化算法模板，它调用高级的运算函数(selecting, recombin, mutate)来实现进化优化。高级函数进一步调用相关的低级运算函数(即实现选择、交叉、变异等底层算法的函数)。这种层级调用关系使Geatpy的结构十分清晰，更重要的是，你可以自定义更多低级运算函数来轻松自由地扩展Geatpy。 这些库函数具体有： 1. 与初始化种群相关的函数 • crtfld (生成译码矩阵，俗称“区域描述器”) • crtbp (创建二进制种群染色体矩阵) • crtip (创建元素是整数的种群染色体矩阵) • crtpp (创建排列编码种群染色体矩阵) • crtrp (创建元素是实数的种群染色体矩阵) • meshrng (网格化决策变量范围) 进化迭代相关函数 当完成了种群染色体的初始化后，就可以进行进化迭代了。这部分是在进化算法模 板里调用。迭代过程中包括： • 调用ranking 或scaling 等计算种群适应度。 • 调用selecting 进行选择操作(也可以直接调用低级选择函数)。 • 调用recombin 进行重组操作(也可以直接调用低级重组函数)。 • 调用mutate 进行重组操作(也可以直接调用低级变异函数)。 适应度计算 • ranking (基于等级划分的适应度分配计算) • scaling (线性尺度变换适应度计算) • indexing (指数尺度变换适应度计算) • powing (幂尺度变换适应度计算) 对于多目标进化优化，由于各种多目标优化算法所采用的适应度计算方法门类有很多，因此此时的适应度计算交由继承了Algorithm 的具体算法模板类中实现，详见相关源码。 选择 selecting 是高级选择函数，它调用下面的低级选择函数： • dup (Duplication，基于适应度排序的直接复制选择) • ecs (Elite Copy Selection，精英复制选择) • etour (精英保留锦标赛选择) • otos (One-to-One Survivor Selection，一对一生存者选择) • rcs (Random Compensation Selection，随机补偿选择) • rps (Random Permutation Selection，随机排列选择) • rws (Roulette Wheel Selection，轮盘赌选择) • sus (Stochastic Universal Sampling，随机抽样选择) • tour (Tournament，锦标赛选择) • urs (Uncommitted Random Selection，无约束随机选择) 重组(包括交叉) 交叉是重组的一部分。 • recdis (离散重组) • recint (中间重组) • reclin (线性重组) • recndx (正态分布交叉) • recsbx (模拟二进制交叉) • xovbd (二项式分布交叉) • xovdp (两点交叉) • xovexp (指数交叉) • xovmp (多点交叉) • xovox (顺序交叉) • xovpmx (部分匹配交叉) • xovsec (洗牌指数交叉) • xovsh (洗牌交叉) • xovsp (单点交叉) • xovud (均匀分布交叉) 注意：所有重组算子都不会检查重组结果是否满足所设边界范围。下面的变异算子则是内置对边界范围的检查和修复。因此如果在进化算法中要单是使用重组算子，则需要调用“ea.boundfix”函数进行边界修复。详见“help(ea.boundfix)”。 在重组过程中，种群的前一半个体会与后一半个体的染色体按照个体顺序进行一一配对。这些重组算子可通过设置传入参数“Half”的值为True，来使得重组后只保留一半的个体，此时将保留上面所说的一一配对重组后的第一条染色体。 Geatpy2.2.2版本之后在进化算法框架中新增了面向对象的Recombination(重组算子接口)，上述的低级重组算子均有与之对应的重组算子类来进行参数的设置及调用，这些新增的类命名为首字母大写的对应低级重组算子的名称： • Recdis (离散重组算子类) • Recint (中间重组算子类) • Reclin (线性重组算子类) • Recndx (正态分布交叉算子类) • Recsbx (模拟二进制交叉算子类) • Xovbd (二项式分布交叉算子类) • Xovdp (两点交叉算子类) • Xovexp (指数交叉算子类) • Xovmp (多点交叉算子类) • Xovox (顺序交叉算子类) • Xovpmx (部分匹配交叉算子类) • Xovsec (洗牌指数交叉算子类) • Xovsh (洗牌交叉算子类) • Xovsp (单点交叉算子类) • Xovud (均匀分布交叉算子类) 在调用某个重组算子时，可以直接调用低级重组算子进行重组；也可以利用高级重组算子recombine 通过指定低级重组算子的名称来调用低级重组算子进行重组，如recombine(’xovdp’, …)；也可以通过实例化重组算子类的对象，然后执行该对象的do()函数进行重组，例如：recOper = Xovdp(…)，recOper.do(…)。具体结构详见这些类的源码。 突变 mutate 是高级的突变函数，它调用下面的低级突变函数： • mutbga (Mutation for Breeder Genetic Algorithm，Breeder GA 算法突变算子) • mutbin (Mutation for Binary Chromosomes，二进制变异算子) • mutde (Mutation for Differential Evolution，差分变异算子) • mutgau (Gaussian Mutation，高斯突变算子) • mutinv (Invertion Mutation，染色体片段逆转变异算子) • mutmove (Mutation by Moving，染色体片段移位变异算子) • mutpolyn (Polynomial Mutation，多项式变异) • mutpp (Mutation of Permutation Chromosomes，排列编码变异算子) • mutswap (Two Point Swapping Mutation，染色体两点互换变异算子) • mutuni (Uniform Mutation，均匀变异算子) 注意：对于mutbga、mutde、mutgau、mutpolyn、mutuni，变异是先按实数值来变异，然后对于标记了是离散型变量进行四舍五入。因此结果往往会是浮点“float”类型的，此时如果要把这些离散值用作其他变量的下标，需要对其进行强制类型转换。 Geatpy2.2.2 版本之后在进化算法框架中新增了面向对象的Mutation(变异算子算子 接口)，上述的低级变异算子均有与之对应的变异算子类来进行参数的设置及调用，这 些新增的类命名为首字母大写的对应低级变异算子的名称： • Mutbga (Mutation for Breeder Genetic Algorithm，Breeder GA 算法突变算子类) • Mutbin (Mutation for Binary Chromosomes，二进制变异算子类) • Mutde (Mutation for Differential Evolution，差分变异算子类) • Mutgau (Gaussian Mutation，高斯突变算子类) • Mutinv (Invertion Mutation，染色体片段逆转变异算子类) • Mutmove (Mutation by Moving，染色体片段移位变异算子类) • Mutpolyn (Polynomial Mutation，多项式变异类) • Mutpp (Mutation of Permutation Chromosomes，排列编码变异算子类) • Mutswap (Two Point Swapping Mutation，染色体两点互换变异算子类) • Mutuni (Uniform Mutation，均匀变异算子类) 在调用某个变异算子时，可以直接调用低级变异算子进行重组；也可以利用高级变异算子mutate 通过指定低级变异算子的名称来调用低级变异算子进行重组，如mutate(’mutgau’, …)；也可以通过实例化变异算子类的对象，然后执行该对象的do() 函数进行变异，例如：mutOper = Mutgau(…)，mutOper.do(…)。具体结构详见这些类的源码。 染色体解码 对于二进制/格雷编码的种群，我们要对其进行解码才能得到其表现型。 • bs2int (二进制/格雷码转整数) • bs2real (二进制/格雷码转实数) • bs2ri (二进制/格雷码转实整数) 数据可视化 • moeaplot (多目标优化目标空间绘图函数) • soeaplot (单目标优化绘图函数) • trcplot (进化记录器绘图函数) • varplot (决策变量绘图函数) 如果是在iPython 控制台中调用可视化绘图函数（例如使用Spyder 开发工具），一般图像会默认显示在控制台中。此时可以在控制台下执行%matplotlib 来设置把图像显示在一个独立窗口中。 多目标相关 • awGA (适应性权重法多目标聚合函数) • rwGA (随机权重法多目标聚合函数) • ndsortDED (基于排除法的帕累托层级划分) • ndsortESS (基于ENS_SS 的快速非支配层级划分) • ndsortTNS (基于T_ENS 的快速非支配层级划分) • crtgp (创建在单位超空间中均匀的网格点集) • crtup (创建在单位超平面内均匀分布的点集) • crowdis (拥挤距离计算) • refgselect (利用参考点引导的个体选择) • refselect (基于参考点的“入龛”个体选择) 模板相关 • soea_DE_best_1_bin_templet (差分进化DE/best/1/bin 算法模板) • soea_DE_best_1_L_templet (差分进化DE/best/1/L 算法模板) • soea_DE_rand_1_bin_templet (差分进化DE/rand/1/bin 算法模板) • soea_DE_rand_1_L_templet (差分进化DE/rand/1/L 算法模板) • soea_DE_targetToBest_1_bin_templet (差分进化DE/targetToBest/1/bin 算法模板) • soea_DE_targetToBest_1_L_templet (差分进化DE/targetToBest/1/L 算法模板) • soea_ES_1_plus_1_templet ((1+1) 进化策略模板) • soea_EGA_templet (精英保留的遗传算法模板) • soea_SEGA_templet (增强精英保留的遗传算法模板) • soea_SGA_templet (最简单、最经典的遗传算法模板) • soea_GGAP_SGA_templet (带代沟的简单遗传算法模板) • soea_studGA_templet (种马遗传算法模板) • soea_steady_GA_templet (稳态遗传算法模板) • soea_psy_EGA_templet (精英保留的多染色体遗传算法模板) • soea_psy_SEGA_templet (增强精英保留的多染色体遗传算法模板) • soea_psy_SGA_templet (最简单、最经典的多染色体遗传算法模板) • soea_psy_GGAP_SGA_templet (带代沟的多染色体简单遗传算法模板) • soea_psy_studGA_templet (多染色体种马遗传算法模板) • soea_psy_steady_GA_templet (多染色体稳态遗传算法模板) • moea_awGA_templet (基于awGA 算法的多目标进化算法模板) • moea_NSGA2_DE_templet (基于NSGA-II-DE 算法的多目标进化算法模板) • moea_NSGA2_archive_templet (带全局存档的多目标进化NSGA-II 算法模板) • moea_NSGA2_templet (基于NSGA-II 算法的多目标进化算法模板) • moea_NSGA3_DE_templet (基于NSGA-III-DE 算法的多目标进化算法模板) • moea_NSGA3_templet (基于NSGA-III 算法的多目标进化算法模板) • moea_RVEA_templet (基于RVEA 算法的多目标进化算法模板) • moea_RVEA_RES_templet (基于带参考点再生策略的RVEA 算法的多目标进化算法 模板) • moea_psy_awGA_templet (基于awGA 算法的多染色体多目标进化算法模板) • moea_psy_NSGA2_archive_templet (带全局存档的多染色体多目标进化NSGA-II 算 法模板) • moea_psy_NSGA2_templet (基于NSGA-II 算法的多染色体多目标进化算法模板) • moea_psy_NSGA3_templet (基于NSGA-III 算法的多染色体多目标进化算法模板) • moea_psy_RVEA_templet (基于RVEA 算法的多染色体多目标进化算法模板) • moea_psy_RVEA_RES_templet (基于带参考点再生策略的多染色体RVEA 算法的多 目标进化算法模板) 详细API文档可以在Python控制台中执行help(模块名)查看。 下面讲一下Geatpy中重要的数据结构： Geatpy的大部分数据都是存储在numpy的array数组里的，numpy中另外还有matrix的矩阵类型，但我们不使用它，于是本文档默认array就是存储“矩阵”(也可以存储一维向量，接下来会谈到)。其中有一些细节需要特别注意：numpy的array在表示行向量时会有2种不同的结构，一种是1行n列的矩阵，它是二维的；一种是纯粹的一维行向量。因此，在Geatpy教程中会严格区分这两种概念，我们称前者为“行矩阵”，后者为“行向量”。Geatpy中不会使用超过二维的array。 例如有一个行向量x，其值为[1 2 3 4 5 6]，那么，用print(x.shape)输出其规格，可以得到(6,)，若x是行矩阵而不是行向量，那么x的规格就变成是(1,6)而不再是(6,)。 在numpy的array类型中，实际上没有“列向量”的概念。所谓“向量”是指一维的，但用numpy的array表示列向量时，它实际上是二维的，只不过只有1列。我们不纠结于这个细节，统一仍用“列向量”来称呼这种只有1列的矩阵。 在编程中，如果对numpy的array感到疑惑，你可以用”print(变量.shape)”语句来输出其维度信息，以确定其准确的维度。 种群染色体的数据结构： Geatpy中，种群染色体是一个numpy的array类型的二维矩阵，一般用Chrom命名，每一行对应一个个体的一条染色体。若要采用多染色体，则可以创建多个相关联的Chrom即可。默认一个Chrom的一行对应的只有一条染色体。 我们一般把种群的规模(即种群的个体数)用Nind命名；把种群个体的染色体长度用$Lind$命名，则Chrom的结构如下所示： 种群表现型的数据结构： 种群表现型的数据结构跟种群染色体基本一致，也是numpy的array类型。我们一般用Phen来命名。它是种群染色体矩阵Chrom经过解码后得到的基因表现型矩阵，每一行对应一个个体，每一列对应一个决策变量。若用Nvar表示变量的个数，则种群表现型矩阵Phen的结构如下图： Phen的值与采用的解码方式有关。Geatpy提供二进制/格雷码编码转十进制整数或实数的解码方式。另外，在Geatpy也可以使用不需要解码的“实值编码”种群，这种种群的染色体的每一位就对应着决策变量的实际值，即这种编码方式下Phen等价Chrom。 这里需要注意的是：我们可以用不同的方式去解码一个种群染色体，得到的结果往往是不同的。 目标函数值的数据结构： Geatpy采用numpy的array类型矩阵来存储种群的目标函数值。一般命名为ObjV，每一行对应每一个个体，因此它拥有与Chrom相同的行数；每一列对应一个目标函数，因此对于单目标函数，ObjV会只有1列；而对于多目标函数，ObjV会有多列。例如ObjV 是一个二元函数值矩阵： 其第一列就代表目标函数f1的目标函数值，第二列代表目标函数f2的目标函数值。 个体适应度的数据结构： Geatpy采用列向量来存储种群个体适应度。一般命名为FitnV，它同样是numpy的array类型，每一行对应种群矩阵的每一个个体。因此它拥有与Chrom相同的行数。 Geatpy中的适应度遵循“最小适应度为0”的约定。 个体违反约束程度的数据结构 Geatpy采用Numpy array类型的矩阵CV(Constraint Violation Value)来存储种群个体违反各个约束条件的程度。一般命名为$CV$，它的每一行对应种群的每一个个体，因此它拥有与$Chrom$相同的行数；每一列对应一个约束条件，因此若有一个约束条件，那么CV矩阵就会只有一列，如有多个约束条件，CV矩阵就会有多列。如果设有$num$个约束，则CV矩阵的结构如下图所示： CV矩阵的某个元素若小于或等于0，则表示该元素对应的个体满足对应的约束条件。若大于0，则表示违反约束条件，在大于0的条件下值越大，该个体违反该约束的程度就越高。Geatpy提供两种处理约束条件的方法，一种是罚函数法，另一种是可行性法则。在使用可行性法则处理约束条件时，需要用到CV矩阵。具体用法可详见后面两章中关于使用可行性法则来处理约束条件的相关说明。 译码矩阵的数据结构： Geatpy使用译码矩阵(俗称区域描述器)来描述种群染色体的特征，如染色体中的每一位元素所表达的决策变量的范围、是否包含范围的边界、采用二进制还是格雷码、是否使用对数刻度、染色体解码后所代表的决策变量的是连续型变量还是离散型变量等等。 在只使用工具箱的库函数而不使用Geatpy提供的面向对象的进化算法框架时，译码矩阵可以单独使用。若采用Geatpy提供的面向对象的进化算法框架时，译码矩阵可以与一个存储着种群染色体编码方式的字符串Encoding来配合使用。目前Geatpy中有三种Encoding，分别为： • ’BG’ (二进制/格雷码) • ’RI’ (实整数编码，即实数和整数的混合编码) • ’P’ (排列编码，即染色体每一位的元素都是互异的) 这里有个小小的归类值得注意：’RI’和’P’编码的染色体都不需要解码，染色体上的每一位本身就代表着决策变量的真实值，因此“实整数编码”和“排列编码”可统称为“实值编码”。 对于$Encoding = ‘BG’$的种群，使用8行$n$列的矩阵FieldD来作为译码矩阵，$n$是染色体所表达的决策变量个数。FieldD的结构如下： lens, lb, ub, codes, scales, lbin, ubin, varTypes 均为长度等于决策变量个数的行向 量。 其中，lens 包含染色体的每个子染色体的长度。sum(lens) 等于染色体长度。 lb 和ub 分别代表每个决策变量的上界和下界。 codes 指明染色体子串用的是二进制编码还是格雷编码。codes[i] = 0 表示第i 个变量使用的是标准二进制编码；codes[i] = 1 表示使用格雷编码。 scales 指明每个子串用的是算术刻度还是对数刻度。scales[i] = 0 为算术刻度，scales[i] = 1 为对数刻度。对数刻度可以用于变量的范围较大而且不确定的情况，对于大范围的参数边界，对数刻度让搜索可用较少的位数，从而减少了遗传算法的计算量。（注意：当某个变量是对数刻度时，其取值范围中不能有0，即要么上下界都大于0，要么上下界都小于0。） lbin 和ubin 指明了变量是否包含其范围的边界。0 表示不包含边界；1 表示包含边界。 varTypes 指明了决策变量的类型，元素为0 表示对应位置的决策变量是连续型变量；1 表示对应的是离散型变量。 例如： 它表示待解码的种群染色体矩阵Chrom解码后可以表示成3个决策变量，每个决策变量的取值范围分别是[1,10], [2,9], [3,15]。其中第一第二个变量采用的是二进制编码，第三个变量采用的是格雷编码，且第一、第三个决策变量为连续型变量；第二个为离散型遍历。若Chrom为: 则可以执行以下语句进行解码： import geatpy as ea Phen = ea.bs2ri(Chrom, FieldD) 解码后得到的种群表现型矩阵为： 对于实值编码(即前面所说的不需要解码的编码方式) 的种群，使用3 行n 列的矩阵FieldDR 来作为译码矩阵，n 是染色体所表达的控制变量个数。FieldDR 的结构如下： 这种结构的译码矩阵适用于Encoding 为’RI’(实整数编码) 和’P’(排列编码) 的种群染色体的解码。其中’P’(排列编码) 的译码矩阵会稍微有一点特殊之处：它要求FieldDR的第一行所有元素都相等，第二行所有元素也都相等，且第三行元素均为1(这是因为排列编码本身变量是离散的)。此时若记FieldDR 有Lind 列(即染色体长度为Lind)，则要求上界- 下界+ 1 ≥ Lind。例如： 它若是作为排列编码种群的译码矩阵，则表示种群染色体是由集合{2,3,4,5,6,7,8,9,10}中任意抽取7 个数出来的全排列，比如Chrom 为： 上面的FieldD 和FieldDR 都是numpy 的array 类型，可统称为“Field”。可以直接用代码创建，例如： import numpy as np FieldDR=np.array([[-3, -4, 0, 2], [ 2, 3, 2, 2], [ 0, 0, 0, 0]]) 也可以用Geatpy 内置的crtfld 函数来方便地快速生成区域描述器，其详细用法可执行help(crtfld) 或查看API 文档。 进化追踪器的数据结构： 在使用Geatpy 进行进化算法编程时，常常建立一个进化追踪器(如pop_trace) 来记录种群在进化的过程中各代的最优个体，尤其是采用无精英保留机制时，进化追踪器帮助我们记录种群在进化的“历史长河”中产生过的最优个体。待进化完成后，再从进化追踪器中挑选出“历史最优”的个体。这种进化记录器有多种，其中一种是numpy 的array 类型的，结构如下： 其中MAXGEN 是种群进化的代数。trace 的每一列代表不同的指标，比如第一列记录各代种群的最佳目标函数值，第二列记录各代种群的平均目标函数值……trace 的每一行对应每一代，如第一行代表第一代，第二行代表第二代…… 另外一种进化记录器是一个列表，列表中的每一个元素都是一个拥有相同数据类型的数据。比如在Geatpy 的面向对象进化算法框架中的pop_trace，它是一个列表，列表中的每一个元素都是历代的种群对象。 种群结构 1） Population 类 在Geatpy 提供的面向对象进化算法框架中，种群类(Population) 是一个存储着与种群个体相关信息的类。它有以下基本属性： sizes : int - 种群规模，即种群的个体数目。 Lind : int - 种群染色体长度。 Encoding : str - 染色体编码方式。 Field : array - 译码矩阵，可以是FieldD或FieldDR。 Chrom : array - 种群染色体矩阵，每一行对应一个个体的一条染色体。 ObjV : array - 种群目标函数值矩阵。 FitnV : array - 种群个体适应度列向量。 CV : array - 种群个体违反约束条件程度的矩阵。 Phen : array - 种群表现型矩阵。 可以直接对种群对象进行提取个体、个体合并等操作，比如pop1和pop2是两个种群对象，则通过语句“pop3 = pop1 + pop2”，即可把两个种群的个体合并，得到一个新的种群。在合并的过程中，实际上是把种群的各个属性进行合并，然后用合并的数据来生成一个新的种群(详见Population.py)。又比如执行语句“pop3 = pop1[[0]]”，可以把种群的第0号个体抽取出来，得到一个新的只有一个个体的种群对象pop3。值得注意的是，种群的这种个体抽取操作要求下标必须为列表或是Numpy array类型的行向量，不能是标量(详见Population.py)。 易错注意：在Geatpy中，必要地对种群对象的这些成员属性进行合法性检查是必要的，但过多的检查会在一定程度上降低框架的性能。其中最容易使得种群对象成员属性出现异常的地方在于目标函数值矩阵ObjV以及CV矩阵的生成。在Geatpy中，ObjV和CV是在Problem问题类的目标函数接口aimFunc()中计算生成的，无论中间过程它们具体是如何计算的，计算得到的结果必须满足：ObjV和CV都是Numpy array类型矩阵，且行数等于种群的个体数目。ObjV的每一行对应一个个体，每一列对应一个优化目标。CV矩阵的每一行也是对应一个个体，而每一列对应一个约束条件。根据Geatpy数据结构可知，种群对象中的Chrom、ObjV、FitnV、CV和Phen都是Numpy array类型的行数等于种群规模sizes的矩阵，即这些成员属性的每一行都跟种群的每一个个体是一一对应的。Geatpy框架在运行过程中所抛出大多数异常都是由于这些变量不合法所致。此时可以使用“shape”来输出变量的维度信息，比如： print(pop.sizes) print(pop.Chrom.shape) print(pop.ObjV.shape) print(pop.CV.shape) 其中pop为一个种群对象。 2）PsyPopulation类 PsyPopulation类是Population的子类，它提供Population类所不支持的多染色体混合编码。它有以下基本属性： sizes : int - 种群规模，即种群的个体数目。 ChromNum : int - 染色体的数目，即每个个体有多少条染色体。 Linds : list - 存储种群各染色体长度的列表。 Encodings : list - 存储各染色体编码方式的列表。 Fields : list - 存储各染色体对应的译码矩阵的列表。 Chroms : list - 存储种群各染色体矩阵的列表。 ObjV : array - 种群目标函数值矩阵。 FitnV : array - 种群个体适应度列向量。 CV : array - 种群个体违反约束条件程度的矩阵。 Phen : array - 种群表现型矩阵。 可见PsyPopulation类基本与Population类一样，不同之处是采用Linds、Encodings、Fields和Chroms分别存储多个Lind、Encoding、Field和Chrom。 PsyPopulation类的对象往往与带“psy”字样的进化算法模板配合使用，以实现多染色体混合编码的进化优化。 在后面我将详细阐述如何使用Geatpy提供的面向对象进化算法框架的算法模板来实现使用进化算法求解问题。 欢迎继续跟进，感谢！","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/(4%E6%9D%A1%E6%B6%88%E6%81%AF)Python%E9%81%97%E4%BC%A0%E5%92%8C%E8%BF%9B%E5%8C%96%E7%AE%97%E6%B3%95%E6%A1%86%E6%9E%B6%EF%BC%88%E4%BA%8C%EF%BC%89Geatpy%E5%BA%93%E5%87%BD%E6%95%B0%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84_jazzbin%E7%9A%84%E5%8D%9A%E5%AE%A2-CSDN%E5%8D%9A%E5%AE%A2_geatpy2/"},{"title":"","text":"行内与独行 上标、下标与组合 汉字、字体与格式 占位符 定界符与组合 四则运算 高级运算 逻辑运算 集合运算 数学符号 希腊字母 行内与独行 行内公式：将公式插入到本行内，符号：$公式内容$，如：$xyz$ 独行公式：将公式插入到新的一行内，并且居中，符号：$$公式内容$$，如：$$xyz$$ 上标、下标与组合 上标符号，符号：^，如：$x^4$ 下标符号，符号：_，如：$x_1$ 组合符号，符号：{}，如：${16}{8}O{2+}{2}$ 汉字、字体与格式 汉字形式，符号：\\mbox{}，如：$V_{\\mbox{初始}}$ 字体控制，符号：\\displaystyle，如：$\\displaystyle \\frac{x+y}{y+z}$ 下划线符号，符号：\\underline，如：$\\underline{x+y}$ 标签，符号\\tag{数字}，如：$\\tag{11}$ 上大括号，符号：\\overbrace{算式}，如：$\\overbrace{a+b+c+d}^{2.0}$ 下大括号，符号：\\underbrace{算式}，如：$a+\\underbrace{b+c}_{1.0}+d$ 上位符号，符号：\\stacrel{上位符号}{基位符号}，如：$\\vec{x}\\stackrel{\\mathrm{def}}{=}{x_1,\\dots,x_n}$ 占位符 两个quad空格，符号：\\qquad，如：$x \\qquad y$ quad空格，符号：\\quad，如：$x \\quad y$ 大空格，符号\\，如：$x \\ y$ 中空格，符号:，如：$x : y$ 小空格，符号,，如：$x , y$ 没有空格，符号``，如：$xy$ 紧贴，符号!，如：$x ! y$ 定界符与组合 括号，符号：（）\\big(\\big) \\Big(\\Big) \\bigg(\\bigg) \\Bigg(\\Bigg)，如：$（）\\big(\\big) \\Big(\\Big) \\bigg(\\bigg) \\Bigg(\\Bigg)$ 中括号，符号：[]，如：$[x+y]$ 大括号，符号：{ }，如：${x+y}$ 自适应括号，符号：\\left \\right，如：$\\left(x\\right)$，$\\left(x{yz}\\right)$ 组合公式，符号：{上位公式 \\choose 下位公式}，如：${n+1 \\choose k}={n \\choose k}+{n \\choose k-1}$ 组合公式，符号：{上位公式 \\atop 下位公式}，如：$\\sum_{k_0,k_1,\\ldots&gt;0 \\atop k_0+k_1+\\cdots=n}A_{k_0}A_{k_1}\\cdots$ 四则运算 加法运算，符号：+，如：$x+y=z$ 减法运算，符号：-，如：$x-y=z$ 加减运算，符号：\\pm，如：$x \\pm y=z$ 减甲运算，符号：\\mp，如：$x \\mp y=z$ 乘法运算，符号：\\times，如：$x \\times y=z$ 点乘运算，符号：\\cdot，如：$x \\cdot y=z$ 星乘运算，符号：\\ast，如：$x \\ast y=z$ 除法运算，符号：\\div，如：$x \\div y=z$ 斜法运算，符号：/，如：$x/y=z$ 分式表示，符号：\\frac{分子}{分母}，如：$\\frac{x+y}{y+z}$ 分式表示，符号：{分子} \\voer {分母}，如：${x+y} \\over {y+z}$ 绝对值表示，符号：||，如：$|x+y|$ 高级运算 平均数运算，符号：\\overline{算式}，如：$\\overline{xyz}$ 开二次方运算，符号：\\sqrt，如：$\\sqrt x$ 开方运算，符号：\\sqrt[开方数]{被开方数}，如：$\\sqrt[3]{x+y}$ 对数运算，符号：\\log，如：$\\log(x)$ 极限运算，符号：\\lim，如：$\\lim^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$ 极限运算，符号：\\displaystyle \\lim，如：$\\displaystyle \\lim^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$ 求和运算，符号：\\sum，如：$\\sum^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$ 求和运算，符号：\\displaystyle \\sum，如：$\\displaystyle \\sum^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$ 积分运算，符号：\\int，如：$\\int^{\\infty}_{0}{xdx}$ 积分运算，符号：\\displaystyle \\int，如：$\\displaystyle \\int^{\\infty}_{0}{xdx}$ 微分运算，符号：\\partial，如：$\\frac{\\partial x}{\\partial y}$ 矩阵表示，符号：\\begin{matrix} \\end{matrix}，如：$\\left[ \\begin{matrix} 1 &amp;2 &amp;\\cdots &amp;4\\5 &amp;6 &amp;\\cdots &amp;8\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots\\13 &amp;14 &amp;\\cdots &amp;16\\end{matrix} \\right]$ 逻辑运算 等于运算，符号：=，如：$x+y=z$ 大于运算，符号：&gt;，如：$x+y&gt;z$ 小于运算，符号：&lt;，如：$x+y 大于等于运算，符号：\\geq，如：$x+y \\geq z$ 小于等于运算，符号：\\leq，如：$x+y \\leq z$ 不等于运算，符号：\\neq，如：$x+y \\neq z$ 不大于等于运算，符号：\\ngeq，如：$x+y \\ngeq z$ 不大于等于运算，符号：\\not\\geq，如：$x+y \\not\\geq z$ 不小于等于运算，符号：\\nleq，如：$x+y \\nleq z$ 不小于等于运算，符号：\\not\\leq，如：$x+y \\not\\leq z$ 约等于运算，符号：\\approx，如：$x+y \\approx z$ 恒定等于运算，符号：\\equiv，如：$x+y \\equiv z$ 集合运算 属于运算，符号：\\in，如：$x \\in y$ 不属于运算，符号：\\notin，如：$x \\notin y$ 不属于运算，符号：\\not\\in，如：$x \\not\\in y$ 子集运算，符号：\\subset，如：$x \\subset y$ 子集运算，符号：\\supset，如：$x \\supset y$ 真子集运算，符号：\\subseteq，如：$x \\subseteq y$ 非真子集运算，符号：\\subsetneq，如：$x \\subsetneq y$ 真子集运算，符号：\\supseteq，如：$x \\supseteq y$ 非真子集运算，符号：\\supsetneq，如：$x \\supsetneq y$ 非子集运算，符号：\\not\\subset，如：$x \\not\\subset y$ 非子集运算，符号：\\not\\supset，如：$x \\not\\supset y$ 并集运算，符号：\\cup，如：$x \\cup y$ 交集运算，符号：\\cap，如：$x \\cap y$ 差集运算，符号：\\setminus，如：$x \\setminus y$ 同或运算，符号：\\bigodot，如：$x \\bigodot y$ 同与运算，符号：\\bigotimes，如：$x \\bigotimes y$ 实数集合，符号：\\mathbb{R}，如：\\mathbb{R} 自然数集合，符号：\\mathbb{Z}，如：\\mathbb{Z} 空集，符号：\\emptyset，如：$\\emptyset$ 数学符号 无穷，符号：\\infty，如：$\\infty$ 虚数，符号：\\imath，如：$\\imath$ 虚数，符号：\\jmath，如：$\\jmath$ 数学符号，符号\\hat{a}，如：$\\hat{a}$ 数学符号，符号\\check{a}，如：$\\check{a}$ 数学符号，符号\\breve{a}，如：$\\breve{a}$ 数学符号，符号\\tilde{a}，如：$\\tilde{a}$ 数学符号，符号\\bar{a}，如：$\\bar{a}$ 矢量符号，符号\\vec{a}，如：$\\vec{a}$ 数学符号，符号\\acute{a}，如：$\\acute{a}$ 数学符号，符号\\grave{a}，如：$\\grave{a}$ 数学符号，符号\\mathring{a}，如：$\\mathring{a}$ 一阶导数符号，符号\\dot{a}，如：$\\dot{a}$ 二阶导数符号，符号\\ddot{a}，如：$\\ddot{a}$ 上箭头，符号：\\uparrow，如：$\\uparrow$ 上箭头，符号：\\Uparrow，如：$\\Uparrow$ 下箭头，符号：\\downarrow，如：$\\downarrow$ 下箭头，符号：\\Downarrow，如：$\\Downarrow$ 左箭头，符号：\\leftarrow，如：$\\leftarrow$ 左箭头，符号：\\Leftarrow，如：$\\Leftarrow$ 右箭头，符号：\\rightarrow，如：$\\rightarrow$ 右箭头，符号：\\Rightarrow，如：$\\Rightarrow$ 底端对齐的省略号，符号：\\ldots，如：$1,2,\\ldots,n$ 中线对齐的省略号，符号：\\cdots，如：$x_1^2 + x_2^2 + \\cdots + x_n^2$ 竖直对齐的省略号，符号：\\vdots，如：$\\vdots$ 斜对齐的省略号，符号：\\ddots，如：$\\ddots$ 希腊字母 字母 实现 字母 实现 A A α \\alhpa B B β \\beta Γ \\Gamma γ \\gamma Δ \\Delta δ \\delta E E ϵ \\epsilon Z Z ζ \\zeta H H η \\eta Θ \\Theta θ \\theta I I ι \\iota K K κ \\kappa Λ \\Lambda λ \\lambda M M μ \\mu N N ν \\nu Ξ \\Xi ξ \\xi O O ο \\omicron Π \\Pi π \\pi P P ρ \\rho Σ \\Sigma σ \\sigma T T τ \\tau Υ \\Upsilon υ \\upsilon Φ \\Phi ϕ \\phi X X χ \\chi Ψ \\Psi ψ \\psi Ω \\v ω \\omega 多种矩阵形式输入 不带括号的: $$\\begin{matrix} 1&amp;2 \\ 3&amp;4 \\ 5&amp;6 \\end{matrix} $$ 带大括号的: $$\\left{ \\begin{matrix} 1&amp;2 \\ 3&amp;4 \\ 5&amp;6 \\end{matrix} \\right} $$ 带中括号的: $$\\left[ \\begin{matrix} 1&amp;2 \\ 3&amp;4 \\ 5&amp;6 \\end{matrix} \\right] $$","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/Markdown%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E8%AF%AD%E6%B3%95/"},{"title":"","text":"叶片弦长 b =120 .5mm 轴向弦长 B =118 .5mm Energy Loss Coefficients 能量损失系数：ξm 总压损失系数：ω","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/CFD%E7%AC%A6%E5%8F%B7%E8%AE%B0%E5%BD%95/"},{"title":"","text":"在前面几篇文章中，我们已经介绍了高性能Python遗传和进化算法框架——Geatpy的使用。 https://blog.csdn.net/qq_33353186/article/details/82014986 https://blog.csdn.net/qq_33353186/article/details/82020507 https://blog.csdn.net/qq_33353186/article/details/82021750（待更新） 本篇就一个案例进行展开讲述： 值得一提的是，经过全新改版，Geatpy团队推出了C内核加持的超高性能进化算法工具箱Geatpy2，新增了面向对象的进化算法框架，使得既编程简单，速度也飞快！官网：http://www.geatpy.com 回顾一下Geatpy的安装方法，在上面的第一个链接的文章里也有详细讲解。 pip install geatpy 更新至Geatpy2的方法： pip install –upgrade –user geatpy 查看版本号，在Python中执行： import geatpy print(geatpy.version) 我们都听过“无限猴子定理”，说的是有无限只猴子用无限的时间会产生特定的文章。在无限猴子定理中，我们“假定”猴子们是没有像人类那样“智能”的，而且“假定”猴子不会自我学习。因此，这些猴子需要“无限的时间”。 而在遗传算法中，由于采用的是启发式的进化搜索，因此不需要”无限的时间“就可以完成类似的工作。当然，需要产生的文章篇幅越长，那么就需要越久的时间才能完成。 下面以产生”Tom is a little boy, isn’t he? Yes he is, he is a good and smart child and he is always ready to help others, all in all we all like him very much.”的句子为例，讲述如何利用Geatpy实现句子的搜索。之前的文章中我们已经讲述过如何使用Geatpy的进化算法框架实现遗传算法编程。这里就直接用框架。 把自定义问题类和执行脚本编写在下面的”main.py”文件中： -- coding: utf-8 -- import numpy as np import geatpy as ea “”” 问题类 “”” classMyProblem(ea.Problem):# 继承Problem父类 def__init__(self): name = 'MyProblem'# 初始化name（函数名称，可以随意设置） 定义需要匹配的句子 strs = 'Tom is a little boy, isn\\'t he? Yes he is, he is a good and smart child and he is always ready to help others, all in all we all like him very much.' self.words = [] for c in strs: self.words.append(ord(c)) # 把字符串转成ASCII码 M = 1# 初始化M（目标维数） maxormins = [1] # 初始化maxormins（目标最小最大化标记列表，1：最小化该目标；-1：最大化该目标） Dim = len(self.words) # 初始化Dim（决策变量维数） varTypes = [1] * Dim # 初始化varTypes（决策变量的类型，元素为0表示对应的变量是连续的；1表示是离散的） lb = [32] * Dim # 决策变量下界 ub = [122] * Dim # 决策变量上界 lbin = [1] * Dim # 决策变量下边界 ubin = [1] * Dim # 决策变量上边界 调用父类构造方法完成实例化 ea.Problem.__init__(self, name, M, maxormins, Dim, varTypes, lb, ub, lbin, ubin) defaimFunc(self, pop):# 目标函数 Vars = pop.Phen # 得到决策变量矩阵 diff = np.sum((Vars - self.words)**2, 1) pop.ObjV = np.array([diff]).T # 把求得的目标函数值赋值给种群pop的ObjV “”” 执行脚本 “”” if name == “main“: “””================================实例化问题对象=============================””” problem = MyProblem() # 生成问题对象 “””==================================种群设置================================””” Encoding = 'RI'# 编码方式 NIND = 50# 种群规模 Field = ea.crtfld(Encoding, problem.varTypes, problem.ranges, problem.borders) # 创建区域描述器 population = ea.Population(Encoding, Field, NIND) # 实例化种群对象（此时种群还没被初始化，仅仅是完成种群对象的实例化） “””================================算法参数设置==============================””” myAlgorithm = ea.soea_DE_rand_1_L_templet(problem, population) # 实例化一个算法模板对象 myAlgorithm.MAXGEN = 2000# 最大进化代数 “””===========================调用算法模板进行种群进化=========================””” [population, obj_trace, var_trace] = myAlgorithm.run() # 执行算法模板 population.save() # 把最后一代种群的信息保存到文件中 输出结果 best_gen = np.argmin(obj_trace[:, 1]) # 记录最优种群是在哪一代 best_ObjV = obj_trace[best_gen, 1] print('最优的目标函数值为：%s'%(best_ObjV)) print('有效进化代数：%s'%(obj_trace.shape[0])) print('最优的一代是第 %s 代'%(best_gen + 1)) print('评价次数：%s'%(myAlgorithm.evalsNum)) print('时间已过 %s 秒'%(myAlgorithm.passTime)) for num in var_trace[best_gen, :]: print(chr(int(num)), end = '') 上述代码中首先定义了一个问题类MyProblem，然后调用Geatpy内置的soea_DE_rand_1_L_templet算法模板，它实现的是差分进化算法DE/rand/1/L，详见源码： https://github.com/geatpy-dev/geatpy/blob/master/geatpy/templates/soeas/DE/DE_rand_1_L/soea_DE_rand_1_L_templet.py 运行结果如下： 种群信息导出完毕。 最优的目标函数值为：0.0 有效进化代数：2000 最优的一代是第 1748 代 评价次数：100000 时间已过 4.798132419586182 秒 Tom is a little boy, isn’t he? Yes he is, he is a good and smart child and he is always ready to help others, all in all we all like him very much. 可见采用差分进化算法DE/rand/1/L能够准确无误地找到上面的句子。 下一篇文章将讲述我使用Geatpy解决多目标优化问题以及跟Matlab遗传算法工具箱进行对比学习。 https://blog.csdn.net/qq_33353186/article/details/82082053 在后面的文章中我们将对更多的编程案例进行详解。欢迎继续跟进，感谢！","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/(4%E6%9D%A1%E6%B6%88%E6%81%AF)Python%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B%EF%BC%88%E4%B8%80%EF%BC%89%E4%BD%BF%E7%94%A8Geatpy%E5%AE%9E%E7%8E%B0%E5%8F%A5%E5%AD%90%E5%8C%B9%E9%85%8D_jazzbin%E7%9A%84%E5%8D%9A%E5%AE%A2-CSDN%E5%8D%9A%E5%AE%A2_geatpy%20%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"},{"title":"","text":"https://www.runoob.com/markdown/md-tutorial.html 1、 Markdown 简介 Markdown是一种轻量级标记语言，创始人是约翰·格鲁伯(John Gruber)。它允许人们 “使用易读易写的纯文本格式编写文档，然后转换成有效的 HTML 文档。Markdown 是目前互联网上最流行的写作语言，它使用一些简单的符号（# * / &gt; [] ()\\ ）来标记文本格式。它的语法非常简单，一看就会；另外，有很多非常好看的格式可以选择。 2、Markdown 语法 3、Markdown 编辑器现在主流的Markdown工具有Typora、Ulysses等等，其实这些工具都大同小异。Windows 上的 Markdown 编辑器推荐 Typora 。 在线编辑推荐Md2All(https://md.aclickall.com/)。","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/Markdown%20%E5%AD%A6%E4%B9%A0/"},{"title":"","text":"平面叶栅： 环形叶栅： 扇形叶栅： 五孔探针：","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/%E5%8F%B6%E6%A0%85%E9%A3%8E%E6%B4%9E%E5%AE%9E%E9%AA%8C/"},{"title":"","text":"Word查找栏代码·通配符一览表 序号 清除使用通配符复选框 勾选使用通配符复选框 特殊字符 代码 特殊字符 代码or通配符 1 任意单个字符 ^? 任意单个字符 ? 2 任意数字 ^# 任意数字（单个） [0-9] 3 任意英文字母 ^$ 任意英文字母 [a-zA-Z] 4 段落标记 ^p 段落标记 ^13 5 手动换行符 ^l 手动换行符 ^l or ^11 6 图形 ^g or ^1 图形 ^g 7 1/4长划线 ^+ 1/4长划线 ^q 8 长划线 ^j 长划线 ^+ 9 短划线 ^q 短划线 ^= 10 制表符 ^t 制表符 ^t 11 脱字号 ^ 脱字号 ^^ 12 分栏符 ^v 分栏符 ^n or ^14 13 分节符 ^b 分节符/分页符 ^m 14 省略号 ^n 省略号 ^i 15 全角省略号 ^i 全角省略号 ^j 16 无宽非分隔符 ^z 无宽非分隔符 ^z 17 无宽可选分隔符 ^x 无宽可选分隔符 ^x 18 不间断空格 ^s 不间断空格 ^s 19 不间断连字符 ^~ 不间断连字符 ^~ 20 ¶段落符号 ^% 表达式 ( ) 21 §分节符 ^ 单词结尾 &lt; 22 脚注标记 ^f or ^2 单词开头 &gt; 23 可选连字符 ^- 任意字符串 * 24 空白区域 ^w 指定范围外任意单个字符 [!x-z] 25 手动分页符 ^m 指定范围内任意单个字符 [ - ] 26 尾注标记 ^e 1个以上前一字符或表达式 @ 27 域 ^d n 个前一字符或表达式 { n } 28 Unicode 字符 ^Unnnn n个以上前一字符或表达式 { n, } 29 全角空格 ^u8195 n 到 m 个前一字符或表达式 { n,m } 30 半角空格 ^32 or ^u8194 所有小写英文字母 [a-z] 31 批注 ^a or ^5 所有大写英文字母 [A-Z] 32 所有西文字符 [^1-^127] 33 所有中文汉字和中文标点 [!^1-^127] 34 所有中文汉字（CJK统一字符） [一-龥] or [一-﨩] 35 所有中文标点 [!一-龥^1-^127] 36 所有非数字字符 [!0-9] 注：要查找已被定义为通配符的字符，该字符前键入反斜杠 \\ 。查找？、*、（、）、[ 、] 等的代码分别是\\？、*、(、)、[、] 。 Word替换栏代码·通配符一览表 序号 清除使用通配符复选框 勾选使用通配符复选框 特殊字符 代码 特殊字符 代码or通配符 0 要查找的表达式 \\n \\ 1 段落标记↵ ^p 段落标记↵ ^p 2 手动换行符↓ ^l 手动换行符↓ ^l 3 查找的内容 ^&amp; 查找的内容 ^&amp; 4 剪贴板内容 ^c 剪贴板内容 ^c 5 省略号 ^i 省略号 ^i 6 全角省略号 ^j 全角省略号 ^j 7 制表符 ^t 制表符 ^t 8 长划线 ^+ 长划线 ^+ 9 1/4长划线( — ) ^q 1/4长划线( — ) ^q 10 短划线( – ) ^= 短划线( – ) ^= 11 脱字号 ^^ 脱字号 ^^ 12 手动分页符 ^m or ^12 手动分页符/分节符 ^m 13 可选连字符（_） ^- 可选连字符（_） ^- 14 不间断连字符（-） ^~ 不间断连字符（-） ^~ 15 不间断空格 ^s 不间断空格 ^s 16 无宽非分隔符 ^z 无宽非分隔符 ^z 17 无宽可选分隔符 ^x 无宽可选分隔符 ^x 18 分栏符 ^n 分栏符 ^n 19 §分节符 ^% §分节符 ^% 20 ¶段落符号 ^v ¶段落符号 ^v Word通配符用法详解 1、任意单个字符： “?”可以代表任意单个字符，输入几个“?”就代表几个未知字符。如： 输入“? 国”就可以找到诸如“中国”、“美国”、“英国”等字符； 输入“???国”可以找到“孟加拉国”等字符。 2、任意多个字符： “*”可以代表任意多个字符。如： 输入“*国”就可以找到“中国”、“美国”、 “孟加拉国”等字符。 3、指定字符之一： “[]”框内的字符可以是指定要查找的字符之一，如： 输入“[中美]国”就可以找到“中国”、“美国”。 又如： 输入“th[iu]g”，就可查找到“thigh”和“thug”。 输入“[学硕博]士”，查找到的将会是学士、士、硕士、博士。 输入“[大中小]学”可以查找到“大学”、“中学”或“小学”，但不查找“求学”、“开学”等。 输入“[高矮]个”的话，Word查找工具就可以找到“高个”、“矮个”等内容。 4、指定范围内的任意单个字符： “[x-x]”可以指定某一范围内的任意单个字符，如： 输入“[a-e]ay”就可以找到“bay”、“day”等字符，要注意的是指定范围内的字符必须用升序。 用升序。如： 输入“[a-c]mend”的话，Word查找工具就可以找到“amend”、“bmend”、“cmend”等字符内容。 5、排除指定范、排除指定范围内的任意单个字符： “[!x-x]”可以用来排除指定范围内的任意单个字符，如： 输入“[!c-f]”就可以找到“bay”、“gay”、“lay”等字符，但是不等字符，但是不会找到“cay”、“day”等字符。要注意范围必须用升序。 又如： 输入“[!a-c]”的话，word程序就可以找到“good”、“see”、“these”等目标字符，而所有包含字符a、b、c之类的内容都不会在查找结果中出现。 又如： 输入“m[!a]st”，用，用来查找“mist”和“most”不会查找“mast”。 输入“[!a]n”，查到的将会是除an以外的所有可能组合如：合如：in、on 等。 6、指定前一字符的个数： “{n}”可以用来指定要查找的字符中包含前一字符的个数，如： 输入“cho{1} se”就是说包含1个前一字符“o”，可以找到“chose”，输入“cho{2}se”就是说包含2个前一字符“o”，可以找到， “choose”。 又如： 输入“lit{1}le”就是说包含1个前一字符“t”，可以找到“litle”。 输入“lit{2}le”就是说包含2个前一字符“t”，可以找到“little”。 输入“te{2}n”，表示查找“teen”而不会查找“ten”。 输入“of{2}ice”，查找到的将会是office。 7、指定前一字符、指定前一字符数范围： “{x,x}”可以用指定要查找字符中前一字符数范围，如： 输入“cho{1,2}”，则说明包含前一字符“o”数目范围是1-2个，则可以找到“chose”、“choose”。 8、一个以上的前一字符： “@”可以用来指定要查找字符中包含一个以上的前一字符，如： 输入“cho@se”，就可以找到， “chose”、“choose”等字符。 9、指定起始字符串： “&lt;”可以用来指定要查找字符中的起始字符串，如： 输入“ 输入“ 10、指定结尾字符串： “&gt;”可以用来指定要查找字符中的结尾字符串，如： 输入“er&gt;”，就说明要查找的字符的结尾字符为“er”，可以找到 “ver”、“her”、“lover”等等。 输入“en&gt;”， 就说明要查找到以“en”结尾的所有目标对象，可能找到“ten”、“pen”、“men” 输入“up&gt;”，就说明要查找到以“up”结尾的所有目标对象，例如会找到“setup”、“cup”等等。 11、表达式查找： “（）”，尤其用于多个关键词的组合查找。 键入“（America）（China）”，在“替换为”中键入“\\2 \\1”，Word找到“America China”并替换为“China America”。 输入“&lt;(江山)*(多娇)&gt;”，就表示查找的是所有以“江山”开头并且 以“多娇”结尾的字符串。 另外为了更精确的查找，你还可以把以上的通配符联合起来使用，如： 输入“&lt;(ag)(er)&gt;”则表示查找所有以“ag”开头并且以“er”结尾的单词，注意这时需要用括号将来区分开不同的查找规则。最后还要注意如果要查找已经被定义为通配符的字符，如“”、“?”等字符，必须在该字符前面加上反斜杠“\\”，如：输入“*”则表示查找字符“*”。 使用通配符搜索 选中“使用通配符”复选框后，Word 只查找与指定文本精确匹配的文本（请注意，“区分大小写”和“全字匹配”复选框会变灰而不可用，表明这些选项已自动选中，您不能关闭这些选项）。 要查找已被定义为通配符的字符，请在该字符前键入反斜扛 ()，例如，要查找问号，可键入“\\？”。 序号 查找内容 通配符 示例 1. 任意单个字符 ? s?t可查找&quot;sat”和&quot;set”。 2. 任意字符串 * s*d可查找&quot;sad”和&quot;started”。 3. 单词的开头 &lt; &lt;(inter)查找&quot;interesting”和&quot;intercept”，但不查找&quot;splintered”。 4. 单词的结尾 &gt; (in)&gt;查找&quot;in”和&quot;within”，但不查找&quot;interesting”。 5. 指定字符之一 [] w[io]n查找&quot;win”和&quot;won”。 6. 指定范围内任意单个字符 [-] [r-t]ight查找&quot;right”和&quot;sight”。必须用升序来表示该范围。 7. 中括号内指定字符范围以外的任意单个字符 [!x-z] t[!a-m]ck查找&quot;tock”和&quot;tuck”，但不查找&quot;tack”和&quot;tick”。 8. n个重复的前一字符或表达式 {n} fe{2}d查找&quot;feed”，但不查找&quot;fed”。 9. 至少n个前一字符或表达式 {n,} fe{1,}d查找&quot;fed”和&quot;feed”。 10. n到m个前一字符或表达式 {n,m} 10{1,3}查找&quot;10”、&quot;100”和&quot;1000”。 11. 一个以上的前一字符或表达式 @ lo@t查找&quot;lot”和&quot;loot”。 一些代码只有在选中或清除“使用通配符”选项时才能使用。 使用代码搜索 可以在“查找内容”或“替换为”框中使用的代码 段落标记() 键入^p（选中&quot;使用通配符”复选框时在&quot;查找内容”框中无效）或键入^13 制表符() 键入^t或键入^9 ASCII字符 键入^nnn，其中nnn是字符代码 ANSIcharacter 键入^0nnn，其中nnn是字符代码 长划线(—) 键入^+ 短划线(–) 键入^= 脱字号 键入^^ 手动换行符() 键入^l或键入^11 分栏符 键入^n或键入^14 分页符或分节符 键入^12（替换时，插入分页符） 手动分页符 键入^m（当选中&quot;使用通配符”复选框时，还将查找或替换分节符） 不间断空格() 键入^s 不间断连字符() 键入^~ 可选连字符() 键入^- 只能在“查找内容”框中使用的代码（选中“使用通配符”复选框时） 图片或图形（仅嵌入） 键入^g 只能在“查找内容”框中使用的代码（清除“使用通配符”复选框时） 任意字符 键入^? 任意数字 键入^# 任意字 键入^$ Unicode字符 键入^Unnnn，其中&quot;nnnn”是字符代码 图片或图形（仅嵌入） 键入^1 脚注标记 键入^f或键入^2 尾注标记 键入^e 域 键入^d 正在打开域大括号（当域代码可见时） 键入^19 正在关闭域大括号（当域代码可见时） 键入^21 批注 键入^a或键入^5 分节符 键入^b 全角空格(Unicode) 键入^u8195 半角空格(Unicode) 键入^u8194 白色空格 键入^w（可以是常规空格、不间断空格以及制表符的任意组合） 只能在“替换为”框中使用的代码 &quot;Windows剪贴板”的内容 键入^c &quot;查找内容”框的内容 键入^&amp; 选中“使用通配符”复选框后，Microsoft Word 不识别在“查找内容”框中输入的用于下列项目的代码：尾注和脚注标记、域、段落标记、分节符或空白区域。若要搜索这些项目，可以在“查找内容”框中键入下列替换代码。（注意，没有可用于域的替换代码） 若要查找脚注或尾注标记 键入&quot;^2” 注意，Word 无法区分脚注和尾注标记。 若要查找段落标记 键入&quot;^13” 若要查找分节符 键入&quot;^12” Word 将搜索手动分页符和分节符。 查找空白区域 键入&quot;空格{1,}” 例子： 将word文档中相邻的两个数字间都加入tab制表位 查找正则：([0-9])([0-9]) 替换正则：\\1^t\\2 补：word中使用正则做替换时对分组的引用是使用\\n的形式（n为分组的数字） 来自 http://www.cnblogs.com/kevin-yuan/archive/2012/11/18/2775714.html Word通配符 1、要查找已被定义为通配符的字符，需在该字符前键入反斜杠\\。 2、如果使用了通配符，在查找文字时会大小写敏感。如果希望查找大写和小写字母的任意组合，那么请使用方括号通配符。 3、使用通配符时，Word只查找整个单词。例如，搜索“e*r ”可找到“enter”，但不会找到“entertain”。如果要查找单词的所有形式，需要使用适当的通配符字符。 4、选中“使用通配符”复选框后，也可查找脚注和尾注、域、段落标记、分节符和人工分页符及空白区域。只要在“查找内容”框中键入替代代码即可。 5、如果包含可选连字符代码，Word 只会找到在指定位置带有可选连字符的文字。如果省略可选连字符代码，Word 将找到所有匹配的文字，包括带有可选连字符的文字。 6、如果要查找域，必需显示域代码。要在显示域代码和域结果之间切换，请单击该域，然后按 Shift+F9 组合键。要显示或隐藏文档中所有的域代码，请按 Alt+F9 组合键。 7、在查找图形时，Word 只查找嵌入图形，而不能查找浮动图形。在默认情况下，Word 会将导入的图形以嵌入图形的方式插入到文档中。","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/Microsoft%20Word%20%E4%B9%8B%20%E9%80%9A%E9%85%8D%E7%AC%A6%E5%8C%B9%E9%85%8D%20-%20%E5%A5%94%E8%B7%91%E7%9A%84%E8%92%B2%E5%85%AC%E8%8B%B1%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD/"},{"title":"","text":"1、批量视频转音频 2、Chrome/Edge浏览器辅助增强，悬停激活/双击/右键/滚轮/快捷操作 1、批量视频转音频编写：“批量视频转音频.bat” 如下 1234567f:cd C:\\Users\\Administrator\\Downloads\\Videoffmpeg.exe -i 001.mp4 -f mp3 -vn 001.mp3ffmpeg.exe -i 002.mp4 -f mp3 -vn 002.mp3ffmpeg.exe -i 003.mp4 -f mp3 -vn 003.mp3ffmpeg.exe -i 004.mp4 -f mp3 -vn 004.mp3ffmpeg.exe -i 005.mp4 -f mp3 -vn 005.mp3 注意：文件名不可以含有中文 C:\\Users\\Administrator\\Downloads\\Video 为视频所在路径，转换的MP3文件也在此目录 ffmpeg.exe 需要放在此文件夹内 ffmpeg.exe 2、Chrome/Edge浏览器辅助增强，悬停激活/双击/右键/滚轮/快捷操作 基于AutoHotkey脚本制作，本版适配于Chrome和Edge，理论上chromium内核的浏览器通用。本程序适用于原生浏览器辅助增强，想要更多功能的请使用其他第三方浏览器！ 主要功能如下： 双击关闭标签页 右键关闭标签页 滚轮切换标签页 悬停激活标签页 [右键+左键]：恢复关闭的标签页（在网页区域内） [右键双击]：显示书签栏（在标签栏时） [左键+右键]：快速复制（按住左键选择后，单击右键，复制成功后会有提示） [中键单击]：快速粘贴 按住中键滚动：上滚放大网页比例，下滚缩小网页比例（在标签栏时） 按住中键滚动：上滚返回顶部，下滚到达底部（在网页区域内） ALT+x 全局老板键，显示隐藏都是此快捷键，不只chrome使用，其他窗口文件通用 关于悬停激活标签页功能目前是测试版，仅在最大化窗口有效，悬停激活标签页是通过取色执行的，所以请使用原生主题，不喜欢请在配置里关闭即可。 关于手势扩展：程序右键优先级高，导致手势扩展不能使用，请使用其他第三方全局手势，有舍有得！ TabPlus为托盘版点击“托盘图标”可以方便地自主启用关闭功能，ChromeTab为进程版请修改INI配置启用关闭功能。 修正悬停激活误触网页内容区域问题,把双击关闭延迟降到最低 TabPlus：https://www.lanzous.com/i9yubyd ChromeTab：https://www.lanzous.com/i9yubze","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/%E7%94%B5%E8%84%91%E6%8A%80%E5%B7%A7/"},{"title":"","text":"","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/%E6%97%A0%E6%A0%87%E9%A2%98%E7%AC%94%E8%AE%B0(1)/"},{"title":"","text":"***** , thus significantly increasing 比如： This implies that recipients regulate their markets according to donor requirements, thus significantly increasing exports from Australia and New Zealand. Handbook on the Economics of Foreign Aid: - 第 174 页 一般用不用复数形式的表达：impact、reseach。在 http://corpus.byu.edu/coca/ 中搜索impact|impacts或者research|researches后可以看到，复数表达很少。 用 ，as such 替换 ，so 和 , therefore","link":"/2023/03/07/013_%E5%AD%A6%E4%B9%A0/%E7%A7%91%E5%AD%A6%E7%BD%91%E2%80%94%E8%8B%B1%E6%96%87%E6%83%AF%E7%94%A8%E8%A1%A8%E8%BE%BE/"}],"tags":[],"categories":[],"pages":[]}